(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    768370,      16609]
NotebookOptionsPosition[    749804,      16290]
NotebookOutlinePosition[    750145,      16305]
CellTagsIndexPosition[    750102,      16302]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Predict next of Graphics line with RNN", "Subsection",
 CellChangeTimes->{{3.820291752156893*^9, 3.820291752660325*^9}, {
  3.820292109613409*^9, 
  3.820292134655053*^9}},ExpressionUUID->"10bebdbb-4535-45d5-b953-\
b3df8b403dbe"],

Cell[CellGroupData[{

Cell["1\tprepare datasets", "Subsubsection",
 CellChangeTimes->{{3.8202917607943645`*^9, 
  3.8202917824836483`*^9}},ExpressionUUID->"fa8d4040-cd12-45f1-b6f3-\
94b34b2aded8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"GT", "=", "GeometricTransformation"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ST", "=", "ScalingTransform"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TT", "=", "TranslationTransform"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RT", "=", "RotationTransform"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.820291566505807*^9, 3.820291566506813*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"f492b6b0-b311-487a-81ff-787493fd5f6b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RandomGraphic", "[", "]"}], ":=", 
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"GT", "[", 
      RowBox[{
       RowBox[{"RandomChoice", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Rectangle", "[", 
             RowBox[{"#", ",", 
              RowBox[{"#", "+", 
               RowBox[{"RandomInteger", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "5"}], "}"}], ",", "2"}], "]"}]}]}], 
             "]"}], "&"}], "@", 
           RowBox[{"RandomInteger", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "5"}], "}"}], ",", "2"}], "]"}]}], ",", 
          RowBox[{"GT", "[", 
           RowBox[{
            RowBox[{"Polygon", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"2", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
            RowBox[{"ST", "[", 
             RowBox[{"RandomReal", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1.5", ",", "2.5"}], "}"}], ",", "2"}], "]"}], 
             "]"}]}], "]"}]}], "}"}], "]"}], ",", 
       RowBox[{
        RowBox[{"TT", "[", 
         RowBox[{"RandomReal", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", "2"}], "]"}], "]"}], 
        ".", 
        RowBox[{"RT", "[", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "256"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "15"}], ",", "15"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "15"}], ",", "15"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8202915882722573`*^9, 3.8202915882742577`*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"ff1406fd-e301-4375-9f46-e7662facc965"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FlattenGraphics", "[", "gr_Graphics", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"gr1", ",", "gr2", ",", "gr3", ",", "gr4", ",", "gr5"}], "}"}], 
    ",", 
    RowBox[{
     RowBox[{
      RowBox[{"gr1", "=", " ", 
       RowBox[{"Replace", "[", 
        RowBox[{"gr", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"x1_", ",", "y1_"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"x2_", ",", "y2_"}], "}"}]}], "]"}], "\[RuleDelayed]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"x1", ",", "y1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"x2", ",", "y1"}], "}"}]}], "}"}], "]"}], ",", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"x2", ",", "y1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"x2", ",", "y2"}], "}"}]}], "}"}], "]"}], ",", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"x2", ",", "y2"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"x1", ",", "y2"}], "}"}]}], "}"}], "]"}], ",", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"x1", ",", "y2"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"x1", ",", "y1"}], "}"}]}], "}"}], "]"}]}], "}"}]}],
            ",", 
           RowBox[{
            RowBox[{"Polygon", "[", "a__", "]"}], "\[RuleDelayed]", 
            RowBox[{"Line", "/@", 
             RowBox[{"Partition", "[", 
              RowBox[{"a", ",", "2", ",", "1", ",", "1"}], "]"}]}]}]}], "}"}],
          ",", "All"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"gr2", "=", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{"gr1", ",", 
         RowBox[{"Rotate", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", "}"}], "}"}], ",", "_", ",", "_"}], "]"}], ",", 
         "All"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"gr3", "=", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{"gr2", ",", 
         RowBox[{"Translate", "[", 
          RowBox[{
           RowBox[{"{", "}"}], ",", "_"}], "]"}], ",", "All"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"gr4", "=", 
       RowBox[{"Replace", "[", 
        RowBox[{
         RowBox[{"List", "@", "gr3"}], ",", 
         RowBox[{
          RowBox[{"GeometricTransformation", "[", 
           RowBox[{"g__", ",", 
            RowBox[{"{", 
             RowBox[{"m__", ",", "v__"}], "}"}]}], "]"}], "\[RuleDelayed]", 
          RowBox[{"Replace", "[", 
           RowBox[{"g", ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"x_Integer", "|", "x_Real"}], ",", 
               RowBox[{"y_Integer", "|", "y_Real"}]}], "}"}], 
             "\[RuleDelayed]", 
             RowBox[{
              RowBox[{"m", ".", 
               RowBox[{"{", 
                RowBox[{"x", ",", "y"}], "}"}]}], "+", "v"}]}], ",", "All"}], 
           "]"}]}], ",", 
         RowBox[{"-", "1"}]}], "]"}]}], ";"}], ";", "\[IndentingNewLine]", 
     RowBox[{"gr5", "=", 
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"Cases", "[", 
         RowBox[{"gr4", ",", "_Line", ",", "All"}], "]"}], ",", 
        RowBox[{"Options", "@", "gr"}]}], "]"}]}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8202915961501083`*^9, 3.820291596153133*^9}, 
   3.8202916528652315`*^9},
 CellLabel->"In[10]:=",ExpressionUUID->"1e17a569-6693-4921-976b-2b49592c858c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GraphicsTransformation2Origin", "[", "gr_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"grF", ",", "firstLine", ",", "len", ",", "tf"}], "}"}], ",", 
     RowBox[{
      RowBox[{"firstLine", "=", 
       RowBox[{"gr", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"len", "=", 
       RowBox[{"EuclideanDistance", "@@", "firstLine"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tf", "=", 
       RowBox[{
        RowBox[{"FindGeometricTransform", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"len", ",", "0"}], "}"}]}], "}"}], ",", "firstLine"}], 
         "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"tf", ",", 
        RowBox[{"Graphics", "@", 
         RowBox[{"Replace", "[", 
          RowBox[{
           RowBox[{"gr", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x_Integer", "|", "x_Real"}], ",", 
              RowBox[{"y_Integer", "|", "y_Real"}]}], "}"}], "\[RuleDelayed]", 
            RowBox[{"tf", "@", 
             RowBox[{"{", 
              RowBox[{"x", ",", "y"}], "}"}]}]}], ",", "All"}], "]"}]}]}], 
       "}"}]}]}], "]"}]}], "\[IndentingNewLine]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8202916588409886`*^9, 3.8202916588439875`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"25c63d64-db7a-46f4-8ec8-3098716100d1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GraphicsTransform2Site", "[", 
   RowBox[{"gr_", ",", "tf_"}], "]"}], ":=", 
  RowBox[{"Graphics", "[", 
   RowBox[{
    RowBox[{"Replace", "[", 
     RowBox[{
      RowBox[{"gr", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x_Integer", "|", "x_Real"}], ",", 
         RowBox[{"y_Integer", "|", "y_Real"}]}], "}"}], "\[RuleDelayed]", 
       RowBox[{"tf", "@", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}]}]}], ",", "All"}], "]"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "256"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "15"}], ",", "15"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "15"}], ",", "15"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8202916829221106`*^9, 3.8202916829241133`*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"bca9a2d2-a5f0-4c18-bf95-6f4a598db1fa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Graphics2Graph", "[", "gr_Graphics", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "gr6", ",", "coords", ",", "vertices", ",", "rules", ",", "edges", ",", 
      "graph"}], "}"}], ",", 
    RowBox[{
     RowBox[{"gr6", "=", 
      RowBox[{"First", "@", 
       RowBox[{"FlattenGraphics", "@", "gr"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"coords", "=", 
      RowBox[{"DeleteDuplicates", "@", 
       RowBox[{"Cases", "[", 
        RowBox[{"gr6", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x_Integer", "|", "x_Real"}], ",", 
            RowBox[{"y_Integer", "|", "y_Real"}]}], "}"}], "\[RuleDelayed]", 
          RowBox[{"1.", 
           RowBox[{"{", 
            RowBox[{"x", ",", "y"}], "}"}]}]}], ",", "All"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"vertices", "=", 
      RowBox[{"Range", "@", 
       RowBox[{"Length", "@", "coords"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"rules", "=", 
      RowBox[{"Thread", "[", 
       RowBox[{"coords", "\[Rule]", "vertices"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"edges", "=", 
      RowBox[{"Cases", "[", 
       RowBox[{
        RowBox[{"Replace", "[", 
         RowBox[{"gr6", ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x_Integer", "|", "x_Real"}], ",", 
             RowBox[{"y_Integer", "|", "y_Real"}]}], "}"}], "\[RuleDelayed]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1.", 
               RowBox[{"{", 
                RowBox[{"x", ",", "y"}], "}"}]}], ")"}], "/.", "rules"}], 
            ")"}]}], ",", "All"}], "]"}], ",", 
        RowBox[{"a_Line", "\[RuleDelayed]", 
         RowBox[{"DirectedEdge", "@@", 
          RowBox[{"First", "@", "a"}]}]}], ",", "1"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"graph", "=", 
      RowBox[{"Graph", "[", 
       RowBox[{"vertices", ",", "edges", ",", 
        RowBox[{"VertexCoordinates", "\[Rule]", "coords"}]}], "]"}]}]}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8202916958105736`*^9, 3.820291695812577*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"a09870c1-3406-45b2-8b22-a1f019a02718"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Graph2Turtle", "[", "gr_Graph", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"vl", ",", "el", ",", "cl", ",", "elC", ",", "ll", ",", "al"}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"vl", "=", 
      RowBox[{"VertexList", "@", "gr"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"el", "=", 
      RowBox[{"List", "@@@", 
       RowBox[{"EdgeList", "@", "gr"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"cl", "=", 
      RowBox[{"PropertyValue", "[", 
       RowBox[{"gr", ",", "VertexCoordinates"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"elC", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Part", "[", 
         RowBox[{"cl", ",", "#"}], "]"}], "&"}], "/@", "el"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ll", "=", 
      RowBox[{"EuclideanDistance", "@@@", "elC"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"al", "=", 
      RowBox[{"Prepend", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "-", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "&"}], "/@", 
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"PlanarAngle", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0"}], "}"}]}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], "&"}], "/@",
             "elC"}], ",", "2", ",", "1"}], "]"}]}], ",", "0"}], "]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"ll", ",", "al"}], "}"}], "]"}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.820291699220257*^9, 3.820291699226242*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"dd7539b7-fb70-4276-9694-6c87d21655d6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Turtle2Graphics", "[", "tCode_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tPos", ",", "tAngle", ",", "tPosA"}], "}"}], ",", 
     RowBox[{
      RowBox[{"tPos", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"tCode", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "0"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tAngle", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"FoldList", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"tPosA", "=", "tPos"}], ";", "\[IndentingNewLine]", 
             RowBox[{"tAngle", "=", 
              RowBox[{"tAngle", "+", 
               RowBox[{"#2", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"tPos", "=", 
              RowBox[{"tPosA", "+", 
               RowBox[{
                RowBox[{"RotationTransform", "[", "tAngle", "]"}], "@", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"#2", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", "0"}], "}"}]}]}]}], 
             ";", "\[IndentingNewLine]", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{"tPosA", ",", "tPos"}], "}"}], "]"}]}], ")"}], "&"}], 
          ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", "tPos"}], "}"}], "]"}], 
          ",", 
          RowBox[{"Rest", "@", "tCode"}]}], "]"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "10"}]}], "]"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.820291702484037*^9, 3.8202917024860387`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"0ab186f0-1700-4e03-ba71-3b1e637cbd22"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gr", "=", 
  RowBox[{"RandomGraphic", "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.8202917984901114`*^9, 3.820291798492112*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"406543cb-00e0-4adb-b471-fc97adb4564e"],

Cell[BoxData[
 GraphicsBox[
  GeometricTransformationBox[
   RectangleBox[{4, 1}, {9, 3}], {{{-0.5853385788048618, 
    0.8107889664781487}, {-0.8107889664781487, -0.5853385788048618}}, \
{-2.720028797616207, -1.85208295053949}}],
  Frame->True,
  ImageSize->256,
  PlotRange->{{-15, 15}, {-15, 15}}]], "Output",
 CellChangeTimes->{3.8202917994359627`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"78b521bb-8cac-4870-a873-0a1f71e34b18"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Batch", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"gr", ",", "tf", ",", "gr1", ",", "tur"}], "}"}], ",", 
      RowBox[{
       RowBox[{"gr", "=", 
        RowBox[{"RandomGraphic", "[", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"tf", ",", "gr1"}], "}"}], "=", 
        RowBox[{"GraphicsTransformation2Origin", "@", 
         RowBox[{"FlattenGraphics", "@", "gr"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"tur", "=", 
        RowBox[{"Graph2Turtle", "@", 
         RowBox[{"Graphics2Graph", "[", "gr1", "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Most", "@", "#"}], "\[Rule]", 
            RowBox[{"Last", "@", "#"}]}], ",", "tf"}], "}"}], "&"}], "@", 
        "tur"}]}]}], "]"}], "&"}], "/@", 
   RowBox[{"Range", "@", "n"}]}]}]], "Input",
 CellChangeTimes->{{3.8202918057805295`*^9, 3.8202918104046316`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"619e3079-3c01-4636-9934-eeb5dde9597e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataT", "=", 
   RowBox[{"Batch", "@", "100"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataV", "=", 
   RowBox[{"Batch", "@", "10"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.820291816687229*^9, 3.82029181669223*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"cec98a1b-8365-4b8e-b1d4-4639cca27497"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"que", "=", 
   RowBox[{"dataV", "[", 
    RowBox[{"[", 
     RowBox[{"n", ",", "1", ",", "1"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ans", "=", 
   RowBox[{"dataV", "[", 
    RowBox[{"[", 
     RowBox[{"n", ",", "1", ",", "2"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tf", "=", 
   RowBox[{"dataV", "[", 
    RowBox[{"[", 
     RowBox[{"n", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsTransform2Site", "[", 
  RowBox[{
   RowBox[{"Turtle2Graphics", "@", 
    RowBox[{"Append", "[", 
     RowBox[{"que", ",", "ans"}], "]"}]}], ",", 
   RowBox[{"InverseFunction", "@", "tf"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8202918248408947`*^9, 3.8202918340831046`*^9}, {
   3.8202918874298553`*^9, 3.820291895644334*^9}, 3.820292263108624*^9},
 CellLabel->"In[81]:=",ExpressionUUID->"119050e1-c041-4dd6-92ac-c5f20f999280"],

Cell[BoxData[
 GraphicsBox[{
   LineBox[{{-3.263995873715642, 4.221485642172679}, {-2.192459703590179, 
    9.105317154019996}}], 
   LineBox[{{-2.192459703590179, 9.105317154019996}, {-7.076291215437497, 
    10.17685332414546}}], 
   LineBox[{{-7.076291215437497, 10.17685332414546}, {-8.147827385562959, 
    5.293021812298142}}], 
   LineBox[{{-8.147827385562959, 5.293021812298142}, {-3.263995873715643, 
    4.221485642172679}}]},
  Frame->True,
  ImageSize->256,
  PlotRange->{{-15, 15}, {-15, 15}}]], "Output",
 CellChangeTimes->{{3.8202918275548954`*^9, 3.8202918344816046`*^9}, {
   3.8202918852933865`*^9, 3.8202918963244605`*^9}, 3.820292263779792*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"7e429ffe-a95c-4ba0-9c17-242084bb6b05"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataV", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.820291917338475*^9, 3.82029191734*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"6d69c460-14a7-4a4a-b8b1-2517e560cdba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2.549385766875815`", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.5493857668758144`", ",", "4.662048353994558`"}], "}"}]}], 
     "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"3.513495044808208`", ",", 
      RowBox[{"-", "2.331024176997279`"}]}], "}"}]}], ",", 
   RowBox[{"TransformationFunction", "[", 
    RowBox[{"(", 
     TagBox[GridBox[{
        {
         RowBox[{"-", "0.6152859194137845`"}], "0.7883040259767381`", 
         "5.4581774559395`"},
        {
         RowBox[{"-", "0.7883040259767381`"}], 
         RowBox[{"-", "0.6152859194137845`"}], "1.2484599140181614`"},
        {"0.`", "0.`", "1.`"}
       },
       AutoDelete->False,
       GridBoxDividers->{
        "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
         "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      #& ], ")"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.820291917905652*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"acaea6ff-f5cd-4830-8893-33788b26706c"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["2\tsetup a network", "Subsubsection",
 CellChangeTimes->{{3.8202919684222555`*^9, 3.8202919808665295`*^9}, 
   3.8202932373892984`*^9},ExpressionUUID->"4647438c-81a9-4c2b-87a6-\
ed8f20aa5b67"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"net", "=", 
  RowBox[{"NetInitialize", "@", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"LongShortTermMemoryLayer", "[", "12", "]"}], ",", 
       RowBox[{"SequenceLastLayer", "[", "]"}], ",", 
       RowBox[{"LinearLayer", "[", "2", "]"}]}], "}"}], ",", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Varying\>\"", ",", "2"}], "}"}]}], ",", 
     RowBox[{"\"\<Output\>\"", "\[Rule]", 
      RowBox[{"{", "2", "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.820291993419148*^9, 3.8202919934221535`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"f7ee5c61-dbcd-48bc-80f0-beabd1879064"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"2\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["3", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "LongShortTermMemory", "Arrays" -> 
                    Association[
                    "InputGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{12, 2}], 
                    "InputGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{12, 12}], 
                    "InputGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{12}], 
                    "OutputGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{12, 2}], 
                    "OutputGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{12, 12}], 
                    "OutputGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{12}], 
                    "ForgetGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{12, 2}], 
                    "ForgetGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{12, 12}], 
                    "ForgetGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{12}], 
                    "MemoryGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{12, 2}], 
                    "MemoryGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{12, 12}], 
                    "MemoryGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{12}]], "Parameters" -> 
                    Association[
                    "OutputSize" -> 12, "Dropout" -> 
                    NeuralNetworks`ValidatedParameter[None], "$InputSize" -> 
                    2, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2037445959], 
                    "$CellStateConnectedQ" -> False], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2037445959], 2}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2037445959], 12}, 
                    NeuralNetworks`RealT]], "States" -> 
                    Association[
                    "State" -> 
                    NeuralNetworks`TensorT[{12}, NeuralNetworks`RealT], 
                    "CellState" -> 
                    NeuralNetworks`TensorT[{12}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "SequenceLast", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2037445959], 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{12}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{2, 12}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{2}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {2}, "$OutputSize" -> 2, 
                    "$InputSize" -> 12, "$InputDimensions" -> {12}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2037445959], 2}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]], 
                    "InteriorStates" -> 
                    Association[{1, "State"} -> 
                    NeuralNetworks`NetPath["Nodes", "1", "States", "State"], {
                    1, "CellState"} -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "States", "CellState"]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"2\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LongShortTermMemoryLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"12\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SequenceLastLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"12\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.820291999820197*^9},
 CellLabel->"Out[51]=",ExpressionUUID->"8354bbcd-0adf-497e-9c2f-abc080267d60"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataV", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.820292013546134*^9, 3.820292013548134*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"b19ed7cb-9fa6-4f78-beb2-20352ca5729e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2.549385766875815`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.5493857668758144`", ",", "4.662048353994558`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.820292014256063*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"5bb1f1b2-dc1e-45e8-9412-b402270e053e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"net", "@", 
  RowBox[{"dataV", "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "1", ",", "1"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.820292026745226*^9, 3.8202920267462263`*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"bbeadcd4-fbf6-449e-b0c2-0c0de96763da"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.2623523771762848`"}], ",", "0.10704515129327774`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8202920278491*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"f52266af-b740-4327-aeec-2b9b9cd37b67"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"que", "=", 
   RowBox[{"dataV", "[", 
    RowBox[{"[", 
     RowBox[{"n", ",", "1", ",", "1"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ans", "=", 
   RowBox[{"net", "@", 
    RowBox[{"dataV", "[", 
     RowBox[{"[", 
      RowBox[{"n", ",", "1", ",", "1"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tf", "=", 
   RowBox[{"dataV", "[", 
    RowBox[{"[", 
     RowBox[{"n", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsTransform2Site", "[", 
  RowBox[{
   RowBox[{"Turtle2Graphics", "@", 
    RowBox[{"Append", "[", 
     RowBox[{"que", ",", "ans"}], "]"}]}], ",", 
   RowBox[{"InverseFunction", "@", "tf"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.820292038828566*^9, 3.820292038836553*^9}, {
  3.820292511218732*^9, 3.820292519805095*^9}},
 CellLabel->"In[99]:=",ExpressionUUID->"846b6187-cc62-449d-9717-aa41633866c1"],

Cell[BoxData[
 GraphicsBox[{
   LineBox[{{
    0.16811159222732086`, -5.744295565289785}, {-4.214859792822462, \
-8.1504463996796}}], 
   LineBox[{{-4.214859792822462, -8.1504463996796}, {-1.808708958432647, \
-12.53341778472938}}], 
   LineBox[{{-1.808708958432647, -12.53341778472938}, {
    2.5742624266171354`, -10.127266950339564`}}], 
   LineBox[{{2.5742624266171354`, -10.127266950339564`}, {
    2.666775158608642, -10.095285704214724`}}]},
  Frame->True,
  ImageSize->{369., Automatic},
  PlotRange->{{-15, 15}, {-15, 15}}]], "Output",
 CellChangeTimes->{
  3.8202920408738127`*^9, {3.820292511702076*^9, 3.8202925202454886`*^9}},
 CellLabel->
  "Out[103]=",ExpressionUUID->"66b10efa-dde4-48a1-b776-e090e0062dfa"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["3\ttrain and validation", "Subsubsection",
 CellChangeTimes->{{3.8202920599434395`*^9, 3.8202920782905955`*^9}, {
  3.8202932388883457`*^9, 
  3.820293259513262*^9}},ExpressionUUID->"c58d7455-a8d4-4db8-9b1b-\
73c44e1d71db"],

Cell[BoxData[
 RowBox[{
  RowBox[{"netT", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"net", ",", 
     RowBox[{"dataT", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "All", ",", 
     RowBox[{"ValidationSet", "\[Rule]", 
      RowBox[{"dataT", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ",", 
     RowBox[{"TargetDevice", "\[Rule]", "\"\<GPU\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.820292165758849*^9, 3.8202921728349943`*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"f2887952-4aeb-4466-8de6-e992d0946905"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"netT", "[", "\"\<LossPlot\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"netT", "[", "\"\<RoundMeasurements\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"netF", "=", 
  RowBox[{"netT", "[", "\"\<TrainedNet\>\"", "]"}]}]}], "Input",
 CellChangeTimes->{{3.8202922278256645`*^9, 3.820292227828317*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"98584751-92c9-4916-a6ad-7e24b2fedba1"],

Cell[BoxData[
 TemplateBox[{GridBox[{{"", 
      ItemBox["\"rounds\"", DefaultBaseStyle -> "LabeledLabel"]}, {
      RotationBox[
       ItemBox["\"loss\"", DefaultBaseStyle -> "LabeledLabel"], BoxRotation -> 
       1.5708], 
      GraphicsBox[{
        AbsoluteThickness[1.25], {{
          Hue[0.083, 1., 1.], 
          LineBox[CompressedData["
1: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
gATrfxfmwTE=
           "]]}, {}}, {{
          Hue[0.59, 0.7, 0.75], 
          LineBox[CompressedData["
1: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
+tGW
           "]]}, {}}}, Prolog -> {{
          InsetBox[
           FormBox["500", TraditionalForm], 
           Offset[{-2, -2}, {500., 1.135}], {1., 1.}], 
          InsetBox[
           FormBox["1000", TraditionalForm], 
           Offset[{-2, -2}, {1000., 1.135}], {1., 1.}], 
          InsetBox[
           FormBox["1500", TraditionalForm], 
           Offset[{-2, -2}, {1500., 1.135}], {1., 1.}], 
          InsetBox[
           FormBox["2000", TraditionalForm], 
           Offset[{-2, -2}, {2000., 1.135}], {1., 1.}], 
          InsetBox[
           FormBox["2500", TraditionalForm], 
           Offset[{-2, -2}, {2500., 1.135}], {1., 1.}], 
          InsetBox[
           FormBox["3000", TraditionalForm], 
           Offset[{-2, -2}, {3000., 1.135}], {1., 1.}]}, {
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-2\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -2.}], {-1, -1.}], 
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-1\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -1.}], {-1, -1.}], 
          InsetBox[
           FormBox["\"1\"", TraditionalForm], 
           Offset[{3, 0}, {0, 0.}], {-1, -1.}], 
          InsetBox[
           FormBox["\"10\"", TraditionalForm], 
           Offset[{3, 0}, {0, 1.}], {-1, -1.}]}}, 
       PlotRange -> {{0, 1944.125}, {-2.4350000000000005`, 1.135}}, 
       ImageSize -> {302, 182.}, 
       GridLines -> {{500., 1000., 1500., 2000., 2500., 3000.}, {{-3., 
           GrayLevel[0.3001]}, {-2., 
           GrayLevel[0.3001]}, {-1., 
           GrayLevel[0.3001]}, {0., 
           GrayLevel[0.3001]}, {1., 
           GrayLevel[0.3001]}}}, Frame -> True, Axes -> None, AspectRatio -> 
       Full, 
       BaseStyle -> {
        FontFamily -> "Verdana", FontSize -> 8, FontColor -> GrayLevel[0.5], 
         ScriptSizeMultipliers -> 0.2, ScriptMinSize -> 6}, PlotRangePadding -> 
       None, PlotRangeClipping -> True, Background -> GrayLevel[1], 
       FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, FrameTicks -> None]}},
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    GridBoxSpacings -> {"Columns" -> {{0.5}}}, 
    BaseStyle -> {
     FontFamily -> "Verdana", FontSize -> 8, FontColor -> GrayLevel[0.4]}],
   FormBox[
    TemplateBox[{"\"validation\"", "\"training\""}, "LineLegend", 
     DisplayFunction -> (FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.59, 0.7, 0.75]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.59, 0.7, 0.75]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.083, 1., 1.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.083, 1., 1.]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}],
                "Grid"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
           "Grid"], Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
        Background -> Automatic, StripOnInput -> False], TraditionalForm]& ), 
     InterpretationFunction :> (RowBox[{"LineLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.59, 0.7, 0.75], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> Hue[0.59, 0.7, 0.5], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 StyleBox[
                  RowBox[{"Hue", "[", 
                    RowBox[{"0.59`", ",", "0.7`", ",", "0.75`"}], "]"}], 
                  NumberMarks -> False]], Appearance -> None, BaseStyle -> {},
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.59, 0.7, 0.75]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Hue[0.59, 0.7, 0.75], Editable -> False, Selectable -> False], 
              ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.083, 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> Hue[0.083, 1., 0.6666666666666667], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 StyleBox[
                  RowBox[{"Hue", "[", 
                    RowBox[{"0.083`", ",", "1.`", ",", "1.`"}], "]"}], 
                  NumberMarks -> False]], Appearance -> None, BaseStyle -> {},
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.083, 1., 1.]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Hue[0.083, 1., 1.], Editable -> False, Selectable -> False]}], 
            "}"}], ",", 
          RowBox[{"{", 
            RowBox[{#, ",", #2}], "}"}]}], "]"}]& ), Editable -> True], 
    TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8202922296491623`*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"3269f01e-9e1b-4750-a5d8-09c9e7254a44"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"Loss\"\>", "\[Rule]", "0.006511792657533988`"}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8202922297000976`*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"663fc4a7-6a66-4fe9-b3c9-a03df747c335"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"2\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["3", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "LongShortTermMemory", "Arrays" -> 
                    Association[
                    "InputGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{12, 2}], 
                    "InputGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{12, 12}], 
                    "InputGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{12}], 
                    "OutputGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{12, 2}], 
                    "OutputGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{12, 12}], 
                    "OutputGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{12}], 
                    "ForgetGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{12, 2}], 
                    "ForgetGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{12, 12}], 
                    "ForgetGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{12}], 
                    "MemoryGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{12, 2}], 
                    "MemoryGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{12, 12}], 
                    "MemoryGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{12}]], "Parameters" -> 
                    Association[
                    "OutputSize" -> 12, "Dropout" -> 
                    NeuralNetworks`ValidatedParameter[None], "$InputSize" -> 
                    2, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[2037445959], 
                    "$CellStateConnectedQ" -> False], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2037445959], 2}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2037445959], 12}, 
                    NeuralNetworks`RealT]], "States" -> 
                    Association[
                    "State" -> 
                    NeuralNetworks`TensorT[{12}, NeuralNetworks`RealT], 
                    "CellState" -> 
                    NeuralNetworks`TensorT[{12}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "SequenceLast", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2037445959], 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{12}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{2, 12}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{2}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {2}, "$OutputSize" -> 2, 
                    "$InputSize" -> 12, "$InputDimensions" -> {12}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{12}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2037445959], 2}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]], 
                    "InteriorStates" -> 
                    Association[{1, "State"} -> 
                    NeuralNetworks`NetPath["Nodes", "1", "States", "State"], {
                    1, "CellState"} -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "States", "CellState"]]], 
                   NeuralNetworks`Private`NetChain`opart = {"Nodes", "2"}, 
                   NeuralNetworks`Private`NetChain`part = {"Nodes", "2"}, 
                   NeuralNetworks`Private`NetChain`selected = 
                   Association[
                    "Type" -> "SequenceLast", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[2037445959], 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{12}, NeuralNetworks`RealT]]]}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"2\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LongShortTermMemoryLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"12\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SequenceLastLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"12\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   ImageSizeCache -> {288., {74.5, 80.5}}, 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8202922297236056`*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"c73c4e40-bdf8-4c03-901e-6d18fa25c117"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"dataV", "[", 
  RowBox[{"[", 
   RowBox[{"n", ",", "1"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"netF", "@", 
  RowBox[{"dataV", "[", 
   RowBox[{"[", 
    RowBox[{"n", ",", "1", ",", "1"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.820292240489277*^9, 3.8202922404902763`*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"4548932f-8f67-4cb3-96cb-2a8a313f9f0a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"5.000000000000002`", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5.`", ",", 
      RowBox[{"-", "4.71238898038469`"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5.000000000000001`", ",", "1.5707963267948966`"}], "}"}]}], 
   "}"}], "\[Rule]", 
  RowBox[{"{", 
   RowBox[{"4.999999999999999`", ",", "1.5707963267948966`"}], 
   "}"}]}]], "Output",
 CellChangeTimes->{3.8202922411547546`*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"09add8c6-9c55-4bca-9abb-f16eaa5cc1d9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4.991828441619873`", ",", "1.5532209873199463`"}], "}"}]], "Output",
 CellChangeTimes->{3.8202922411617537`*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"4f90e938-ae68-4940-8b95-6f7c6610003e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"que", "=", 
   RowBox[{"dataV", "[", 
    RowBox[{"[", 
     RowBox[{"n", ",", "1", ",", "1"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ans", "=", 
   RowBox[{"netF", "@", 
    RowBox[{"dataV", "[", 
     RowBox[{"[", 
      RowBox[{"n", ",", "1", ",", "1"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tf", "=", 
   RowBox[{"dataV", "[", 
    RowBox[{"[", 
     RowBox[{"n", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsTransform2Site", "[", 
  RowBox[{
   RowBox[{"Turtle2Graphics", "@", 
    RowBox[{"Append", "[", 
     RowBox[{"que", ",", "ans"}], "]"}]}], ",", 
   RowBox[{"InverseFunction", "@", "tf"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8202922461920204`*^9, 3.820292255152959*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"57544b25-eab7-4e00-9d52-ff7252a2d7a0"],

Cell[BoxData[
 GraphicsBox[{
   LineBox[{{-3.263995873715642, 4.221485642172679}, {-2.192459703590179, 
    9.105317154019996}}], 
   LineBox[{{-2.192459703590179, 9.105317154019996}, {-7.076291215437497, 
    10.17685332414546}}], 
   LineBox[{{-7.076291215437497, 10.17685332414546}, {-8.147827385562959, 
    5.293021812298142}}], 
   LineBox[{{-8.147827385562959, 5.293021812298142}, {-3.2915314797033033`, 
    4.1377117823512775`}}]},
  Frame->True,
  ImageSize->256,
  PlotRange->{{-15, 15}, {-15, 15}}]], "Output",
 CellChangeTimes->{{3.8202922468249135`*^9, 3.8202922555715213`*^9}},
 CellLabel->"Out[80]=",ExpressionUUID->"9aa3a3c4-11ce-4758-abb4-18cec85fdaac"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataV", "[", 
  RowBox[{"[", 
   RowBox[{"3", ",", "1", ",", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.820292405034594*^9, 3.820292414620098*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"95118bf2-6d21-4a89-8ec4-2820740f47cb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5.000000000000002`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.000000000000002`", ",", 
     RowBox[{"-", "4.71238898038469`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5.000000000000002`", ",", "1.5707963267948966`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.820292411616062*^9, 3.820292415213159*^9}},
 CellLabel->"Out[87]=",ExpressionUUID->"bc90a8c1-0646-4b97-9e82-8c4bd2b63b60"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataV", "[", 
  RowBox[{"[", 
   RowBox[{"3", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8202924396993313`*^9, 3.8202924463551517`*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"d64fc651-881c-4e7a-9661-c3bf5a0c2bb6"],

Cell[BoxData[
 RowBox[{"TransformationFunction", "[", 
  RowBox[{"(", 
   TagBox[GridBox[{
      {"0.21430723402509289`", "0.9767663023694636`", 
       RowBox[{"-", "3.423906993645473`"}]},
      {
       RowBox[{"-", "0.9767663023694638`"}], "0.21430723402509266`", 
       RowBox[{"-", "4.092856091969083`"}]},
      {"0.`", "0.`", "1.`"}
     },
     AutoDelete->False,
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
       "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    #& ], ")"}], "]"}]], "Output",
 CellChangeTimes->{3.82029244694175*^9},
 CellLabel->"Out[88]=",ExpressionUUID->"f7bd28f8-ac21-4dc6-9c75-99a176ca6b99"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Assign class to token - sentiment", "Subsection",
 CellChangeTimes->{{3.8202931730865493`*^9, 
  3.8202931801992064`*^9}},ExpressionUUID->"e1071918-3ff1-4063-87fe-\
757e9dae2085"],

Cell[CellGroupData[{

Cell["1\tprepare datasets", "Subsubsection",
 CellChangeTimes->{{3.8202931852237587`*^9, 
  3.820293192280265*^9}},ExpressionUUID->"50f9c99e-db7d-42f4-b1f0-\
b3ce6e4433c5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataT", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<MovieReview\>\""}], "}"}], 
     ",", "\"\<TrainingData\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataV", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<MovieReview\>\""}], "}"}], 
     ",", "\"\<TestData\>\""}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.820293197056671*^9, 3.820293197058671*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"46a5af64-2f58-429f-862f-602aa0825c94"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", "dataV"}]], "Input",
 CellChangeTimes->{{3.820293201653659*^9, 3.8202932016546545`*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"8ff56c74-a50c-432e-962f-073e0e0d06c0"],

Cell[BoxData["3200"], "Output",
 CellChangeTimes->{3.820293202350378*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"0d96a087-c9b9-4ac9-b068-81bd971182ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dataT", "[", 
  RowBox[{"[", "123", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.820293207205243*^9, 3.820293219328718*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"14b99c73-22f0-4afe-9705-b401d5e008e9"],

Cell[BoxData[
 RowBox[{"\<\"fans of behan's work and of irish movies in general will be \
rewarded by borstal boy . \"\>", "\[Rule]", "\<\"positive\"\>"}]], "Output",
 CellChangeTimes->{{3.820293213402601*^9, 3.82029321991103*^9}},
 CellLabel->
  "Out[108]=",ExpressionUUID->"549f6173-b443-45ec-a604-f9eac84810d7"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["2\tsetup a network", "Subsubsection",
 CellChangeTimes->{{3.8202932268655467`*^9, 
  3.820293234775182*^9}},ExpressionUUID->"22061659-30d1-4e44-8ef6-\
69a17bd97255"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"net", "=", 
  RowBox[{"NetInitialize", "@", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"EmbeddingLayer", "[", "40", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"DropoutLayer", "[", "0.3", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"LongShortTermMemoryLayer", "[", "20", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"SequenceLastLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"LinearLayer", "[", "2", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"NetEncoder", "[", 
       RowBox[{"{", "\"\<Tokens\>\"", "}"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Output\>\"", "\[Rule]", 
      RowBox[{"NetDecoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Class\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<positive\>\"", ",", "\"\<negative\>\""}], "}"}]}], 
        "}"}], "]"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.820293261571536*^9, 3.8202932615725355`*^9}, {
  3.8202935070837755`*^9, 
  3.8202935220618057`*^9}},ExpressionUUID->"e5f69238-ac94-4591-b741-\
60cef46271c2"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"string\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["6", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Embedding", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{39265, 40}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimension" -> 40, "ClassCount" -> 39265, 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[425864550]}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[425864550]}, 
                    NeuralNetworks`IndexIntegerT[39265]]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[425864550], 40}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.3, "Method" -> "Dropout"], 
                    "Inputs" -> Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[425864550], 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[425864550], 40}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "LongShortTermMemory", "Arrays" -> 
                    Association[
                    "InputGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{20, 40}], 
                    "InputGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{20, 20}], 
                    "InputGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{20}], 
                    "OutputGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{20, 40}], 
                    "OutputGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{20, 20}], 
                    "OutputGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{20}], 
                    "ForgetGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{20, 40}], 
                    "ForgetGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{20, 20}], 
                    "ForgetGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{20}], 
                    "MemoryGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{20, 40}], 
                    "MemoryGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{20, 20}], 
                    "MemoryGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{20}]], "Parameters" -> 
                    Association[
                    "OutputSize" -> 20, "Dropout" -> 
                    NeuralNetworks`ValidatedParameter[None], "$InputSize" -> 
                    40, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[425864550], 
                    "$CellStateConnectedQ" -> False], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[425864550], 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[425864550], 20}, 
                    NeuralNetworks`RealT]], "States" -> 
                    Association[
                    "State" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT], 
                    "CellState" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "SequenceLast", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[425864550], 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{2, 20}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{2}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {2}, "$OutputSize" -> 2, 
                    "$InputSize" -> 20, "$InputDimensions" -> {20}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> Association["Form" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[425864550]}, 
                    NeuralNetworks`IndexIntegerT[39265]], "Type" -> "Tokens", 
                    "Tokens" -> NeuralNetworks`ValidatedParameter[
                    Skeleton[
                    Row[{39264, " strings"}]]], "SplitPattern" -> 
                    NeuralNetworks`ValidatedParameter[WordBoundary], 
                    "IgnoreCase" -> True, "TargetLength" -> All, "Count" -> 
                    39265, "$TargetLength" -> 
                    NeuralNetworks`LengthVar[425864550], "$Version" -> 
                    "12.0.11"]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{2}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {"\"positive\"", "\"negative\""}, 
                    "InputDepth" -> 1, "Dimensions" -> 2, "$Rank" -> 0, 
                    "$Version" -> "12.0.11"]], "InteriorStates" -> 
                    Association[{3, "State"} -> 
                    NeuralNetworks`NetPath["Nodes", "3", "States", "State"], {
                    3, "CellState"} -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "States", "CellState"]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"string\""}, {
                    TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], "\" \"", 
                    TemplateBox[{"\"indices\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"range\"",
                     "\":\"", "\" \"", 
                    TemplateBox[{"1", "\"..\"", "39265"}, "RowDefault"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["EmbeddingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"40\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"40\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LongShortTermMemoryLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"20\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SequenceLastLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8202932641077538`*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"81291dc1-f6ab-4fa7-ae24-6fdb67578212"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"net", "[", 
  RowBox[{"\"\<this is bad news\>\"", ",", "\"\<Probabilities\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.820293266856413*^9, 3.8202932668599625`*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"c89daaa7-4744-4596-bdbd-283a302d7e29"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"positive\"\>", "\[Rule]", "0.5036255121231079`"}], ",", 
   RowBox[{"\<\"negative\"\>", "\[Rule]", "0.4963745176792145`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8202932675576406`*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"ce509781-c7df-43ae-91b2-a80ea1a999f6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NetTake", "[", 
   RowBox[{"net", ",", "2"}], "]"}], "@", "\"\<hello world\>\""}]], "Input",
 CellChangeTimes->{{3.8202933394686837`*^9, 3.820293382293292*^9}, {
  3.8202934210984435`*^9, 3.8202934961773505`*^9}},
 CellLabel->
  "In[117]:=",ExpressionUUID->"52f48054-4282-4d3c-bd84-22b777d3e39c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.008995790965855122`"}], ",", 
     RowBox[{"-", "0.004201316740363836`"}], ",", "0.009317032992839813`", 
     ",", "0.007913692854344845`", ",", 
     RowBox[{"-", "0.004957706201821566`"}], ",", 
     RowBox[{"-", "0.010948272421956062`"}], ",", "0.010668792761862278`", 
     ",", 
     RowBox[{"-", "0.006192166358232498`"}], ",", 
     RowBox[{"-", "0.0014229604275897145`"}], ",", 
     RowBox[{"-", "0.008702553808689117`"}], ",", "0.006186745595186949`", 
     ",", 
     RowBox[{"-", "0.009740320965647697`"}], ",", 
     RowBox[{"-", "0.007519385777413845`"}], ",", "0.01006082072854042`", ",",
      "0.0002871094911824912`", ",", "0.0056540947407484055`", ",", 
     "0.010443029925227165`", ",", "0.000912567600607872`", ",", 
     RowBox[{"-", "0.008593137376010418`"}], ",", "0.0001644542790018022`", 
     ",", "0.0011641948949545622`", ",", 
     RowBox[{"-", "0.00864911824464798`"}], ",", 
     RowBox[{"-", "0.008240751922130585`"}], ",", 
     RowBox[{"-", "0.005864426959306002`"}], ",", "0.0031854177359491587`", 
     ",", "0.01054915226995945`", ",", 
     RowBox[{"-", "0.01062051672488451`"}], ",", "0.006277263630181551`", ",",
      "0.010305853560566902`", ",", "0.009513052180409431`", ",", 
     RowBox[{"-", "0.01024006586521864`"}], ",", 
     RowBox[{"-", "0.006569639313966036`"}], ",", "0.0010636569932103157`", 
     ",", 
     RowBox[{"-", "0.005244298838078976`"}], ",", 
     RowBox[{"-", "0.005807440262287855`"}], ",", 
     RowBox[{"-", "0.01194798294454813`"}], ",", 
     RowBox[{"-", "0.004644231870770454`"}], ",", 
     RowBox[{"-", "0.003694449318572879`"}], ",", 
     RowBox[{"-", "0.005775775294750929`"}], ",", 
     RowBox[{"-", "0.0086287222802639`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.005739559419453144`"}], ",", 
     RowBox[{"-", "0.009153091348707676`"}], ",", "0.003689786186441779`", 
     ",", 
     RowBox[{"-", "0.005371104460209608`"}], ",", "0.005152171012014151`", 
     ",", 
     RowBox[{"-", "0.009062397293746471`"}], ",", 
     RowBox[{"-", "0.011304151266813278`"}], ",", "0.00003393576116650365`", 
     ",", "0.00844868179410696`", ",", 
     RowBox[{"-", "0.0013047961983829737`"}], ",", "0.0017104698345065117`", 
     ",", "0.009041059762239456`", ",", "0.003966192249208689`", ",", 
     RowBox[{"-", "0.004418719094246626`"}], ",", "0.004336354788392782`", 
     ",", 
     RowBox[{"-", "0.008991739712655544`"}], ",", "0.011133953928947449`", 
     ",", 
     RowBox[{"-", "0.0034557669423520565`"}], ",", 
     RowBox[{"-", "0.006605209782719612`"}], ",", "0.00023664570471737534`", 
     ",", "0.009441103786230087`", ",", 
     RowBox[{"-", "0.009710032492876053`"}], ",", "0.009393486194312572`", 
     ",", 
     RowBox[{"-", "0.01154721062630415`"}], ",", 
     RowBox[{"-", "0.01145849097520113`"}], ",", "0.006142272148281336`", ",",
      "0.0030792406760156155`", ",", 
     RowBox[{"-", "0.006238486617803574`"}], ",", "0.0072085196152329445`", 
     ",", "0.002922609681263566`", ",", "0.0036935368552803993`", ",", 
     "0.007804658729583025`", ",", 
     RowBox[{"-", "0.007133986335247755`"}], ",", "0.001592377433553338`", 
     ",", "0.00877218134701252`", ",", "0.0034549650736153126`", ",", 
     "0.011669790372252464`", ",", "0.010202180594205856`", ",", 
     "0.006644184235483408`", ",", "0.0077691031619906425`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8202934481336336`*^9, 3.820293496776713*^9},
 CellLabel->
  "Out[117]=",ExpressionUUID->"0816c32e-0595-4991-a0d3-5b9ed628d68c"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["3\ttrain and validation", "Subsubsection",
 CellChangeTimes->{{3.8202932478022184`*^9, 
  3.8202932558944445`*^9}},ExpressionUUID->"4ee29566-ce90-43e8-bb46-\
80fe27463487"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"netT", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"net", ",", "dataT", ",", "All", ",", 
    RowBox[{"ValidationSet", "\[Rule]", "dataV"}], ",", 
    RowBox[{"TargetDevice", "\[Rule]", "\"\<GPU\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8202932759332643`*^9, 3.8202932945529814`*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"f34d178d-40ec-4707-babf-72787dffc023"],

Cell[BoxData[
 FrameBox[GridBox[{
    {
     ItemBox[
      FrameBox[
       StyleBox["\<\"NetTrain Results\"\>", "SuggestionsBarText",
        StripOnInput->False,
        FontSize->12],
       FrameMargins->{{10, 5}, {-4, 2}},
       FrameStyle->None,
       StripOnInput->False],
      Alignment->{Left, Bottom},
      Background->RGBColor[0.96, 0.96, 0.96],
      Frame->{{False, False}, {True, False}},
      FrameStyle->Opacity[0.1],
      ItemSize->{Automatic, 1},
      StripOnInput->False]},
    {
     ItemBox[
      TagBox[
       FrameBox[
        TagBox[GridBox[{
           {
            TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox["\"summary\"", 
               GrayLevel[0.4], StripOnInput -> False]},
             "RowDefault"], 
            
            TemplateBox[{
             ",","\",\"",
              TemplateBox[{"\[ThinSpace]", "\" \"", "\"batches:\"", "2340"}, 
               "RowWithSeparators"],
              TemplateBox[{"\[ThinSpace]", "\" \"", "\"rounds:\"", "10"}, 
               "RowWithSeparators"],
              TemplateBox[{"\[ThinSpace]", "\" \"", "\"time:\"", "\"19s\""}, 
               "RowWithSeparators"],
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"examples/s:\"", "3991"}, 
               "RowWithSeparators"]},
             "RowWithSeparators"]},
           {
            TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox["\"data\"", 
               GrayLevel[0.4], StripOnInput -> False]},
             "RowDefault"], 
            
            TemplateBox[{
             ",","\",\"",
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"training examples:\"", "7462"}, 
               "RowWithSeparators"],
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"validation examples:\"", "3200"}, 
               "RowWithSeparators"],
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"processed examples:\"", "74880"}, 
               "RowWithSeparators"],
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"skipped examples:\"", "0"}, 
               "RowWithSeparators"]},
             "RowWithSeparators"]},
           {
            TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox["\"method\"", 
               GrayLevel[0.4], StripOnInput -> False]},
             "RowDefault"], 
            
            TemplateBox[{
             ",","\",\"",
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"ADAM\"", "\"optimizer\""}, 
               "RowWithSeparators"],
              TemplateBox[{"\[ThinSpace]", "\" \"", "\"batch size\"", "32"}, 
               "RowWithSeparators"],"\"GPU\""},
             "RowWithSeparators"]},
           {
            TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox["\"round\"", 
               GrayLevel[0.4], StripOnInput -> False]},
             "RowDefault"], 
            TemplateBox[{",","\",\"",TemplateBox[{"\[ThinSpace]", "\" \"", 
                TagBox[
                 TooltipBox["\"loss:\"", 
                  TagBox[
                   GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"loss\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]], Annotation[#, 
                  Column[{
                    Row[{"Measurement: ", "loss"}]}], "Tooltip"]& ], 
                TagBox[
                 InterpretationBox[
                  RowBox[{"\"3.5\"", "\[Times]", 
                    SuperscriptBox["10", "\"-2\""]}], 0.03495940811470943, 
                  AutoDelete -> True], ScientificForm[#, 3]& ]}, 
               "RowWithSeparators"],TemplateBox[{"\[ThinSpace]", "\" \"", 
                TagBox[
                 TooltipBox["\"error:\"", 
                  TagBox[
                   GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"ErrorRate\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]], Annotation[#, 
                  Column[{
                    Row[{"Measurement: ", "ErrorRate"}]}], "Tooltip"]& ], 
                "\"1.14%\""}, "RowWithSeparators"]},
             "RowWithSeparators"]},
           {
            
            TemplateBox[{
             TemplateBox[{5}, "Spacer1"],StyleBox["\"validation\"", 
               GrayLevel[0.4], StripOnInput -> False]},
             "RowDefault"], 
            TemplateBox[{",","\",\"",TemplateBox[{"\[ThinSpace]", "\" \"", 
                TagBox[
                 TooltipBox["\"loss:\"", 
                  TagBox[
                   GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"loss\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]], Annotation[#, 
                  Column[{
                    Row[{"Measurement: ", "loss"}]}], "Tooltip"]& ], 
                TagBox[
                 InterpretationBox[
                 "\"1.27\"", 1.2665082879899512`, AutoDelete -> True], 
                 ScientificForm[#, 3]& ]}, "RowWithSeparators"],
              TemplateBox[{"\[ThinSpace]", "\" \"", 
                TagBox[
                 TooltipBox["\"error:\"", 
                  TagBox[
                   GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"ErrorRate\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]], Annotation[#, 
                  Column[{
                    Row[{"Measurement: ", "ErrorRate"}]}], "Tooltip"]& ], 
                "\"26.8%\""}, "RowWithSeparators"]},
             "RowWithSeparators"]},
           {
            ItemBox[
             
             DynamicModuleBox[{NeuralNetworks`Private`NetTrain`index$$ = 1, 
              NeuralNetworks`Private`NetTrain`plotList$$ = {
               GeneralUtilities`TightLabeled[
                Graphics[{
                  AbsoluteThickness[1.25], {{
                    Hue[0.083, 1., 1.], 
                    Line[CompressedData["
1:eJwtlgdUk2cXx1kie4eRMDLcsa7PpljE91rrRFGr4KDyWSsqpU4qqFhHRZFi
KW0VWyh1UUoLFqwKKtXrCENxgRpBVKYgK4QsCAH83vd+5DzncHJ48jzPHf/f
/4rWbf0kwszExGSkqYkJ99fF86Cz58EzzPUtl3aoPijG/3+/wGyOvt7gP3gH
BZkz+ZkzrzH7Z88ddmarfOj/t5gJnY/XZ3fJ0T28nhdeX8xcf3Tkv5ePFSOf
9t9jbNdMz7SzkqNv2xl2PWQ+hxEJTpNL0Jl+X8GMcYr2CttYjK4BF9j1hIna
kLaPryxBHp33jHE+0LL32oky9OC2O1cxOyoqTOeGlqIXnf+CcUtfXyzPuoeC
0u3epdtfMr/wB2ZOe1qOPnTfa+bOhx5r5El3McUykl11zOaCczsaRWVD99cz
U61GJ2fPuYc/jv2FXQ1Mc3P9MH7W/aH3NDLTqy+Ft4kf4PGFd9nVxOie1je+
LX4w9L43zGc3JgbKHz/C1K0GdjUzneGX5O+33R9671tme+WwX8aueIw/0wWt
TER7e1Bl8r2h97cxbefuri4fW4Fpl1elX17Vzjj4lyqvn3swFE8Hs+bi/uKG
byvw16rEjKrETmbiWpOUdR8+HopPycS0JQelNVfib8arp4xXu5il46qTPjZU
DMWrYni6S6uv3XmBSx11Sxx1Kmacl9NcM+GTofp1M/XMrvCvLirwidC+Umiv
ZmYVXpq0rL4aj1M+1IzFpEsnSvJfYciUkcumjNQwJ51fjfPOqEZ3yo+GGbjm
49e97iU+nxX4dFagloluXmKfoqjCnylfWub7mQWtM05V46oQ7qNjPj7/du7i
AzXIp/zpmL++TN4cJnyFNRs2KzZs1jP/6V19a87KavyV8qlnJn2QYeUSWo1r
dh1esetwD+O6zvHLpwYF+lJ+e5mHDv9EbyuuwVouPRm9TM66ShPbMbV4mvJt
YBxylUkH51fhZ+lcgg3MQpuD0qTbr1BM+e9jXp+ovaffUoWNuQ9e5D7oYyI/
XGzaOrsaM6keRmZlWkji169eYMSNN2E33hgZlxpDmSNfgaOoPv1MVlXmX9bv
K7Dl0cDLRwP9zOpbsctLbV5gNtVrgMHCQa9RyhcYyYXLG2Tq408XSIe/wHFU
v0Fm8+jf016MUWC7+r1a9XvvGNlnsQ+eWlZjLtXzHeN4dMab8QE1KDOTTDKT
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
                    "]]}, {}}, {{
                    Hue[0.59, 0.7, 0.75], 
                    
                    Line[{{0.9698996655518394, -0.2792017029640918}, {
                    1.9732441471571907`, -0.2910092589993542}, {
                    2.9765886287625416`, -0.22969568313289868`}, {
                    3.979933110367893, -0.14143824457810616`}, {
                    4.983277591973244, -0.10960554557317304`}, {
                    5.986622073578595, -0.03856716115439864}, {
                    6.989966555183946, 0.004402072896616049}, {
                    7.993311036789297, 0.03328758551352489}, {
                    8.996655518394649, 0.06622284697235843}, {10., 
                    0.10260803614514125`}}]}, {
                    AbsolutePointSize[3.8333333333333335`], 
                    Hue[0.59, 0.7, 0.65], 
                    
                    Point[{{0.9698996655518394, -0.2792017029640918}, {
                    1.9732441471571907`, -0.2910092589993542}, {
                    2.9765886287625416`, -0.22969568313289868`}, {
                    3.979933110367893, -0.14143824457810616`}, {
                    4.983277591973244, -0.10960554557317304`}, {
                    5.986622073578595, -0.03856716115439864}, {
                    6.989966555183946, 0.004402072896616049}, {
                    7.993311036789297, 0.03328758551352489}, {
                    8.996655518394649, 0.06622284697235843}, {10., 
                    0.10260803614514125`}}]}}}, Prolog -> {{
                    Text[5, 
                    Offset[{-2, -2}, {5., 0.3370000000000001}], {1., 1.}], 
                    Text[10, 
                    Offset[{-2, -2}, {10., 0.3370000000000001}], {1., 1.}], 
                    Text[15, 
                    Offset[{-2, -2}, {15., 0.3370000000000001}], {1., 1.}]}, {
                    Text[
                    Superscript[10, "-3"], 
                    Offset[{3, 0}, {0, -3.}], {-1, -1.}], 
                    Text[
                    Superscript[10, "-2"], 
                    Offset[{3, 0}, {0, -2.}], {-1, -1.}], 
                    Text[
                    Superscript[10, "-1"], 
                    Offset[{3, 0}, {0, -1.}], {-1, -1.}], 
                    Text["1", 
                    Offset[{3, 0}, {0, 0.}], {-1, -1.}]}}, 
                 PlotRange -> {{
                   0, 10.019230769230745`}, {-3.4370000000000003`, 
                   0.3370000000000001}}, ImageSize -> {302, 182.}, 
                 GridLines -> {{5., 10., 15.}, {{-4., 
                    GrayLevel[0.3001]}, {-3., 
                    GrayLevel[0.3001]}, {-2., 
                    GrayLevel[0.3001]}, {-1., 
                    GrayLevel[0.3001]}, {0., 
                    GrayLevel[0.3001]}}}, Frame -> True, Axes -> None, 
                 AspectRatio -> Full, 
                 BaseStyle -> {
                  FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                   GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                   ScriptMinSize -> 6}, PlotRangePadding -> None, 
                 PlotRangeClipping -> True, Background -> GrayLevel[1], 
                 FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, FrameTicks -> 
                 None], {None, "loss", "rounds"}], 
               GeneralUtilities`TightLabeled[
                Graphics[{
                  AbsoluteThickness[1.25], {{
                    Hue[0.083, 1., 1.], 
                    Line[CompressedData["
1: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
8T4SLoX+fmzj/weyMvxE
                    "]]}, {}}, {{
                    Hue[0.59, 0.7, 0.75], 
                    
                    Line[{{0.9698996655518394, 0.2609375}, {
                    1.9732441471571907`, 0.2446875}, {2.9765886287625416`, 
                    0.251875}, {3.979933110367893, 0.2565625}, {
                    4.983277591973244, 0.25906250000000003`}, {
                    5.986622073578595, 0.2725}, {6.989966555183946, 
                    0.2740625}, {7.993311036789297, 0.2709375}, {
                    8.996655518394649, 0.2734375}, {10., 0.268125}}]}, {
                    AbsolutePointSize[3.8333333333333335`], 
                    Hue[0.59, 0.7, 0.65], 
                    
                    Point[{{0.9698996655518394, 0.2609375}, {
                    1.9732441471571907`, 0.2446875}, {2.9765886287625416`, 
                    0.251875}, {3.979933110367893, 0.2565625}, {
                    4.983277591973244, 0.25906250000000003`}, {
                    5.986622073578595, 0.2725}, {6.989966555183946, 
                    0.2740625}, {7.993311036789297, 0.2709375}, {
                    8.996655518394649, 0.2734375}, {10., 0.268125}}]}}}, 
                 Prolog -> {{
                    Text[5, 
                    Offset[{-2, -2}, {5., 0.7575000000000001}], {1., 1.}], 
                    Text[10, 
                    Offset[{-2, -2}, {10., 0.7575000000000001}], {1., 1.}], 
                    Text[15, 
                    Offset[{-2, -2}, {15., 0.7575000000000001}], {1., 1.}]}, {
                    Text[
                    PercentForm[0.], 
                    Offset[{3, 0}, {0, 0.}], {-1, -1.}], 
                    Text[
                    PercentForm[0.2], 
                    Offset[{3, 0}, {0, 0.2}], {-1, -1.}], 
                    Text[
                    PercentForm[0.4], 
                    Offset[{3, 0}, {0, 0.4}], {-1, -1.}], 
                    Text[
                    PercentForm[0.6], 
                    Offset[{3, 0}, {0, 0.6}], {-1, -1.}]}}, 
                 PlotRange -> {{
                   0, 10.019230769230745`}, {-0.0075000000000000015`, 
                   0.7575000000000001}}, ImageSize -> {302, 182.}, 
                 GridLines -> {{5., 10., 15.}, {{0., 
                    GrayLevel[0.8501]}, {0.05, 
                    GrayLevel[0.8501]}, {0.1, 
                    GrayLevel[0.8501]}, {0.15, 
                    GrayLevel[0.8501]}, {0.2, 
                    GrayLevel[0.8501]}, {0.2, 
                    GrayLevel[0.8501]}, {0.25, 
                    GrayLevel[0.8501]}, {0.3, 
                    GrayLevel[0.8501]}, {0.35, 
                    GrayLevel[0.8501]}, {0.4, 
                    GrayLevel[0.8501]}, {0.4, 
                    GrayLevel[0.8501]}, {0.45, 
                    GrayLevel[0.8501]}, {0.5, 
                    GrayLevel[0.8501]}, {0.55, 
                    GrayLevel[0.8501]}, {0.6, 
                    GrayLevel[0.8501]}, {0.6, 
                    GrayLevel[0.8501]}, {0.65, 
                    GrayLevel[0.8501]}, {0.7, 
                    GrayLevel[0.8501]}, {0.75, 
                    GrayLevel[0.8501]}, {0.8, 
                    GrayLevel[0.8501]}, {0., 
                    GrayLevel[0.3001]}, {0.2, 
                    GrayLevel[0.3001]}, {0.4, 
                    GrayLevel[0.3001]}, {0.6, 
                    GrayLevel[0.3001]}, {0.8, 
                    GrayLevel[0.3001]}}}, Frame -> True, Axes -> None, 
                 AspectRatio -> Full, 
                 BaseStyle -> {
                  FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                   GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                   ScriptMinSize -> 6}, PlotRangePadding -> None, 
                 PlotRangeClipping -> True, Background -> GrayLevel[1], 
                 FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, FrameTicks -> 
                 None], {None, "error rate", "rounds"}]}}, 
              TagBox[GridBox[{
                 {
                  DynamicBox[ToBoxes[
                    Grid[{{
                    Button[
                    MouseAppearance[
                    Style["\:2039", FontColor :> If[
                    CurrentValue["MouseOver"], 
                    RGBColor[0.27, 0.54, 0.79], 
                    GrayLevel[0.25]], FontFamily -> "MS Gothic", FontSize -> 
                    14, FontWeight -> "Thin"], "LinkHand"], 
                    NeuralNetworks`Private`NetTrain`index$$ = 
                    Mod[NeuralNetworks`Private`NetTrain`index$$ - 1, 2, 1], 
                    Appearance -> None], 
                    Dynamic[
                    Part[{
                    Tooltip["loss", 
                    Column[{
                    Row[{"Measurement: ", "loss"}]}]], 
                    Tooltip["error rate", 
                    Column[{
                    Row[{"Measurement: ", "ErrorRate"}]}]]}, 
                    NeuralNetworks`Private`NetTrain`index$$], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetTrain`index$$}], 
                    Button[
                    MouseAppearance[
                    Style["\:203a", FontColor :> If[
                    CurrentValue["MouseOver"], 
                    RGBColor[0.27, 0.54, 0.79], 
                    GrayLevel[0.25]], FontFamily -> "MS Gothic", FontSize -> 
                    14, FontWeight -> "Thin"], "LinkHand"], 
                    NeuralNetworks`Private`NetTrain`index$$ = 
                    Mod[NeuralNetworks`Private`NetTrain`index$$ + 1, 2, 1], 
                    Appearance -> None]}}, ItemSize -> {{3, 20, 3}, {2}}], 
                    StandardForm],
                   ImageSizeCache->{276., {7., 13.}},
                   TrackedSymbols:>{NeuralNetworks`Private`NetTrain`index$$}]},
                 {
                  DynamicBox[ToBoxes[
                    Part[
                    NeuralNetworks`Private`NetTrain`plotList$$, 
                    NeuralNetworks`Private`NetTrain`index$$], StandardForm],
                   ImageSizeCache->{314., {94., 99.}},
                   TrackedSymbols:>{NeuralNetworks`Private`NetTrain`index$$}]}
                },
                DefaultBaseStyle->"Column",
                GridBoxAlignment->{"Columns" -> {{Center}}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
               "Column"],
              DynamicModuleValues:>{}],
             Alignment->Center,
             StripOnInput->False], "\[SpanFromLeft]"},
           {
            ItemBox[
             StyleBox[
              RowBox[{
               GraphicsBox[{},
                Axes->None,
                Background->Hue[0.083, 1., 1.],
                ImagePadding->{{0, 0}, {5, 2}},
                ImageSize->{13, 1}], "  ", "\<\"training set\"\>", "\t", 
               GraphicsBox[{},
                Axes->None,
                Background->Hue[0.59, 0.7, 0.75],
                ImagePadding->{{0, 0}, {5, 2}},
                ImageSize->{13, 1}], "  ", "\<\"validation set\"\>"}],
              FontFamily->"Verdana",
              FontSize->8,
              FontColor->GrayLevel[0.4]],
             Alignment->Center,
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          ColumnsEqual->False,
          
          GridBoxAlignment->{
           "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
          GridBoxDividers->{"Columns" -> {False, {
               Opacity[0.15]}, False}},
          GridBoxItemSize->{"Columns" -> {8, {26}}, "Rows" -> {{1.}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], 
              Offset[1.1199999999999999`], {
               Offset[1.75]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.8]}, 
              Offset[0.2]}}],
         "Grid"],
        FrameMargins->{{10, 10}, {10, 5}},
        FrameStyle->None,
        StripOnInput->False],
       Deploy,
       DefaultBaseStyle->"Deploy"],
      Alignment->Center,
      BaseStyle->{
       FontWeight -> "Light", FontSize -> 11, FontFamily -> "Segoe UI", 
        NumberMarks -> False, Deployed -> False},
      StripOnInput->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.5599999999999999]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], 
       Offset[0.8], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Background->GrayLevel[1],
  FrameMargins->{{0, 0}, {0, 0}},
  FrameStyle->GrayLevel[0.85],
  RoundingRadius->5,
  StripOnInput->False]], "Output",
 CellChangeTimes->{3.82029331603741*^9},
 CellLabel->
  "Out[111]=",ExpressionUUID->"8f3fb2b8-b625-4c19-9225-8e591eb7779e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"netT", "[", "\"\<LossPlot\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"netT", "[", "\"\<RoundMeasurements\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"netF", "=", 
  RowBox[{"netT", "[", "\"\<TrainedNet\>\"", "]"}]}]}], "Input",
 CellChangeTimes->{{3.8202933177254567`*^9, 3.820293317727458*^9}},
 CellLabel->
  "In[112]:=",ExpressionUUID->"5cc7a8a6-c244-41d9-a895-1fd5897cac23"],

Cell[BoxData[
 TemplateBox[{GridBox[{{"", 
      ItemBox["\"rounds\"", DefaultBaseStyle -> "LabeledLabel"]}, {
      RotationBox[
       ItemBox["\"loss\"", DefaultBaseStyle -> "LabeledLabel"], BoxRotation -> 
       1.5708], 
      GraphicsBox[{
        AbsoluteThickness[1.25], {{
          Hue[0.083, 1., 1.], 
          LineBox[CompressedData["
1:eJwtlgdUk2cXx1kie4eRMDLcsa7PpljE91rrRFGr4KDyWSsqpU4qqFhHRZFi
KW0VWyh1UUoLFqwKKtXrCENxgRpBVKYgK4QsCAH83vd+5DzncHJ48jzPHf/f
/4rWbf0kwszExGSkqYkJ99fF86Cz58EzzPUtl3aoPijG/3+/wGyOvt7gP3gH
BZkz+ZkzrzH7Z88ddmarfOj/t5gJnY/XZ3fJ0T28nhdeX8xcf3Tkv5ePFSOf
9t9jbNdMz7SzkqNv2xl2PWQ+hxEJTpNL0Jl+X8GMcYr2CttYjK4BF9j1hIna
kLaPryxBHp33jHE+0LL32oky9OC2O1cxOyoqTOeGlqIXnf+CcUtfXyzPuoeC
0u3epdtfMr/wB2ZOe1qOPnTfa+bOhx5r5El3McUykl11zOaCczsaRWVD99cz
U61GJ2fPuYc/jv2FXQ1Mc3P9MH7W/aH3NDLTqy+Ft4kf4PGFd9nVxOie1je+
LX4w9L43zGc3JgbKHz/C1K0GdjUzneGX5O+33R9671tme+WwX8aueIw/0wWt
TER7e1Bl8r2h97cxbefuri4fW4Fpl1elX17Vzjj4lyqvn3swFE8Hs+bi/uKG
byvw16rEjKrETmbiWpOUdR8+HopPycS0JQelNVfib8arp4xXu5il46qTPjZU
DMWrYni6S6uv3XmBSx11Sxx1Kmacl9NcM+GTofp1M/XMrvCvLirwidC+Umiv
ZmYVXpq0rL4aj1M+1IzFpEsnSvJfYciUkcumjNQwJ51fjfPOqEZ3yo+GGbjm
49e97iU+nxX4dFagloluXmKfoqjCnylfWub7mQWtM05V46oQ7qNjPj7/du7i
AzXIp/zpmL++TN4cJnyFNRs2KzZs1jP/6V19a87KavyV8qlnJn2QYeUSWo1r
dh1esetwD+O6zvHLpwYF+lJ+e5mHDv9EbyuuwVouPRm9TM66ShPbMbV4mvJt
YBxylUkH51fhZ+lcgg3MQpuD0qTbr1BM+e9jXp+ovaffUoWNuQ9e5D7oYyI/
XGzaOrsaM6keRmZlWkji169eYMSNN2E33hgZlxpDmSNfgaOoPv1MVlXmX9bv
K7Dl0cDLRwP9zOpbsctLbV5gNtVrgMHCQa9RyhcYyYXLG2Tq408XSIe/wHFU
v0Fm8+jf016MUWC7+r1a9XvvGNlnsQ+eWlZjLtXzHeN4dMab8QE1KDOTTDKT
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
           "]]}, {}}, {{
          Hue[0.59, 0.7, 0.75], 
          
          LineBox[{{0.9698996655518394, -0.2792017029640918}, {
           1.9732441471571907`, -0.2910092589993542}, {
           2.9765886287625416`, -0.22969568313289868`}, {
           3.979933110367893, -0.14143824457810616`}, {
           4.983277591973244, -0.10960554557317304`}, {
           5.986622073578595, -0.03856716115439864}, {6.989966555183946, 
           0.004402072896616049}, {7.993311036789297, 0.03328758551352489}, {
           8.996655518394649, 0.06622284697235843}, {10., 
           0.10260803614514125`}}]}, {
          AbsolutePointSize[3.8333333333333335`], 
          Hue[0.59, 0.7, 0.65], 
          
          PointBox[{{0.9698996655518394, -0.2792017029640918}, {
           1.9732441471571907`, -0.2910092589993542}, {
           2.9765886287625416`, -0.22969568313289868`}, {
           3.979933110367893, -0.14143824457810616`}, {
           4.983277591973244, -0.10960554557317304`}, {
           5.986622073578595, -0.03856716115439864}, {6.989966555183946, 
           0.004402072896616049}, {7.993311036789297, 0.03328758551352489}, {
           8.996655518394649, 0.06622284697235843}, {10., 
           0.10260803614514125`}}]}}}, Prolog -> {{
          InsetBox[
           FormBox["5", TraditionalForm], 
           Offset[{-2, -2}, {5., 0.3370000000000001}], {1., 1.}], 
          InsetBox[
           FormBox["10", TraditionalForm], 
           Offset[{-2, -2}, {10., 0.3370000000000001}], {1., 1.}], 
          InsetBox[
           FormBox["15", TraditionalForm], 
           Offset[{-2, -2}, {15., 0.3370000000000001}], {1., 1.}]}, {
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-3\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -3.}], {-1, -1.}], 
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-2\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -2.}], {-1, -1.}], 
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-1\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -1.}], {-1, -1.}], 
          InsetBox[
           FormBox["\"1\"", TraditionalForm], 
           Offset[{3, 0}, {0, 0.}], {-1, -1.}]}}, 
       PlotRange -> {{0, 10.019230769230745`}, {-3.4370000000000003`, 
         0.3370000000000001}}, ImageSize -> {302, 182.}, 
       GridLines -> {{5., 10., 15.}, {{-4., 
           GrayLevel[0.3001]}, {-3., 
           GrayLevel[0.3001]}, {-2., 
           GrayLevel[0.3001]}, {-1., 
           GrayLevel[0.3001]}, {0., 
           GrayLevel[0.3001]}}}, Frame -> True, Axes -> None, AspectRatio -> 
       Full, BaseStyle -> {
        FontFamily -> "Verdana", FontSize -> 8, FontColor -> GrayLevel[0.5], 
         ScriptSizeMultipliers -> 0.2, ScriptMinSize -> 6}, PlotRangePadding -> 
       None, PlotRangeClipping -> True, Background -> GrayLevel[1], 
       FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, FrameTicks -> None]}},
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    GridBoxSpacings -> {"Columns" -> {{0.5}}}, 
    BaseStyle -> {
     FontFamily -> "Verdana", FontSize -> 8, FontColor -> GrayLevel[0.4]}],
   FormBox[
    TemplateBox[{"\"validation\"", "\"training\""}, "LineLegend", 
     DisplayFunction -> (FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.59, 0.7, 0.75]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.59, 0.7, 0.75]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.083, 1., 1.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.083, 1., 1.]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}],
                "Grid"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
           "Grid"], Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
        Background -> Automatic, StripOnInput -> False], TraditionalForm]& ), 
     InterpretationFunction :> (RowBox[{"LineLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.59, 0.7, 0.75], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> Hue[0.59, 0.7, 0.5], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 StyleBox[
                  RowBox[{"Hue", "[", 
                    RowBox[{"0.59`", ",", "0.7`", ",", "0.75`"}], "]"}], 
                  NumberMarks -> False]], Appearance -> None, BaseStyle -> {},
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.59, 0.7, 0.75]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Hue[0.59, 0.7, 0.75], Editable -> False, Selectable -> False], 
              ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.083, 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> Hue[0.083, 1., 0.6666666666666667], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 StyleBox[
                  RowBox[{"Hue", "[", 
                    RowBox[{"0.083`", ",", "1.`", ",", "1.`"}], "]"}], 
                  NumberMarks -> False]], Appearance -> None, BaseStyle -> {},
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.083, 1., 1.]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Hue[0.083, 1., 1.], Editable -> False, Selectable -> False]}], 
            "}"}], ",", 
          RowBox[{"{", 
            RowBox[{#, ",", #2}], "}"}]}], "]"}]& ), Editable -> True], 
    TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.820293318517108*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"7528c46a-ef1f-4f83-bd92-2dbff0107716"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Loss\"\>", "\[Rule]", "0.03495940811470943`"}], ",", 
   RowBox[{"\<\"ErrorRate\"\>", "\[Rule]", "0.011351495726495728`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8202933185431986`*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"a9b3ae22-b12f-4ab4-a1d4-89981c95f6c4"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"string\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["6", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Embedding", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{39265, 40}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimension" -> 40, "ClassCount" -> 39265, 
                    "$Dimensions" -> {
                    NeuralNetworks`LengthVar[425864550]}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[425864550]}, 
                    NeuralNetworks`IndexIntegerT[39265]]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[425864550], 40}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Dropout", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "DropoutProbability" -> 0.3, "Method" -> "Dropout"], 
                    "Inputs" -> Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[425864550], 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[425864550], 40}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "LongShortTermMemory", "Arrays" -> 
                    Association[
                    "InputGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{20, 40}], 
                    "InputGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{20, 20}], 
                    "InputGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{20}], 
                    "OutputGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{20, 40}], 
                    "OutputGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{20, 20}], 
                    "OutputGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{20}], 
                    "ForgetGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{20, 40}], 
                    "ForgetGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{20, 20}], 
                    "ForgetGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{20}], 
                    "MemoryGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{20, 40}], 
                    "MemoryGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{20, 20}], 
                    "MemoryGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{20}]], "Parameters" -> 
                    Association[
                    "OutputSize" -> 20, "Dropout" -> 
                    NeuralNetworks`ValidatedParameter[None], "$InputSize" -> 
                    40, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[425864550], 
                    "$CellStateConnectedQ" -> False], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[425864550], 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[425864550], 20}, 
                    NeuralNetworks`RealT]], "States" -> 
                    Association[
                    "State" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT], 
                    "CellState" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "SequenceLast", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[425864550], 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{2, 20}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{2}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {2}, "$OutputSize" -> 2, 
                    "$InputSize" -> 20, "$InputDimensions" -> {20}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> Association["Form" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[425864550]}, 
                    NeuralNetworks`IndexIntegerT[39265]], "Type" -> "Tokens", 
                    "Tokens" -> NeuralNetworks`ValidatedParameter[
                    Skeleton[
                    Row[{39264, " strings"}]]], "SplitPattern" -> 
                    NeuralNetworks`ValidatedParameter[WordBoundary], 
                    "IgnoreCase" -> True, "TargetLength" -> All, "Count" -> 
                    39265, "$TargetLength" -> 
                    NeuralNetworks`LengthVar[425864550], "$Version" -> 
                    "12.0.11"]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{2}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {"\"positive\"", "\"negative\""}, 
                    "InputDepth" -> 1, "Dimensions" -> 2, "$Rank" -> 0, 
                    "$Version" -> "12.0.11"]], "InteriorStates" -> 
                    Association[{3, "State"} -> 
                    NeuralNetworks`NetPath["Nodes", "3", "States", "State"], {
                    3, "CellState"} -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "States", "CellState"]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"string\""}, {
                    TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], "\" \"", 
                    TemplateBox[{"\"indices\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"range\"",
                     "\":\"", "\" \"", 
                    TemplateBox[{"1", "\"..\"", "39265"}, "RowDefault"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["EmbeddingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"40\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["DropoutLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"40\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LongShortTermMemoryLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"20\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SequenceLastLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8202933185625715`*^9},
 CellLabel->
  "Out[114]=",ExpressionUUID->"a6db4902-9b9c-4eb6-abdc-7347c33e15f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"netF", "@", "\"\<hello world\>\""}]], "Input",
 CellChangeTimes->{{3.820293578590783*^9, 3.8202935830458164`*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"04a1bed3-e836-42c5-8360-b9176b9e56a6"],

Cell[BoxData["\<\"positive\"\>"], "Output",
 CellChangeTimes->{3.8202935839057865`*^9},
 CellLabel->
  "Out[118]=",ExpressionUUID->"d01aef10-2594-4e4c-a10f-73e5083269fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"netF", "[", 
  RowBox[{"\"\<this is bad news\>\"", ",", "\"\<Probabilities\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{3.8202935987886777`*^9},
 CellLabel->
  "In[119]:=",ExpressionUUID->"0fa6c9ec-c875-415e-9825-ba06fedb883e"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"positive\"\>", "\[Rule]", "0.1843847632408142`"}], ",", 
   RowBox[{"\<\"negative\"\>", "\[Rule]", "0.815615177154541`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.820293600003217*^9},
 CellLabel->
  "Out[119]=",ExpressionUUID->"3b68bb18-5759-4cdc-b039-d1f5b6aaede1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"netF", "[", 
  RowBox[{
  "\"\<This is not good, but I love it.\>\"", ",", " ", 
   "\"\<Probabilities\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8202938650370555`*^9, 3.820293936384222*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"d629c1fb-bea2-4889-bd57-9e3e9e787c5c"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"positive\"\>", "\[Rule]", "0.6270574927330017`"}], ",", 
   RowBox[{"\<\"negative\"\>", "\[Rule]", "0.3729425072669983`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.820293892366829*^9, 3.8202939368005304`*^9}},
 CellLabel->
  "Out[127]=",ExpressionUUID->"076a2504-0569-4c68-92fe-0717955bc874"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8202940940311017`*^9, 
  3.8202940951519613`*^9}},ExpressionUUID->"7fd626ec-5371-448e-8668-\
2638357f365f"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Assign class to a graphic line", "Subsection",
 CellChangeTimes->{{3.8202941009762278`*^9, 
  3.820294114256721*^9}},ExpressionUUID->"80da0d96-6fd0-4e03-bf44-\
f3f5416c9d9f"],

Cell[CellGroupData[{

Cell["1\tprepare datasets", "Subsubsection",
 CellChangeTimes->{{3.820294117789237*^9, 
  3.820294126853612*^9}},ExpressionUUID->"b048dd3d-b691-4a5a-b0c6-\
bfae0172de47"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RandomGraphic", "[", "mode_", "]"}], ":=", 
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"GT", "[", 
      RowBox[{
       RowBox[{"Switch", "[", 
        RowBox[{"mode", ",", "\"\<Rect\>\"", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Rectangle", "[", 
            RowBox[{"#", ",", 
             RowBox[{"#", "+", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"#", ",", 
                   RowBox[{"#", "+", 
                    RowBox[{"RandomInteger", "[", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "3"}], "}"}], "]"}]}]}], "}"}], "&"}], 
                "@", 
                RowBox[{"RandomInteger", "[", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "3"}], "}"}], "]"}]}], ")"}]}]}], "]"}], 
           "&"}], "@", 
          RowBox[{"RandomInteger", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "5"}], "}"}], ",", "2"}], "]"}]}], ",", 
         "\"\<Square\>\"", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Rectangle", "[", 
            RowBox[{"#", ",", 
             RowBox[{"#", "+", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"#", ",", "#"}], "}"}], "&"}], "@", 
                RowBox[{"RandomInteger", "[", 
                 RowBox[{"{", 
                  RowBox[{"1", ",", "5"}], "}"}], "]"}]}], ")"}]}]}], "]"}], 
           "&"}], "@", 
          RowBox[{"RandomInteger", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "5"}], "}"}], ",", "2"}], "]"}]}], ",", 
         "\"\<Triangle\>\"", ",", 
         RowBox[{"GT", "[", 
          RowBox[{
           RowBox[{"Polygon", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"2", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
           RowBox[{"ST", "[", 
            RowBox[{"RandomReal", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1.5", ",", "2.5"}], "}"}], ",", "2"}], "]"}], "]"}]}],
           "]"}]}], "]"}], ",", 
       RowBox[{
        RowBox[{"TT", "[", 
         RowBox[{"RandomReal", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", "2"}], "]"}], "]"}], 
        ".", 
        RowBox[{"RT", "[", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "256"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "15"}], ",", "15"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "15"}], ",", "15"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8202941285747175`*^9, 3.8202941286067104`*^9}, 
   3.820294164977267*^9, 3.8202942887632265`*^9},
 CellLabel->
  "In[150]:=",ExpressionUUID->"e52426af-950e-425e-ac72-420d672f1830"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Batch", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "mode", ",", "area", ",", "gr", ",", "tf", ",", "gr1", ",", "tur"}], 
       "}"}], ",", 
      RowBox[{
       RowBox[{"mode", "=", 
        RowBox[{"RandomChoice", "[", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Rect\>\"", ",", "\"\<Square\>\"", ",", "\"\<Triangle\>\""}], 
          "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"gr", "=", 
        RowBox[{"RandomGraphic", "[", "mode", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"area", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Area", "@", 
            RowBox[{"First", "@", 
             RowBox[{"Cases", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"RandomGraphic", "[", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"_Rectangle", "|", "_Polygon"}], ",", "All"}], 
              "]"}]}]}], ">", "5"}], ",", "\"\<Large\>\"", ",", 
          "\"\<Small\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"tf", ",", "gr1"}], "}"}], "=", 
        RowBox[{"GraphicsTransformation2Origin", "@", 
         RowBox[{"FlattenGraphics", "@", "gr"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"tur", "=", 
        RowBox[{"Graph2Turtle", "@", 
         RowBox[{"Graphics2Graph", "[", "gr1", "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"tur", "\[Rule]", 
          RowBox[{"mode", "<>", "area"}]}], ",", "tf"}], "}"}]}]}], "]"}], 
    "&"}], "/@", 
   RowBox[{"Range", "@", "n"}]}]}]], "Input",
 CellChangeTimes->{{3.8202941366126757`*^9, 3.820294136615677*^9}, 
   3.820294298052149*^9},
 CellLabel->
  "In[149]:=",ExpressionUUID->"976ea98c-ec3a-47a8-b935-fc454e3be765"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"First", "@", 
  RowBox[{"Cases", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"RandomGraphic", "[", "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
    RowBox[{"_Rectangle", "|", "_Polygon"}], ",", "All"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Area", "@", "%"}]}], "Input",
 CellChangeTimes->{{3.820294372016732*^9, 3.8202944065904427`*^9}},
 CellLabel->
  "In[184]:=",ExpressionUUID->"f06c8a48-15e4-4bfb-aded-1b3bf52bbd89"],

Cell[BoxData[
 RowBox[{"Rectangle", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.820294407094515*^9, 3.820294413390728*^9}, {
  3.8202945047382545`*^9, 3.8202945079685397`*^9}},
 CellLabel->
  "Out[184]=",ExpressionUUID->"40c54702-252c-4fa2-ba9e-a58e3feca356"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{{3.820294407094515*^9, 3.820294413390728*^9}, {
  3.8202945047382545`*^9, 3.82029450797554*^9}},
 CellLabel->
  "Out[185]=",ExpressionUUID->"72f98d3a-d463-417f-b695-627311bd4b02"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Rectangle", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "4"}], "}"}]}], "]"}], ",", 
    RowBox[{"Rectangle", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", "3"}], "}"}]}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.820294442391547*^9, 3.8202944715713606`*^9}, {
  3.820294518279104*^9, 3.820294552127495*^9}, {3.8202945841979694`*^9, 
  3.820294616718278*^9}},
 CellLabel->
  "In[198]:=",ExpressionUUID->"4fa10e0a-bee2-40a6-a34b-462770f83082"],

Cell[BoxData[
 GraphicsBox[{RectangleBox[{2, 3}], RectangleBox[{1, 0}, {2, 3}]}]], "Output",
 CellChangeTimes->{{3.820294447791706*^9, 3.8202944719957905`*^9}, {
  3.820294502336028*^9, 3.8202945526854477`*^9}, {3.8202945856800723`*^9, 
  3.8202946281727486`*^9}},
 CellLabel->
  "Out[198]=",ExpressionUUID->"af803a53-186b-4709-83d4-4cbb24badc4c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Area", "@", 
  RowBox[{"Rectangle", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.820294642733615*^9, 3.8202946546229773`*^9}},
 CellLabel->
  "In[199]:=",ExpressionUUID->"c257d702-a2cf-4a0e-bbef-fc11ab968a23"],

Cell[BoxData["3"], "Output",
 CellChangeTimes->{3.820294655214445*^9},
 CellLabel->
  "Out[199]=",ExpressionUUID->"ab11793e-cf74-4fcc-a663-cd98bd1e7534"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Area", "@", 
  RowBox[{"Rectangle", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8202946566532135`*^9, 3.82029466956851*^9}},
 CellLabel->
  "In[200]:=",ExpressionUUID->"15f3a8c8-0a51-4ef3-b9dc-b27205891277"],

Cell[BoxData["Undefined"], "Output",
 CellChangeTimes->{3.8202946699358044`*^9},
 CellLabel->
  "Out[200]=",ExpressionUUID->"62ac7242-b07d-45ce-b303-00198f0afad0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Batch", "@", "2"}]], "Input",
 CellChangeTimes->{{3.8202941401611395`*^9, 3.8202941401621385`*^9}},
 CellLabel->
  "In[136]:=",ExpressionUUID->"c1e95d9b-793b-405c-8f62-152270a01bde"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3.238930123892599`", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3.2389301238925987`", ",", "4.648543897084668`"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"4.432007600216648`", ",", 
          RowBox[{"-", "2.324271948542334`"}]}], "}"}]}], "}"}], 
      "\[Rule]", "\<\"TriangleSmall\"\>"}], ",", 
     RowBox[{"TransformationFunction", "[", 
      RowBox[{"(", 
       TagBox[GridBox[{
          {
           RowBox[{"-", "0.9989918773578366`"}], "0.04489130175284411`", 
           RowBox[{"-", "0.1780196019408593`"}]},
          {
           RowBox[{"-", "0.0448913017528441`"}], 
           RowBox[{"-", "0.9989918773578366`"}], "1.4439617949852175`"},
          {"0.`", "0.`", "1.`"}
         },
         AutoDelete->False,
         GridBoxDividers->{
          "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
           "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        #& ], ")"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2.4907514162668822`", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2.4907514162668813`", ",", "4.794435541444934`"}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"3.663952971917966`", ",", 
          RowBox[{"-", "2.3972177707224667`"}]}], "}"}]}], "}"}], 
      "\[Rule]", "\<\"TriangleSmall\"\>"}], ",", 
     RowBox[{"TransformationFunction", "[", 
      RowBox[{"(", 
       TagBox[GridBox[{
          {"0.43212087002503563`", 
           RowBox[{"-", "0.9018156982936181`"}], 
           RowBox[{"-", "3.61957920738452`"}]},
          {"0.9018156982936179`", "0.43212087002503574`", 
           RowBox[{"-", "1.0925710936771171`"}]},
          {"0.`", "0.`", "1.`"}
         },
         AutoDelete->False,
         GridBoxDividers->{
          "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
           "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        #& ], ")"}], "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.820294140782135*^9, 3.820294171456269*^9},
 CellLabel->
  "Out[136]=",ExpressionUUID->"13e49753-07cf-4b57-88be-083c954fab85"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataT", "=", 
   RowBox[{"Batch", "@", "500"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataV", "=", 
   RowBox[{"Batch", "@", "100"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8202941508356886`*^9, 3.8202941508376904`*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"a9923d28-4c81-42c8-a4d1-749c75445818"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"que", "=", 
  RowBox[{"dataV", "[", 
   RowBox[{"[", 
    RowBox[{"n", ",", "1", ",", "1"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ans", "=", 
  RowBox[{"dataV", "[", 
   RowBox[{"[", 
    RowBox[{"n", ",", "1", ",", "2"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tf", "=", 
   RowBox[{"dataV", "[", 
    RowBox[{"[", 
     RowBox[{"n", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsTransform2Site", "[", 
  RowBox[{
   RowBox[{"Turtle2Graphics", "@", "que"}], ",", 
   RowBox[{"InverseFunction", "@", "tf"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.820294192857852*^9, 3.8202941928596497`*^9}, 
   3.8202942290314445`*^9},
 CellLabel->
  "In[144]:=",ExpressionUUID->"bae08368-71b2-4737-87b2-6d123a69cc73"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1.0000000000000004`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "1.5707963267948961`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "1.570796326794897`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.`", ",", "1.5707963267948957`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8202941934300165`*^9, 3.8202942295628433`*^9},
 CellLabel->
  "Out[145]=",ExpressionUUID->"5519324e-65c9-4a5c-993f-e506402df9e1"],

Cell[BoxData[
 RowBox[{"\<\"Square\"\>", "<>", 
  RowBox[{"If", "[", 
   RowBox[{"Undefined", ",", "\<\"Large\"\>", ",", "\<\"Small\"\>"}], 
   "]"}]}]], "Output",
 CellChangeTimes->{3.8202941934300165`*^9, 3.8202942295736794`*^9},
 CellLabel->
  "Out[146]=",ExpressionUUID->"d800448f-4d35-4677-8cf7-c1c8ecd759ac"],

Cell[BoxData[
 GraphicsBox[{
   LineBox[{{-3.3647894353739165`, -1.5014051439888054`}, {-4.21853458942198, \
-0.980714053283914}}], 
   LineBox[{{-4.21853458942198, -0.980714053283914}, {-4.7392256801268715`, \
-1.8344592073319768`}}], 
   LineBox[{{-4.7392256801268715`, -1.8344592073319768`}, \
{-3.8854805260788083`, -2.355150298036868}}], 
   LineBox[{{-3.8854805260788083`, -2.355150298036868}, \
{-3.3647894353739165`, -1.5014051439888056`}}]},
  Frame->True,
  ImageSize->256,
  PlotRange->{{-15, 15}, {-15, 15}}]], "Output",
 CellChangeTimes->{3.8202941934300165`*^9, 3.8202942295914097`*^9},
 CellLabel->
  "Out[148]=",ExpressionUUID->"3d26ab2a-bd0e-482e-af67-1b5ef2c965be"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["2\tsetup a network", "Subsubsection",
 CellChangeTimes->{{3.8202952735271883`*^9, 
  3.820295277999648*^9}},ExpressionUUID->"796640cf-17a3-437c-a9d0-\
8c0aedd5eb26"],

Cell[BoxData[
 RowBox[{"net", "=", 
  RowBox[{"NetInitialize", "@", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"LongShortTermMemoryLayer", "[", "12", "]"}], ",", 
       RowBox[{"SequenceLastLayer", "[", "]"}], ",", 
       RowBox[{"LinearLayer", "[", "6", "]"}], ",", 
       RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}], ",", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Varying\>\"", ",", "2"}], "}"}]}], ",", 
     RowBox[{"\"\<Output\>\"", "\[Rule]", 
      RowBox[{"NetDecoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Class\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<RectSmall\>\"", ",", "\"\<SquareSmall\>\"", ",", 
           "\"\<TriangleSmall\>\"", ",", "\"\<RectLarge\>\"", ",", 
           "\"\<SquareLarge\>\"", ",", "\"\<TriangleLarge\>\""}], "}"}]}], 
        "}"}], "]"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.820295267072609*^9, 
  3.820295267074607*^9}},ExpressionUUID->"4bc48618-364f-4100-8910-\
d0a5d4ae9916"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"dataV", "[", 
  RowBox[{"[", 
   RowBox[{"n", ",", "1"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8202952883405457`*^9, 3.8202952883415475`*^9}},
 CellLabel->
  "In[201]:=",ExpressionUUID->"0c5247fd-029a-4b00-ae4f-41219165b1f1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"3.0800359059533857`", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3.0800359059533853`", ",", "4.49528638768385`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3.858287749150428`", ",", 
      RowBox[{"-", "2.2476431938419252`"}]}], "}"}]}], "}"}], 
  "\[Rule]", "\<\"TriangleSmall\"\>"}]], "Output",
 CellChangeTimes->{3.820295289390419*^9},
 CellLabel->
  "Out[202]=",ExpressionUUID->"9b25026c-6cab-4b9f-adde-94c5ee50d85b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"net", "[", 
  RowBox[{
   RowBox[{"dataV", "[", 
    RowBox[{"[", 
     RowBox[{"n", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
   "\"\<Probabilities\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.820295292072833*^9, 3.820295292077155*^9}},
 CellLabel->
  "In[203]:=",ExpressionUUID->"d219989e-af7b-4e21-8526-acc23c6e5ab1"],

Cell[BoxData[
 TemplateBox[{
  "NetChain","invindata3",
   "\"Data supplied to \\!\\(\\*RowBox[{\\\"\\\\\\\"port \
\\\\\\\\\\\\\\\"Input\\\\\\\\\\\\\\\"\\\\\\\"\\\"}]\\) could not be encoded; \
\\!\\(\\*RowBox[{\\\"\\\\\\\"input was not a string\\\\\\\"\\\"}]\\).\"",2,
   203,59,30706469358581951987,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8202952926945333`*^9},
 CellLabel->
  "During evaluation of \
In[203]:=",ExpressionUUID->"c512d955-1c93-49c4-b64e-dec977cad4da"],

Cell[BoxData["$Failed"], "Output",
 CellChangeTimes->{3.82029529272751*^9},
 CellLabel->
  "Out[203]=",ExpressionUUID->"425d5b9d-174b-47e4-bf91-391543557221"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["3\ttrain and validation", "Subsubsection",
 CellChangeTimes->{{3.8202953943391075`*^9, 
  3.8202953982307386`*^9}},ExpressionUUID->"0549b513-87a2-427a-97f8-\
553f716305e8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"netT", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"net", ",", 
     RowBox[{"dataT", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "All", ",", 
     RowBox[{"ValidationSet", "\[Rule]", 
      RowBox[{"dataT", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ",", 
     RowBox[{"TargetDevice", "\[Rule]", "\"\<GPU\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8202953998755507`*^9, 3.8202954072661905`*^9}},
 CellLabel->
  "In[208]:=",ExpressionUUID->"a8516448-464a-4422-8fc5-9241e3814bf3"],

Cell[BoxData[
 TemplateBox[{
  "NetTrain","encgenfail1",
   "\"Could not encode input number \\!\\(\\*RowBox[{\\\"1\\\"}]\\) for port \
\\\"\\!\\(\\*RowBox[{\\\"\\\\\\\"Input\\\\\\\"\\\"}]\\)\\\": \
\\!\\(\\*RowBox[{\\\"\\\\\\\"input was not a string\\\\\\\"\\\"}]\\). Please \
check the example.\"",2,208,60,30706469358581951987,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.820295408092873*^9},
 CellLabel->
  "During evaluation of \
In[208]:=",ExpressionUUID->"56ce831b-8b7d-4fb6-bbe7-45fa89ff99cf"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"netT", "[", "\"\<LossPlot\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"netT", "[", "\"\<RoundMeasurements\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"netF", "=", 
  RowBox[{"netT", "[", "\"\<TrainedNet\>\"", "]"}]}]}], "Input",
 CellChangeTimes->{{3.820295411057525*^9, 
  3.820295411059652*^9}},ExpressionUUID->"58f1d675-9c29-4000-b276-\
851c10e1a603"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"dataV", "[", 
  RowBox[{"[", 
   RowBox[{"n", ",", "1"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8202954202428145`*^9, 
  3.8202954202458153`*^9}},ExpressionUUID->"52851da4-fb23-4e6c-9052-\
6403afc600f0"],

Cell[BoxData[
 RowBox[{"netF", "[", 
  RowBox[{
   RowBox[{"dataV", "[", 
    RowBox[{"[", 
     RowBox[{"n", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
   "\"\<Probabilities\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8202954232446184`*^9, 
  3.8202954232476187`*^9}},ExpressionUUID->"ea9c1b4a-a874-461b-8b88-\
36f1eb2e005e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "9"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"que", "=", 
  RowBox[{"dataV", "[", 
   RowBox[{"[", 
    RowBox[{"n", ",", "1", ",", "1"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ans", "=", 
  RowBox[{"dataV", "[", 
   RowBox[{"[", 
    RowBox[{"n", ",", "1", ",", "2"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"pre", "=", 
  RowBox[{"netF", "@", 
   RowBox[{"dataV", "[", 
    RowBox[{"[", 
     RowBox[{"n", ",", "1", ",", "1"}], "]"}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tf", "=", 
   RowBox[{"dataV", "[", 
    RowBox[{"[", 
     RowBox[{"n", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsTransform2Site", "[", 
  RowBox[{
   RowBox[{"Turtle2Graphics", "@", "que"}], ",", 
   RowBox[{"InverseFunction", "@", "tf"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8202954257107425`*^9, 
  3.8202954257127447`*^9}},ExpressionUUID->"cda37dd4-e440-46fb-b974-\
e749c41d30f3"],

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"netF", ",", 
   RowBox[{"dataV", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", 
   "\"\<WorstClassifiedExamples\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.820295428415141*^9, 
  3.820295428417141*^9}},ExpressionUUID->"41c35973-d508-4d15-a79e-\
07b673e6d50f"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Identify multiple objects in fixed positions", "Subsection",
 CellChangeTimes->{{3.820295456975046*^9, 
  3.820295498204526*^9}},ExpressionUUID->"df495b1a-cc13-4eef-bae5-\
7a2e907238a6"],

Cell[CellGroupData[{

Cell["1\tprepare datasets", "Subsubsection",
 CellChangeTimes->{{3.820295674273443*^9, 
  3.8202956789222555`*^9}},ExpressionUUID->"1f0bf3f3-998f-4b9e-abfb-\
624ef1a588f0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Batch", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"vec", ",", "img"}], "}"}], ",", 
      RowBox[{
       RowBox[{"vec", "=", 
        RowBox[{"RandomChoice", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"20", ",", "1", ",", "1"}], "}"}], "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1", ",", "2"}], "}"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"6", ",", "6"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"img", "=", 
        RowBox[{"ColorConvert", "[", 
         RowBox[{
          RowBox[{"Rasterize", "[", 
           RowBox[{
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"Module", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"d", "=", ".3"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"LightGray", ",", 
                    RowBox[{"Rectangle", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{".5", ",", ".5"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"6.5", ",", "6.5"}], "}"}]}], "]"}]}], "}"}], ",",
                   "Black", ",", 
                  RowBox[{"Thickness", "@", 
                   RowBox[{"Scaled", "@", ".02"}]}], ",", 
                  RowBox[{"MapIndexed", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"Replace", "[", 
                    RowBox[{"#1", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"0", "\[RuleDelayed]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"1", "\[RuleDelayed]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Line", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#2", "+", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "d"}], ",", "0"}], "}"}]}], ",", 
                    RowBox[{"#2", "+", 
                    RowBox[{"{", 
                    RowBox[{"d", ",", "0"}], "}"}]}]}], "}"}], "]"}], ",", 
                    RowBox[{"Line", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#2", "+", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", "d"}]}], "}"}]}], ",", 
                    RowBox[{"#2", "+", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "d"}], "}"}]}]}], "}"}], "]"}]}], 
                    "}"}]}], ",", 
                    RowBox[{"2", "\[RuleDelayed]", 
                    RowBox[{"Rectangle", "[", 
                    RowBox[{
                    RowBox[{"#2", "-", 
                    RowBox[{"{", 
                    RowBox[{"d", ",", "d"}], "}"}]}], ",", 
                    RowBox[{"#2", "+", 
                    RowBox[{"{", 
                    RowBox[{"d", ",", "d"}], "}"}]}]}], "]"}]}]}], "}"}], ",",
                     "All"}], "]"}], "&"}], ",", "vec", ",", 
                    RowBox[{"{", "2", "}"}]}], "]"}]}], "}"}]}], "]"}], ",", 
              RowBox[{"Frame", "\[Rule]", "False"}], ",", 
              RowBox[{"ImageSize", "\[Rule]", "128"}]}], "]"}], ",", 
            RowBox[{"RasterSize", "\[Rule]", "32"}]}], "]"}], ",", 
          "\"\<Grayscale\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(", 
        RowBox[{"img", "\[Rule]", 
         RowBox[{"Flatten", "@", "vec"}]}], ")"}]}]}], "]"}], "&"}], "/@", 
   RowBox[{"Range", "@", "n"}]}]}]], "Input",
 CellChangeTimes->{{3.8202955034543304`*^9, 3.820295503461083*^9}},
 CellLabel->
  "In[209]:=",ExpressionUUID->"e05a21ad-6d46-438c-acae-0606177462a4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Batch", "@", "4"}]], "Input",
 CellChangeTimes->{{3.820295508558386*^9, 3.820295512116765*^9}},
 CellLabel->
  "In[211]:=",ExpressionUUID->"e7be292b-1a05-4cc9-af2a-ac6f1d97dd0c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQIU/ycEbuIFQ1ke6HuaylPqvlF54uVBcUFLeUrdN3DyBAAAf+hz7g==
       "], {{0, 32}, {32, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Byte", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{32, 32},
     PlotRange->{{0, 32}, {0, 32}}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "2", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "2", ",", 
      "0"}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQIU/ycEbkLA6ZtYAVxe6Sg++X1m7PpT8elfLNKP1Qa4+Q2X8NuPA4zKjyB5
YHKmqTwO+zcQkJfeh09+H9DWdgr0A/MOXvsJAABMQnF8
       "], {{0, 32}, {32, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Byte", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{32, 32},
     PlotRange->{{0, 32}, {0, 32}}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "2", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0"}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQIU/ycEbuIFg0v+KAF5aaACoJ9xyG8wY9efg0f+5mKR/kv45G82XKLcfbjl
t7MzMLTj178Pv/l9BNyHCYaePL74oYY8pe6jtzwBAAD7PGnO
       "], {{0, 32}, {32, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Byte", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{32, 32},
     PlotRange->{{0, 32}, {0, 32}}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "2", ",", "0", ",", 
      "0", ",", "2", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0"}], "}"}]}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQIU/ycEbuIFo/I0kQdGDE3lKXXfkJAHBQIt5Sl1H33kCQAAt0Jz7g==
       "], {{0, 32}, {32, 0}}, {0, 255},
       ColorFunction->GrayLevel],
      BoxForm`ImageTag[
      "Byte", ColorSpace -> "Grayscale", Interleaving -> None],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{32, 32},
     PlotRange->{{0, 32}, {0, 32}}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
      "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "2", ",", 
      "0", ",", "0", ",", "0", ",", "2", ",", "0", ",", "0", ",", "0", ",", 
      "0"}], "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8202955092801604`*^9, 3.8202955137598476`*^9}},
 CellLabel->
  "Out[211]=",ExpressionUUID->"d8e53fe4-80c3-48b2-8246-2e3ed4337cdf"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataT", "=", 
   RowBox[{"Batch", "@", "100"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataV", "=", 
   RowBox[{"Batch", "@", "10"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8202955240743713`*^9, 3.820295524077367*^9}},
 CellLabel->
  "In[212]:=",ExpressionUUID->"0b24d0d4-3a2a-4c56-b139-b3a72b0d12dd"]
}, Closed]],

Cell[CellGroupData[{

Cell["2\tsetup a network", "Subsubsection",
 CellChangeTimes->{{3.82029554739268*^9, 
  3.820295558320241*^9}},ExpressionUUID->"127c677a-c549-4bba-8fb3-\
f502c0bccf33"],

Cell["which is similar to YOLO.", "Text",
 CellChangeTimes->{{3.820295563094366*^9, 
  3.820295570297542*^9}},ExpressionUUID->"c7244f35-34cb-438a-a286-\
0aa99f9027d4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"net", "=", 
  RowBox[{"NetInitialize", "@", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ConvolutionLayer", "[", 
        RowBox[{"20", ",", "5"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PoolingLayer", "[", 
        RowBox[{"2", ",", "2"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ConvolutionLayer", "[", 
        RowBox[{"20", ",", "5"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PoolingLayer", "[", 
        RowBox[{"2", ",", "2"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"FlattenLayer", "[", "]"}], ",", "\[IndentingNewLine]", "Tanh",
        ",", "\[IndentingNewLine]", 
       RowBox[{"LinearLayer", "[", "120", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"LinearLayer", "[", "36", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"NetEncoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Image\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"32", ",", "32"}], "}"}], ",", "\"\<Grayscale\>\""}], "}"}],
        "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Output\>\"", "\[Rule]", 
      RowBox[{"{", "36", "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8202955745640864`*^9, 3.820295601734646*^9}},
 CellLabel->
  "In[215]:=",ExpressionUUID->"7889adda-f85f-4dc3-bfac-47d1c881b0df"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"36\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["11", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{20, 1, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{20}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 20, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 1, "$InputSize" -> {32, 32}, 
                    "$OutputSize" -> {28, 28}, "$WeightsInputChannels" -> 1], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 28, 28}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {20, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 28, 28}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 20, "$InputSize" -> {28, 28}, 
                    "$OutputSize" -> {14, 14}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 14, 14}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{20, 20, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{20}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 20, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 20, "$InputSize" -> {14, 14}, 
                    "$OutputSize" -> {10, 10}, "$WeightsInputChannels" -> 20],
                     "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 10, 10}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {20, 10, 10}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 10, 10}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 20, "$InputSize" -> {10, 10}, 
                    "$OutputSize" -> {5, 5}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 5, 5}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 5, 5}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                    "8" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {500}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                    "9" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{120, 500}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{120}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {120}, "$OutputSize" -> 120, 
                    "$InputSize" -> 500, "$InputDimensions" -> {500}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]]], 
                    "10" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {120}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]]], 
                    "11" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{36, 120}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{36}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {36}, "$OutputSize" -> 36, 
                    "$InputSize" -> 120, "$InputDimensions" -> {120}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{1, 32, 32}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {32, 32}, "ColorSpace" -> "Grayscale", 
                    "ColorChannels" -> 1, "Interleaving" -> False, 
                    "MeanImage" -> None, "VarianceImage" -> None, "$Version" -> 
                    "12.0.11"]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\"", 
                    "\"32\"", "\"32\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"10\"", "\"10\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"10\"", "\"10\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"5\"", "\"5\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Tanh", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"120\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"120\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"36\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"36\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8202955760078135`*^9, 3.820295604997238*^9}},
 CellLabel->
  "Out[215]=",ExpressionUUID->"81eed8b4-bf07-4ab9-b774-4aa53e854b37"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["3\ttrain and validation", "Subsubsection",
 CellChangeTimes->{{3.82029561888305*^9, 
  3.8202956244326982`*^9}},ExpressionUUID->"a964df1a-3289-40b5-b967-\
e89398a0770d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"netT", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"net", ",", "dataT", ",", "All", ",", 
     RowBox[{"ValidationSet", "\[Rule]", "dataV"}], ",", 
     RowBox[{"TargetDevice", "\[Rule]", "\"\<GPU\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.820295626475981*^9, 3.820295649162342*^9}},
 CellLabel->
  "In[218]:=",ExpressionUUID->"f8aa4e07-1960-461b-adf9-a54696b051f7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"netT", "[", "\"\<LossPlot\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"netT", "[", "\"\<RoundMeasurements\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"netF", "=", 
  RowBox[{"netT", "[", "\"\<TrainedNet\>\"", "]"}]}]}], "Input",
 CellChangeTimes->{{3.820295662853201*^9, 3.8202956628552*^9}},
 CellLabel->
  "In[219]:=",ExpressionUUID->"fec9245b-e180-491e-bc92-aca3f23d2f42"],

Cell[BoxData[
 TemplateBox[{GridBox[{{"", 
      ItemBox["\"rounds\"", DefaultBaseStyle -> "LabeledLabel"]}, {
      RotationBox[
       ItemBox["\"loss\"", DefaultBaseStyle -> "LabeledLabel"], BoxRotation -> 
       1.5708], 
      GraphicsBox[{
        AbsoluteThickness[1.25], {{
          Hue[0.083, 1., 1.], 
          LineBox[CompressedData["
1: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
y/1N
           "]]}, {}}, {{
          Hue[0.59, 0.7, 0.75], 
          LineBox[CompressedData["
1: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
c8T+/39Wrc6DOaYTrNnE/j8R9+xV
           "]]}, {}}}, Prolog -> {{
          InsetBox[
           FormBox["1000", TraditionalForm], 
           Offset[{-2, -2}, {1000., -0.35700000000000004`}], {1., 1.}], 
          InsetBox[
           FormBox["2000", TraditionalForm], 
           Offset[{-2, -2}, {2000., -0.35700000000000004`}], {1., 1.}], 
          InsetBox[
           FormBox["3000", TraditionalForm], 
           Offset[{-2, -2}, {3000., -0.35700000000000004`}], {1., 1.}], 
          InsetBox[
           FormBox["4000", TraditionalForm], 
           Offset[{-2, -2}, {4000., -0.35700000000000004`}], {1., 1.}], 
          InsetBox[
           FormBox["5000", TraditionalForm], 
           Offset[{-2, -2}, {5000., -0.35700000000000004`}], {1., 1.}]}, {
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-4\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -4.}], {-1, -1.}], 
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-3\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -3.}], {-1, -1.}], 
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-2\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -2.}], {-1, -1.}], 
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-1\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -1.}], {-1, -1.}]}}, 
       PlotRange -> {{0, 3095.25}, {-4.743, -0.35700000000000004`}}, 
       ImageSize -> {302, 182.}, 
       GridLines -> {{1000., 2000., 3000., 4000., 5000.}, {{-5., 
           GrayLevel[0.3001]}, {-4., 
           GrayLevel[0.3001]}, {-3., 
           GrayLevel[0.3001]}, {-2., 
           GrayLevel[0.3001]}, {-1., 
           GrayLevel[0.3001]}}}, Frame -> True, Axes -> None, AspectRatio -> 
       Full, BaseStyle -> {
        FontFamily -> "Verdana", FontSize -> 8, FontColor -> GrayLevel[0.5], 
         ScriptSizeMultipliers -> 0.2, ScriptMinSize -> 6}, PlotRangePadding -> 
       None, PlotRangeClipping -> True, Background -> GrayLevel[1], 
       FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, FrameTicks -> None]}},
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    GridBoxSpacings -> {"Columns" -> {{0.5}}}, 
    BaseStyle -> {
     FontFamily -> "Verdana", FontSize -> 8, FontColor -> GrayLevel[0.4]}],
   FormBox[
    TemplateBox[{"\"validation\"", "\"training\""}, "LineLegend", 
     DisplayFunction -> (FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.59, 0.7, 0.75]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.59, 0.7, 0.75]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.083, 1., 1.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.083, 1., 1.]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}],
                "Grid"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
           "Grid"], Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
        Background -> Automatic, StripOnInput -> False], TraditionalForm]& ), 
     InterpretationFunction :> (RowBox[{"LineLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.59, 0.7, 0.75], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> Hue[0.59, 0.7, 0.5], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 StyleBox[
                  RowBox[{"Hue", "[", 
                    RowBox[{"0.59`", ",", "0.7`", ",", "0.75`"}], "]"}], 
                  NumberMarks -> False]], Appearance -> None, BaseStyle -> {},
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.59, 0.7, 0.75]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Hue[0.59, 0.7, 0.75], Editable -> False, Selectable -> False], 
              ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.083, 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> Hue[0.083, 1., 0.6666666666666667], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 StyleBox[
                  RowBox[{"Hue", "[", 
                    RowBox[{"0.083`", ",", "1.`", ",", "1.`"}], "]"}], 
                  NumberMarks -> False]], Appearance -> None, BaseStyle -> {},
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.083, 1., 1.]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Hue[0.083, 1., 1.], Editable -> False, Selectable -> False]}], 
            "}"}], ",", 
          RowBox[{"{", 
            RowBox[{#, ",", #2}], "}"}]}], "]"}]& ), Editable -> True], 
    TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8202956782134523`*^9},
 CellLabel->
  "Out[219]=",ExpressionUUID->"1f45c14e-ce64-4836-a08b-939b6d7ca4af"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"Loss\"\>", "\[Rule]", "0.00014190301578764775`"}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.820295678227727*^9},
 CellLabel->
  "Out[220]=",ExpressionUUID->"a1f2501c-8bd5-447f-b7f5-4b0d71d8e5f9"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"36\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["11", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{20, 1, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{20}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 20, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 1, "$InputSize" -> {32, 32}, 
                    "$OutputSize" -> {28, 28}, "$WeightsInputChannels" -> 1], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 28, 28}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {20, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 28, 28}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 20, "$InputSize" -> {28, 28}, 
                    "$OutputSize" -> {14, 14}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 14, 14}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{20, 20, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{20}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 20, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 20, "$InputSize" -> {14, 14}, 
                    "$OutputSize" -> {10, 10}, "$WeightsInputChannels" -> 20],
                     "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 10, 10}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {20, 10, 10}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 10, 10}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 20, "$InputSize" -> {10, 10}, 
                    "$OutputSize" -> {5, 5}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 5, 5}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 5, 5}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                    "8" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {500}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                    "9" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{120, 500}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{120}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {120}, "$OutputSize" -> 120, 
                    "$InputSize" -> 500, "$InputDimensions" -> {500}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]]], 
                    "10" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {120}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]]], 
                    "11" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{36, 120}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{36}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {36}, "$OutputSize" -> 36, 
                    "$InputSize" -> 120, "$InputDimensions" -> {120}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{1, 32, 32}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {32, 32}, "ColorSpace" -> "Grayscale", 
                    "ColorChannels" -> 1, "Interleaving" -> False, 
                    "MeanImage" -> None, "VarianceImage" -> None, "$Version" -> 
                    "12.0.11"]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\"", 
                    "\"32\"", "\"32\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"10\"", "\"10\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"10\"", "\"10\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"5\"", "\"5\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Tanh", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"120\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"120\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"36\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"36\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8202956782494264`*^9},
 CellLabel->
  "Out[221]=",ExpressionUUID->"7c05aff2-80d5-4cb9-a7c9-cb1b2aaba50b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"netT", "[", "\"\<LossPlot\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"netT", "[", "\"\<RoundMeasurements\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"netF", "=", 
  RowBox[{"netT", "[", "\"\<TrainedNet\>\"", "]"}]}]}], "Input",
 CellChangeTimes->{{3.8202956849514027`*^9, 3.820295684954404*^9}},
 CellLabel->
  "In[222]:=",ExpressionUUID->"eef3790c-5745-4b46-88f7-1db1f89b0e00"],

Cell[BoxData[
 TemplateBox[{GridBox[{{"", 
      ItemBox["\"rounds\"", DefaultBaseStyle -> "LabeledLabel"]}, {
      RotationBox[
       ItemBox["\"loss\"", DefaultBaseStyle -> "LabeledLabel"], BoxRotation -> 
       1.5708], 
      GraphicsBox[{
        AbsoluteThickness[1.25], {{
          Hue[0.083, 1., 1.], 
          LineBox[CompressedData["
1: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
y/1N
           "]]}, {}}, {{
          Hue[0.59, 0.7, 0.75], 
          LineBox[CompressedData["
1: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
c8T+/39Wrc6DOaYTrNnE/j8R9+xV
           "]]}, {}}}, Prolog -> {{
          InsetBox[
           FormBox["1000", TraditionalForm], 
           Offset[{-2, -2}, {1000., -0.35700000000000004`}], {1., 1.}], 
          InsetBox[
           FormBox["2000", TraditionalForm], 
           Offset[{-2, -2}, {2000., -0.35700000000000004`}], {1., 1.}], 
          InsetBox[
           FormBox["3000", TraditionalForm], 
           Offset[{-2, -2}, {3000., -0.35700000000000004`}], {1., 1.}], 
          InsetBox[
           FormBox["4000", TraditionalForm], 
           Offset[{-2, -2}, {4000., -0.35700000000000004`}], {1., 1.}], 
          InsetBox[
           FormBox["5000", TraditionalForm], 
           Offset[{-2, -2}, {5000., -0.35700000000000004`}], {1., 1.}]}, {
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-4\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -4.}], {-1, -1.}], 
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-3\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -3.}], {-1, -1.}], 
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-2\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -2.}], {-1, -1.}], 
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-1\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -1.}], {-1, -1.}]}}, 
       PlotRange -> {{0, 3095.25}, {-4.743, -0.35700000000000004`}}, 
       ImageSize -> {302, 182.}, 
       GridLines -> {{1000., 2000., 3000., 4000., 5000.}, {{-5., 
           GrayLevel[0.3001]}, {-4., 
           GrayLevel[0.3001]}, {-3., 
           GrayLevel[0.3001]}, {-2., 
           GrayLevel[0.3001]}, {-1., 
           GrayLevel[0.3001]}}}, Frame -> True, Axes -> None, AspectRatio -> 
       Full, BaseStyle -> {
        FontFamily -> "Verdana", FontSize -> 8, FontColor -> GrayLevel[0.5], 
         ScriptSizeMultipliers -> 0.2, ScriptMinSize -> 6}, PlotRangePadding -> 
       None, PlotRangeClipping -> True, Background -> GrayLevel[1], 
       FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, FrameTicks -> None]}},
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    GridBoxSpacings -> {"Columns" -> {{0.5}}}, 
    BaseStyle -> {
     FontFamily -> "Verdana", FontSize -> 8, FontColor -> GrayLevel[0.4]}],
   FormBox[
    TemplateBox[{"\"validation\"", "\"training\""}, "LineLegend", 
     DisplayFunction -> (FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.59, 0.7, 0.75]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.59, 0.7, 0.75]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.083, 1., 1.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.083, 1., 1.]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}],
                "Grid"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
           "Grid"], Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
        Background -> Automatic, StripOnInput -> False], TraditionalForm]& ), 
     InterpretationFunction :> (RowBox[{"LineLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.59, 0.7, 0.75], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> Hue[0.59, 0.7, 0.5], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 StyleBox[
                  RowBox[{"Hue", "[", 
                    RowBox[{"0.59`", ",", "0.7`", ",", "0.75`"}], "]"}], 
                  NumberMarks -> False]], Appearance -> None, BaseStyle -> {},
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.59, 0.7, 0.75]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Hue[0.59, 0.7, 0.75], Editable -> False, Selectable -> False], 
              ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.083, 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> Hue[0.083, 1., 0.6666666666666667], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 StyleBox[
                  RowBox[{"Hue", "[", 
                    RowBox[{"0.083`", ",", "1.`", ",", "1.`"}], "]"}], 
                  NumberMarks -> False]], Appearance -> None, BaseStyle -> {},
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.083, 1., 1.]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Hue[0.083, 1., 1.], Editable -> False, Selectable -> False]}], 
            "}"}], ",", 
          RowBox[{"{", 
            RowBox[{#, ",", #2}], "}"}]}], "]"}]& ), Editable -> True], 
    TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.820295685544733*^9},
 CellLabel->
  "Out[222]=",ExpressionUUID->"4aaf9cc1-d211-4fd3-b38a-ab85c38f69de"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"Loss\"\>", "\[Rule]", "0.00014190301578764775`"}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.820295685574501*^9},
 CellLabel->
  "Out[223]=",ExpressionUUID->"387c13c4-8e0e-479c-88b3-c44b0551402e"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"36\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["11", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{20, 1, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{20}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 20, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 1, "$InputSize" -> {32, 32}, 
                    "$OutputSize" -> {28, 28}, "$WeightsInputChannels" -> 1], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 28, 28}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {20, 28, 28}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 28, 28}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 20, "$InputSize" -> {28, 28}, 
                    "$OutputSize" -> {14, 14}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 14, 14}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{20, 20, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{20}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 20, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 20, "$InputSize" -> {14, 14}, 
                    "$OutputSize" -> {10, 10}, "$WeightsInputChannels" -> 20],
                     "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 10, 10}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {20, 10, 10}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 10, 10}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 20, "$InputSize" -> {10, 10}, 
                    "$OutputSize" -> {5, 5}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 5, 5}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 5, 5}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                    "8" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {500}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]]], 
                    "9" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{120, 500}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{120}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {120}, "$OutputSize" -> 120, 
                    "$InputSize" -> 500, "$InputDimensions" -> {500}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{500}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]]], 
                    "10" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {120}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]]], 
                    "11" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{36, 120}],
                     "Biases" -> NeuralNetworks`Private`DummyArray[{36}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {36}, "$OutputSize" -> 36, 
                    "$InputSize" -> 120, "$InputDimensions" -> {120}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{1, 32, 32}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {32, 32}, "ColorSpace" -> "Grayscale", 
                    "ColorChannels" -> 1, "Interleaving" -> False, 
                    "MeanImage" -> None, "VarianceImage" -> None, "$Version" -> 
                    "12.0.11"]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{36}, NeuralNetworks`RealT]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\"", 
                    "\"32\"", "\"32\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"10\"", "\"10\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"10\"", "\"10\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"5\"", "\"5\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Tanh", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"500\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"120\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"120\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"36\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"36\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8202956856168003`*^9},
 CellLabel->
  "Out[224]=",ExpressionUUID->"b39aa236-e424-49b5-8cbf-009745d02a65"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"dataV", "[", 
  RowBox[{"[", 
   RowBox[{"n", ",", "1"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"netF", "@", "%"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"dataV", "[", 
  RowBox[{"[", 
   RowBox[{"n", ",", "2"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Round", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{{3.820295691790407*^9, 3.820295706104624*^9}},
 CellLabel->
  "In[230]:=",ExpressionUUID->"0e3995d0-2507-4ce8-bd8f-1347a1c03661"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRJI
mQIU/ycEbuIFmPJAM2kqT8j+UflhKb8BLrQBq7z0PpgQAxb5o+wMDFMhuhlg
LFL037yJ0DMVqzwh92MBoJROS3mI/QQAAAkladw=
    "], {{0, 32}, {32, 0}}, {0, 255},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag["Byte", ColorSpace -> "Grayscale", Interleaving -> None],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{193., Automatic},
  ImageSizeRaw->{32, 32},
  PlotRange->{{0, 32}, {0, 32}}]], "Output",
 CellChangeTimes->{{3.8202956924386735`*^9, 3.820295706815489*^9}},
 CellLabel->
  "Out[231]=",ExpressionUUID->"2d284401-ad67-46f3-8d7b-dd6cf36ae53f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", 
   ",", "2", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "2", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.8202956924386735`*^9, 3.820295706830475*^9}},
 CellLabel->
  "Out[233]=",ExpressionUUID->"d332b0f6-5118-4dc9-ab51-48f845bb5eeb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0", 
   ",", "2", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   "2", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.8202956924386735`*^9, 3.820295706845476*^9}},
 CellLabel->
  "Out[234]=",ExpressionUUID->"d1a4c478-8c8a-410d-9afb-6b937bb6e487"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Incremental interactive training - class 2 class", "Subsection",
 CellChangeTimes->{{3.8202965041665916`*^9, 
  3.8202965260853014`*^9}},ExpressionUUID->"d1de44d9-b93d-4820-a6b9-\
34876910eaa7"],

Cell[CellGroupData[{

Cell["1\tsetup a network", "Subsubsection",
 CellChangeTimes->{{3.8202986130705075`*^9, 
  3.8202986198876715`*^9}},ExpressionUUID->"d8b57ff8-d7a2-42fb-b6c3-\
df9ed1065417"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"classesIn", "=", 
   RowBox[{"{", 
    RowBox[{"\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<c\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"classesOut", "=", 
   RowBox[{"{", 
    RowBox[{"\"\<A\>\"", ",", "\"\<B\>\"", ",", "\"\<C\>\""}], "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8202965311349444`*^9, 3.8202965311369348`*^9}},
 CellLabel->
  "In[235]:=",ExpressionUUID->"cd8353e4-9116-478a-839d-88f05fdcdb57"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"netT", "=", 
  RowBox[{"NetInitialize", "@", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"LinearLayer", "[", "3", "]"}], ",", 
       RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}], ",", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"NetEncoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Class\>\"", ",", "classesIn"}], "}"}], "]"}]}], ",", 
     RowBox[{"\"\<Output\>\"", "\[Rule]", 
      RowBox[{"NetDecoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Class\>\"", ",", "classesOut"}], "}"}], "]"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.820296535226574*^9, 3.8202965352284665`*^9}},
 CellLabel->
  "In[237]:=",ExpressionUUID->"d0152f70-5fc5-48e3-8e1c-a47881ed65a8"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{3}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {3}, "$OutputSize" -> 3, 
                    "$InputSize" -> 1, "$InputDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[3]]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association["Form" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[3]], "Type" -> "Class", 
                    "Labels" -> {"\"a\"", "\"b\"", "\"c\""}, "OutputForm" -> 
                    "Index", "Dimensions" -> {}, "Count" -> 3, "$Version" -> 
                    "12.0.11"]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {"\"A\"", "\"B\"", "\"C\""}, "InputDepth" -> 
                    1, "Dimensions" -> 3, "$Rank" -> 0, "$Version" -> 
                    "12.0.11"]]], NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"class\""}, {
                    TemplateBox[{"\"index\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"range\"",
                     "\":\"", "\" \"", 
                    TemplateBox[{"1", "\"..\"", "3"}, "RowDefault"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.820296535932478*^9},
 CellLabel->
  "Out[237]=",ExpressionUUID->"4aab7c14-2e46-4ee1-ba28-0da104a7a010"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["2\tcreate new samples", "Subsubsection",
 CellChangeTimes->{{3.820298626510292*^9, 
  3.8202986346462708`*^9}},ExpressionUUID->"91b1c034-1f40-491b-bcd0-\
936c84735cbe"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AddTrainingData", "[", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"in", ",", "out", ",", "rulesIn", ",", "rulesOut", ",", "res"}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"in", "=", 
      RowBox[{"RandomChoice", "[", "classesIn", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"out", "=", 
      RowBox[{"netT", "@", "in"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"rulesIn", "=", 
      RowBox[{"Thread", "[", 
       RowBox[{"classesOut", "\[Rule]", 
        RowBox[{"Range", "@", 
         RowBox[{"Length", "@", "classesOut"}]}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"rulesOut", "=", 
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"Range", "@", 
         RowBox[{"Length", "@", "classesOut"}]}], "\[Rule]", "classesOut"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"res", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"FormFunction", "[", 
          RowBox[{"FormObject", "[", 
           RowBox[{
            RowBox[{"<|", 
             RowBox[{"\"\< \>\"", "\[Rule]", 
              RowBox[{"<|", 
               RowBox[{
                RowBox[{"\"\<Interpreter\>\"", "\[Rule]", "rulesIn"}], ",", 
                RowBox[{"\"\<Control\>\"", "\[Rule]", "RadioButtonBar"}], ",", 
                RowBox[{"\"\<Default\>\"", "\[Rule]", "out"}]}], "|>"}]}], 
             "|>"}], ",", 
            RowBox[{"AppearanceRules", "\[Rule]", 
             RowBox[{"<|", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
               "\"\<Title\>\"", "\[Rule]", 
                "\"\<evaluate the prediction\>\""}], ",", 
               RowBox[{"\"\<Description\>\"", "\[Rule]", 
                RowBox[{"Text", "[", 
                 RowBox[{"Row", "[", 
                  RowBox[{"{", 
                   RowBox[{"\"\<the predicted value of \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"in", ",", "Red", ",", "24"}], "]"}], ",", 
                    "\"\< is \>\"", ",", 
                    RowBox[{"Style", "[", 
                    RowBox[{"out", ",", "Red", ",", "24"}], "]"}], ",", 
                    "\"\<.\\nCorrect it if it is wrong:\>\""}], "}"}], "]"}], 
                 "]"}]}]}], "|>"}]}]}], "]"}], "]"}], "[", "]"}], "[", 
        "\"\< \>\"", "]"}], "/.", "rulesOut"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Head", "@", "res"}], "===", "String"}], ",", 
       RowBox[{"trainingData", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"trainingData", ",", 
          RowBox[{"in", "\[Rule]", "res"}]}], "]"}]}]}], "]"}]}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8202965435707264`*^9, 3.820296543573699*^9}, 
   3.820296707023378*^9},ExpressionUUID->"ff8164f2-0af6-429b-928d-\
4081d7f5a338"],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{"{", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8202965563536625`*^9, 3.8202965563556585`*^9}},
 CellLabel->
  "In[239]:=",ExpressionUUID->"7a85812b-6d6c-42fe-974b-7dc9db80999f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AddTrainingData", "[", "]"}]], "Input",
 CellChangeTimes->{{3.8202965606444464`*^9, 3.8202965606494474`*^9}, {
  3.8202967939950514`*^9, 3.8202967957818503`*^9}},
 CellLabel->
  "In[284]:=",ExpressionUUID->"cd5d1bc4-e034-4aec-8c56-2dc5db40edd2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"c\"\>", "\[Rule]", "\<\"C\"\>"}], ",", 
   RowBox[{"\<\"b\"\>", "\[Rule]", "\<\"B\"\>"}], ",", 
   RowBox[{"\<\"b\"\>", "\[Rule]", "\<\"B\"\>"}], ",", 
   RowBox[{"\<\"a\"\>", "\[Rule]", "\<\"A\"\>"}], ",", 
   RowBox[{"\<\"a\"\>", "\[Rule]", "\<\"A\"\>"}], ",", 
   RowBox[{"\<\"a\"\>", "\[Rule]", "\<\"A\"\>"}], ",", 
   RowBox[{"\<\"b\"\>", "\[Rule]", "\<\"A\"\>"}], ",", 
   RowBox[{"\<\"b\"\>", "\[Rule]", "\<\"B\"\>"}], ",", 
   RowBox[{"\<\"a\"\>", "\[Rule]", "\<\"A\"\>"}], ",", 
   RowBox[{"\<\"a\"\>", "\[Rule]", "\<\"A\"\>"}], ",", 
   RowBox[{"\<\"b\"\>", "\[Rule]", "\<\"B\"\>"}], ",", 
   RowBox[{"\<\"b\"\>", "\[Rule]", "\<\"B\"\>"}], ",", 
   RowBox[{"\<\"a\"\>", "\[Rule]", "\<\"A\"\>"}], ",", 
   RowBox[{"\<\"b\"\>", "\[Rule]", "\<\"B\"\>"}], ",", 
   RowBox[{"\<\"c\"\>", "\[Rule]", "\<\"C\"\>"}], ",", 
   RowBox[{"\<\"c\"\>", "\[Rule]", "\<\"C\"\>"}], ",", 
   RowBox[{"\<\"c\"\>", "\[Rule]", "\<\"C\"\>"}], ",", 
   RowBox[{"\<\"c\"\>", "\[Rule]", "\<\"A\"\>"}], ",", 
   RowBox[{"\<\"c\"\>", "\[Rule]", "\<\"C\"\>"}], ",", 
   RowBox[{"\<\"c\"\>", "\[Rule]", "\<\"C\"\>"}], ",", 
   RowBox[{"\<\"b\"\>", "\[Rule]", "\<\"B\"\>"}], ",", 
   RowBox[{"\<\"c\"\>", "\[Rule]", "\<\"C\"\>"}], ",", 
   RowBox[{"\<\"b\"\>", "\[Rule]", "\<\"B\"\>"}], ",", 
   RowBox[{"\<\"a\"\>", "\[Rule]", "\<\"A\"\>"}], ",", 
   RowBox[{"\<\"c\"\>", "\[Rule]", "\<\"C\"\>"}], ",", 
   RowBox[{"\<\"c\"\>", "\[Rule]", "\<\"C\"\>"}], ",", 
   RowBox[{"\<\"b\"\>", "\[Rule]", "\<\"B\"\>"}], ",", 
   RowBox[{"\<\"b\"\>", "\[Rule]", "\<\"B\"\>"}], ",", 
   RowBox[{"\<\"b\"\>", "\[Rule]", "\<\"B\"\>"}], ",", 
   RowBox[{"\<\"a\"\>", "\[Rule]", "\<\"A\"\>"}], ",", 
   RowBox[{"\<\"b\"\>", "\[Rule]", "\<\"B\"\>"}], ",", 
   RowBox[{"\<\"b\"\>", "\[Rule]", "\<\"B\"\>"}], ",", 
   RowBox[{"\<\"c\"\>", "\[Rule]", "\<\"C\"\>"}], ",", 
   RowBox[{"\<\"b\"\>", "\[Rule]", "\<\"B\"\>"}], ",", 
   RowBox[{"\<\"a\"\>", "\[Rule]", "\<\"A\"\>"}], ",", 
   RowBox[{"\<\"b\"\>", "\[Rule]", "\<\"B\"\>"}], ",", 
   RowBox[{"\<\"b\"\>", "\[Rule]", "\<\"B\"\>"}], ",", 
   RowBox[{"\<\"b\"\>", "\[Rule]", "\<\"B\"\>"}], ",", 
   RowBox[{"\<\"a\"\>", "\[Rule]", "\<\"A\"\>"}], ",", 
   RowBox[{"\<\"c\"\>", "\[Rule]", "\<\"C\"\>"}], ",", 
   RowBox[{"\<\"c\"\>", "\[Rule]", "\<\"C\"\>"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.820296578545348*^9, 3.820296665516227*^9}, {
  3.8202967179140406`*^9, 3.8202968354990764`*^9}, {3.8202976379312344`*^9, 
  3.8202976433513536`*^9}},
 CellLabel->
  "Out[284]=",ExpressionUUID->"4d0b73fd-33fd-468b-9fb7-04503e70c7db"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["3\tretrain the network", "Subsubsection",
 CellChangeTimes->{{3.820298644752474*^9, 
  3.8202986560397143`*^9}},ExpressionUUID->"a6285917-420f-4665-bcd3-\
3a4428203cd4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"netT", "=", " ", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"netT", ",", " ", "trainingData", ",", 
    RowBox[{"TargetDevice", "\[Rule]", "\"\<GPU\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.820297517437708*^9, 3.8202976191097016`*^9}},
 CellLabel->
  "In[281]:=",ExpressionUUID->"870628c9-fed6-4bf3-b404-648cd884339d"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{3}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {3}, "$OutputSize" -> 3, 
                    "$InputSize" -> 1, "$InputDimensions" -> {}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[3]]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association["Form" -> NeuralNetworks`TensorT[{}, 
                    NeuralNetworks`IndexIntegerT[3]], "Type" -> "Class", 
                    "Labels" -> {"\"a\"", "\"b\"", "\"c\""}, "OutputForm" -> 
                    "Index", "Dimensions" -> {}, "Count" -> 3, "$Version" -> 
                    "12.0.11"]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {"\"A\"", "\"B\"", "\"C\""}, "InputDepth" -> 
                    1, "Dimensions" -> 3, "$Rank" -> 0, "$Version" -> 
                    "12.0.11"]]], NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"class\""}, {
                    TemplateBox[{"\"index\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"range\"",
                     "\":\"", "\" \"", 
                    TemplateBox[{"1", "\"..\"", "3"}, "RowDefault"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.820297541700094*^9, {3.820297583937488*^9, 3.8202976343381405`*^9}},
 CellLabel->
  "Out[281]=",ExpressionUUID->"995e7639-6251-46f2-80d5-5bf41372080a"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Incremental interactive training - image 2 class", "Subsection",
 CellChangeTimes->{{3.820297487372857*^9, 
  3.8202975055262465`*^9}},ExpressionUUID->"0ce7c484-6989-498f-93f2-\
d2e340ded029"],

Cell[CellGroupData[{

Cell["1\tsetup a network", "Subsubsection",
 CellChangeTimes->{{3.820298188590989*^9, 
  3.8202981935376334`*^9}},ExpressionUUID->"65a96728-255c-4c48-9291-\
1171031f07ef"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"classesShape", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Rect\>\"", ",", "\"\<Disk\>\"", ",", "\"\<Circle\>\"", ",", 
     "\"\<Triangle\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"classesColor", "=", 
   RowBox[{"{", 
    RowBox[{"Red", ",", "Green", ",", "Blue"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8202976484146423`*^9, 3.8202976484166403`*^9}},
 CellLabel->
  "In[285]:=",ExpressionUUID->"8924e3f4-c341-44c5-9284-f2c34e3f6d51"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"netConv", "=", 
  RowBox[{"NetChain", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"4", ",", "4"}], "]"}], ",", "Ramp", ",", 
      RowBox[{"PoolingLayer", "[", 
       RowBox[{"2", ",", "2"}], "]"}], ",", 
      RowBox[{"ConvolutionLayer", "[", 
       RowBox[{"4", ",", "4"}], "]"}], ",", "Ramp", ",", 
      RowBox[{"PoolingLayer", "[", 
       RowBox[{"2", ",", "2"}], "]"}], ",", 
      RowBox[{"FlattenLayer", "[", "]"}]}], "}"}], ",", 
    RowBox[{"\"\<Input\>\"", "\[Rule]", 
     RowBox[{"NetEncoder", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Image\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"32", ",", "32"}], "}"}], ",", "\"\<RGB\>\""}], "}"}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.820297651301614*^9, 3.820297651307639*^9}},
 CellLabel->
  "In[287]:=",ExpressionUUID->"32cc50d0-e6e6-4094-b150-ebbda4c0c11f"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                 ImageSize -> {36, Automatic}, PlotRangePadding -> 0, 
                 BaseStyle -> GrayLevel[0.6]], 
                StyleBox["uninitialized", 
                 RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto", 
                 Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"100\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["7", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              OverlayBox[{
                GraphicsBox[{
                  Thickness[0.014925373134328358`], {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}},
                     CurveClosed -> {0}]}, {
                   GrayLevel[0.6], 
                   Thickness[0.018686567164179105`], 
                   Opacity[1.], 
                   JoinForm[{"Miter", 10.}], 
                   
                   JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}},
                     CurveClosed -> {0}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.9], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}, {
                   FaceForm[{
                    GrayLevel[0.6], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {
                    25., 95.}, {25., 88.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {
                    39., 95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
                 ImageSize -> {36, Automatic}, PlotRangePadding -> 0, 
                 BaseStyle -> GrayLevel[0.6]], 
                StyleBox["uninitialized", 
                 RGBColor[0.66, 0, 0], FontSize -> 8, FontFamily -> "Roboto", 
                 Background -> GrayLevel[1, 0.65]]}, Alignment -> {Center, 
                 Scaled[0.0001]}], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{4, 3, 4, 4}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 4, "KernelSize" -> {4, 4}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 3, "$InputSize" -> {32, 32}, 
                    "$OutputSize" -> {29, 29}, "$WeightsInputChannels" -> 3], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4, 29, 29}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {4, 29, 29}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 29, 29}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4, 29, 29}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 4, "$InputSize" -> {29, 29}, 
                    "$OutputSize" -> {14, 14}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 29, 29}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4, 14, 14}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`TensorT[{4, 4, 4, 4}, 
                    NeuralNetworks`RealT], "Biases" -> NeuralNetworks`Nullable[
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 4, "KernelSize" -> {4, 4}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 4, "$InputSize" -> {14, 14}, 
                    "$OutputSize" -> {11, 11}, "$WeightsInputChannels" -> 4], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{4, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4, 11, 11}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {4, 11, 11}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 11, 11}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4, 11, 11}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 4, "$InputSize" -> {11, 11}, 
                    "$OutputSize" -> {5, 5}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 11, 11}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4, 5, 5}, NeuralNetworks`RealT]]],
                     "7" -> Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4, 5, 5}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{100}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3, 32, 32}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {32, 32}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, "Interleaving" -> False, 
                    "MeanImage" -> None, "VarianceImage" -> None, "$Version" -> 
                    "12.0.11"]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{100}, NeuralNetworks`RealT]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"32\"", "\"32\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\"", 
                    "\"29\"", "\"29\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\"", 
                    "\"29\"", "\"29\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\"", 
                    "\"14\"", "\"14\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    RGBColor[0.66, 0, 0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\"", 
                    "\"11\"", "\"11\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\"", 
                    "\"11\"", "\"11\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\"", "\"5\"",
                     "\"5\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"100\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"100\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8202976517726*^9},
 CellLabel->
  "Out[287]=",ExpressionUUID->"ed7cf22b-3fcd-4d86-89b6-31d22080557d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"netT", "=", 
  RowBox[{"NetInitialize", "@", 
   RowBox[{"NetGraph", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"netConv", ",", 
       RowBox[{"LinearLayer", "[", "4", "]"}], ",", 
       RowBox[{"SoftmaxLayer", "[", "]"}], ",", 
       RowBox[{"LinearLayer", "[", "3", "]"}], ",", 
       RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"NetPort", "[", "\"\<Input\>\"", "]"}], "\[Rule]", 
        RowBox[{"1", "\[Rule]", 
         RowBox[{"2", "\[Rule]", 
          RowBox[{"3", "\[Rule]", 
           RowBox[{"NetPort", "[", "\"\<shape\>\"", "]"}]}]}]}]}], ",", 
       RowBox[{"1", "\[Rule]", 
        RowBox[{"4", "\[Rule]", 
         RowBox[{"5", "\[Rule]", 
          RowBox[{"NetPort", "[", "\"\<color\>\"", "]"}]}]}]}]}], "}"}], ",", 
     RowBox[{"\"\<shape\>\"", "\[Rule]", 
      RowBox[{"NetDecoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Class\>\"", ",", "classesShape"}], "}"}], "]"}]}], ",", 
     RowBox[{"\"\<color\>\"", "\[Rule]", 
      RowBox[{"NetDecoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Class\>\"", ",", "classesColor"}], "}"}], "]"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.820297654973709*^9, 3.8202976549767084`*^9}},
 CellLabel->
  "In[288]:=",ExpressionUUID->"f9643169-c0ab-4ca0-a228-04d47c702219"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of outputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["5", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-4., 2.4492935982947064`*^-16}, {-3., 
                    1.8369701987210297`*^-16}}], 
                    
                    LineBox[{{-3., 1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}}], 
                    
                    LineBox[{{-3., 
                    1.8369701987210297`*^-16}, {-2., -0.9999999999999999}}], 
                    
                    LineBox[{{-2., -0.9999999999999999}, {-1., \
-0.9999999999999999}}], 
                    
                    LineBox[{{-1., -0.9999999999999999}, \
{-6.123233995736766*^-17, -1.}}], 
                    
                    LineBox[{{-2., 1.2246467991473532`*^-16}, {-1., 
                    6.123233995736766*^-17}}], 
                    LineBox[{{-1., 6.123233995736766*^-17}, {0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    2.0818995585505003`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 
                    1.4695761589768238`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, -0.5999999999999998}, \
{-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-1.4, -0.9999999999999998}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-0.4000000000000001, -1.}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999999, -1.1102230246251565`*^-16}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    8.572527594031473*^-17}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736766*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-0.4, 
                    2.4492935982947065`*^-17}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736766*^-17}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-4., 2.4492935982947064`*^-16}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-3., 1.8369701987210297`*^-16}], 
                    Offset[{12, 12}, {-3., 1.8369701987210297`*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-3., 
                    1.8369701987210297`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["1", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[7]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2., 1.2246467991473532`*^-16}], 
                    Offset[{10, 10}, {-2., 1.2246467991473532`*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[
                    
                    GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {
                    1.3, 1}, {0.9, 0}}, {{
                    Opacity[0.2], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[3.5], 
                    RGBColor[0.33, 0.33, 0.33], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 18], {-2., 
                    1.2246467991473532`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"LinearLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "4", "}"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "100"}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["2", Bold], 
                    Style[
                    HoldForm[
                    LinearLayer[{4}, "Input" -> 100]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2., -0.9999999999999999}], 
                    Offset[{10, 10}, {-2., -0.9999999999999999}]]}, 
                    InsetBox[
                    GraphicsBox[
                    
                    GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {
                    1.3, 1}, {0.9, 0}}, {{
                    Opacity[0.2], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[3.5], 
                    RGBColor[0.33, 0.33, 0.33], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 
                    18], {-2., -0.9999999999999999}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"4\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"LinearLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "3", "}"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "100"}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["4", Bold], 
                    Style[
                    HoldForm[
                    LinearLayer[{3}, "Input" -> 100]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-1., -0.9999999999999999}], 
                    Offset[{10, 10}, {-1., -0.9999999999999999}]]}, 
                    InsetBox[
                    FormBox["\"S\"", TraditionalForm], 
                    Offset[{0, -1}, {-1., -0.9999999999999999}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"5\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"SoftmaxLayer", "[", 
                    RowBox[{"\"Input\"", "\[Rule]", "3"}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["5", Bold], 
                    Style[
                    HoldForm[
                    SoftmaxLayer["Input" -> 3]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-6.123233995736766*^-17, -1.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"color\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["color", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-1., 6.123233995736766*^-17}], 
                    Offset[{10, 10}, {-1., 6.123233995736766*^-17}]]}, 
                    InsetBox[
                    FormBox["\"S\"", TraditionalForm], 
                    Offset[{0, -1}, {-1., 6.123233995736766*^-17}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"SoftmaxLayer", "[", 
                    RowBox[{"\"Input\"", "\[Rule]", "4"}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["3", Bold], 
                    Style[
                    HoldForm[
                    SoftmaxLayer["Input" -> 4]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"shape\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["shape", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    StyleBox[{{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    Offset[{0, -7}, {-4., 2.4492935982947064`*^-16}], {0, 1.},
                     Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    Offset[{0, -15}, {-3., 1.8369701987210297`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    Offset[{0, -13}, {-2., 1.2246467991473532`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    Offset[{0, -13}, {-2., -0.9999999999999999}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    Offset[{0, -13}, {-1., -0.9999999999999999}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"color\"", TraditionalForm], 
                    Offset[{0, -7}, {-6.123233995736766*^-17, -1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{0, -13}, {-1., 6.123233995736766*^-17}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"shape\"", TraditionalForm], 
                    Offset[{0, -7}, {0., 0.}], {0, 1.}, Automatic, {1, 0}]}}, 
                    FontColor -> GrayLevel[0.5], StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"3\"", "\"32\"", "\"32\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-3.4, 
                    2.0818995585505003`*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"100\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.3677786976552205`*^-16, 
                    5.5}, {-2.4000000000000004`, 1.4695761589768238`*^-16}], {
                    0., -0.17}, Automatic, {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"100\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087296526011, 
                    3.889087296526011}, {-2.4000000000000004`, \
-0.5999999999999998}], {0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"3\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-1.4, -0.9999999999999998}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"3\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{6.106226635438362*^-16, 
                    5.5}, {-0.4000000000000001, -1.}], {0., -0.17}, 
                    Automatic, {1., -1.1102230246251568`*^-16}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"4\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.3677786976552215`*^-16, 5.5}, {-1.4, 
                    8.572527594031473*^-17}], {0., -0.17}, Automatic, {
                    1., -6.123233995736766*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"4\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.3677786976552215`*^-16, 5.5}, {-0.4, 
                    2.4492935982947065`*^-17}], {0., -0.17}, Automatic, {
                    1., -6.123233995736766*^-17}]}, FontColor -> 
                    GrayLevel[0.7], FontSize -> 8, FontWeight -> "Thin", 
                    StripOnInput -> False]}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    Part[{{-4., 2.4492935982947064`*^-16}, {-3., 
                    1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}, {-2., -0.9999999999999999}, \
{-1., -0.9999999999999999}, {-6.123233995736766*^-17, -1.}, {-1., 
                    6.123233995736766*^-17}, {0., 0.}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 24, 20, 20, 20, 8, 20, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, ImageSize -> {276., 101.00000000000001`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{28., 28.}, {28., 18.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "1"], 
                    NeuralNetworks`NetPath["Nodes", "2"], 
                    NeuralNetworks`NetPath["Nodes", "4"], 
                    NeuralNetworks`NetPath["Nodes", "5"], 
                    NeuralNetworks`NetPath["Outputs", "color"], 
                    NeuralNetworks`NetPath["Nodes", "3"], 
                    NeuralNetworks`NetPath["Outputs", "shape"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3, 32, 32}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {32, 32}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, "Interleaving" -> False, 
                    "MeanImage" -> None, "VarianceImage" -> None, "$Version" -> 
                    "12.0.11"]], 
                    Association[
                    "color" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`RealT], "Type" -> "Class", "Labels" -> {
                    RGBColor[1, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 0, 1]}, "InputDepth" -> 1, "Dimensions" -> 3, 
                    "$Rank" -> 0, "$Version" -> "12.0.11"], "shape" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {
                    "\"Rect\"", "\"Disk\"", "\"Circle\"", "\"Triangle\""}, 
                    "InputDepth" -> 1, "Dimensions" -> 4, "$Rank" -> 0, 
                    "$Version" -> "12.0.11"]], 
                    Association[
                    "1" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{4, 3, 4, 
                    4}], "Biases" -> NeuralNetworks`Private`DummyArray[{4}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 4, "KernelSize" -> {4, 4}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 3, "$InputSize" -> {32, 32}, 
                    "$OutputSize" -> {29, 29}, "$WeightsInputChannels" -> 3], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{3, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4, 29, 29}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {4, 29, 29}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{4, 29, 29}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4, 29, 29}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 4, "$InputSize" -> {29, 29}, 
                    "$OutputSize" -> {14, 14}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{4, 29, 29}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4, 14, 14}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{4, 4, 4, 
                    4}], "Biases" -> NeuralNetworks`Private`DummyArray[{4}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 4, "KernelSize" -> {4, 4}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 4, "$InputSize" -> {14, 14}, 
                    "$OutputSize" -> {11, 11}, "$WeightsInputChannels" -> 4], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{4, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4, 11, 11}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {4, 11, 11}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{4, 11, 11}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4, 11, 11}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 4, "$InputSize" -> {11, 11}, 
                    "$OutputSize" -> {5, 5}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{4, 11, 11}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4, 5, 5}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{4, 5, 5}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{100}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{3, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{100}, NeuralNetworks`RealT]]], 
                    "4" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3, 100}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{3}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {3}, "$OutputSize" -> 3, 
                    "$InputSize" -> 100, "$InputDimensions" -> {100}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{100}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{4, 100}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{4}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {4}, "$OutputSize" -> 4, 
                    "$InputSize" -> 100, "$InputDimensions" -> {100}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{100}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]]], 
                    Association[]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"color\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {"", "", "", "", 
                    StyleBox[
                    TemplateBox[{"\"shape\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8202976556463284`*^9},
 CellLabel->
  "Out[288]=",ExpressionUUID->"a3f214c6-2d97-450c-bb64-06e6d8333d8d"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["2\tcreate new samples", "Subsubsection",
 CellChangeTimes->{{3.8202985614773808`*^9, 
  3.8202985729649515`*^9}},ExpressionUUID->"74620905-dd57-4d4d-a834-\
323f73f62821"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GenerateRandomInput", "[", "]"}], ":=", 
  RowBox[{"Rasterize", "[", 
   RowBox[{
    RowBox[{"Graphics", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"RandomChoice", "@", "classesColor"}], ",", 
        RowBox[{"RandomChoice", "@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Rectangle", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", ".5"}], ",", 
               RowBox[{"-", ".5"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{".5", ",", ".5"}], "}"}]}], "]"}], ",", 
           RowBox[{"Disk", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", ".5"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Disk", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", ".5"}], "]"}], ",", 
             "White", ",", 
             RowBox[{"Disk", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", ".4"}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"Triangle", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", ".5"}], ",", 
                RowBox[{"-", ".5"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", ".5"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{".5", ",", 
                RowBox[{"-", ".5"}]}], "}"}]}], "}"}], "]"}]}], "}"}]}]}], 
       "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "1"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "64"}]}], "]"}], ",", 
    RowBox[{"RasterSize", "\[Rule]", "64"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.820297666564769*^9, 3.8202976665707655`*^9}},
 CellLabel->
  "In[289]:=",ExpressionUUID->"f1953aa2-9065-45d1-8aee-6f22ca4950b4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"GenerateRandomInput", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"netT", "@", "%"}]}], "Input",
 CellChangeTimes->{{3.820297670426342*^9, 3.8202976903192363`*^9}},
 CellLabel->
  "In[295]:=",ExpressionUUID->"de27083c-a898-4c17-91c7-fedd597b37aa"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt1zEKwjAYgNGgS0ev4C0c7eha8QAtjcElQiqIp28juDpaEN4j+UkyfWv2
w727bkIIU1NH1z/bUvrXeVcvlzzdUo7jKT9iiuUwbOvj8bPf5xkAAOCL+mP4
6dKvX79+/fr169evX79+/fr169evX79+/fr1r98PAAD8rwWqOeco
    "], {{0, 64}, {64, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{64, 64},
  PlotRange->{{0, 64}, {0, 64}}]], "Output",
 CellChangeTimes->{{3.8202976909020824`*^9, 3.8202976982721777`*^9}},
 CellLabel->
  "Out[295]=",ExpressionUUID->"f9900d3c-7b22-400c-8336-4befde22274a"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"color\"\>", "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0., 0., 0.6666666666666666],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 0, 1],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{"\<\"shape\"\>", "\[Rule]", "\<\"Rect\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.8202976909020824`*^9, 3.8202976982811775`*^9}},
 CellLabel->
  "Out[296]=",ExpressionUUID->"33e32a41-3903-4213-8f26-b6008e03dfc9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"AddTrainingData", "[", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"in", ",", "out", ",", "rulesIn", ",", "rulesOut", ",", "res"}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"in", "=", 
       RowBox[{"GenerateRandomInput", "[", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"out", "=", 
       RowBox[{"netT", "@", "in"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"rulesIn", "=", 
       RowBox[{"Thread", "[", 
        RowBox[{"classesOut", "\[Rule]", 
         RowBox[{"Range", "@", 
          RowBox[{"Length", "@", "classesOut"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"rulesOut", "=", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"Range", "@", 
          RowBox[{"Length", "@", "classesOut"}]}], "\[Rule]", "classesOut"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"res", "=", 
       RowBox[{
        RowBox[{"FormFunction", "[", 
         RowBox[{"FormObject", "[", 
          RowBox[{
           RowBox[{"<|", 
            RowBox[{
             RowBox[{"\"\<shape\>\"", "\[Rule]", 
              RowBox[{"<|", 
               RowBox[{
                RowBox[{"\"\<Interpreter\>\"", "\[Rule]", "classesShape"}], 
                ",", 
                RowBox[{"\"\<Control\>\"", "\[Rule]", "RadioButtonBar"}], ",", 
                RowBox[{"\"\<Default\>\"", "\[Rule]", 
                 RowBox[{"out", "@", "\"\<shape\>\""}]}]}], "|>"}]}], ",", 
             RowBox[{"\"\<color\>\"", "\[Rule]", 
              RowBox[{"<|", 
               RowBox[{
                RowBox[{"\"\<Interpreter\>\"", "\[Rule]", "classesColor"}], 
                ",", 
                RowBox[{"\"\<Control\>\"", "\[Rule]", "RadioButtonBar"}], ",", 
                RowBox[{"\"\<Default\>\"", "\[Rule]", 
                 RowBox[{"out", "@", "\"\<color\>\""}]}]}], "|>"}]}]}], 
            "|>"}], ",", 
           RowBox[{"AppearanceRules", "\[Rule]", 
            RowBox[{"<|", 
             RowBox[{
              RowBox[{
              "\"\<Title\>\"", "\[Rule]", "\"\<evaluate the prediction\>\""}],
               ",", 
              RowBox[{"\"\<Description\>\"", "\[Rule]", 
               RowBox[{"Text", "[", 
                RowBox[{"Row", "[", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<the predicted values of image \\n\>\"", ",", "in", 
                   ",", "\"\<\\nare: \>\"", ",", 
                   RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"out", "@", "\"\<shape\>\""}], ",", "Bold", ",", 
                    "16"}], "]"}], ",", "\"\<  with color \>\"", ",", 
                   RowBox[{"out", "@", "\"\<color\>\""}], ",", 
                   "\"\<.\\n\\nCorrect them if they are wrong:\>\""}], "}"}], 
                 "]"}], "]"}]}]}], "|>"}]}]}], "]"}], "]"}], "[", "]"}]}], 
      ";"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Head", "@", "res"}], "===", "Association"}], ",", 
       RowBox[{"trainingData", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"trainingData", ",", 
          RowBox[{"Prepend", "[", 
           RowBox[{"res", ",", 
            RowBox[{"\"\<Input\>\"", "\[Rule]", "in"}]}], "]"}]}], "]"}]}]}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.820297703700334*^9, 3.8202977037023315`*^9}},
 CellLabel->
  "In[297]:=",ExpressionUUID->"7d381c73-9d7a-442d-a244-081090e55b5b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"trainingData", "=", 
   RowBox[{"{", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.820297706874153*^9, 3.8202977068787603`*^9}},
 CellLabel->
  "In[298]:=",ExpressionUUID->"c39ae243-f755-477f-baee-7d6f75b97a76"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AddTrainingData", "[", "]"}]], "Input",
 CellChangeTimes->{{3.8202977098165083`*^9, 3.820297709818507*^9}, 
   3.820297900541383*^9},
 CellLabel->
  "In[341]:=",ExpressionUUID->"0b571a82-1a7b-4d91-b8ce-b20efa1ef3da"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Input\"\>", "\[Rule]", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztmCFswkAUhpvNVFYimUMiKzvHHGFZggSyjsx0pCxZppBIJBKJRCKRSCQS
iUQibz+5hWwra25c37uRvC8PAqiPu9d3791N56XxdOV5Xt/HW6P9dpum7ff7
AF8ekv5zN4kf75LXuBunYecaP0afr8NnJQiCIAiCIAiCYM9i8S32e9dCBqzX
ajhU1arCZJSNSkX1emq1cm15is1GNZuntbMRRf/rXwwGyvdN5Y+BvXCeVLud
qtf/bH6MMFTbrUv531LdPMrlQ+45oVazldeBReBPJOR8IfI6Wi1WeVSPMx7Y
/MAZwYbNM5uTRTxg8QuX1zGbcfgXm/n8TwHaACL/ICAvRDhuiOR1LJe0/qgS
pP6TCa3/dErrj/aVlPGY1h/FgRTs70X7X3r+Y8Ii9Z/Paf0BqjSRPHoq9OTU
4JQk8sdcyQC6FCJ/FDce7MeubJRKfFMMxRaMRkzyGvPbEpPAIM8MCgVG70Lk
UdCcjPA4C+xrKWom5+T4A8xiNruAv+9QXoNEQt0+Qx5FzNXNTxb01eYbgWVn
rjYmoHrjAMq/1MKaw5yhSbABeshqdMJfA42Zw6tOQRAEQRAEQRCU+gAFJqfg

         "], {{0, 64}, {64, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{64, 64},
       PlotRange->{{0, 64}, {0, 64}}]}], ",", 
     RowBox[{"\<\"shape\"\>", "\[Rule]", "\<\"Circle\"\>"}], ",", 
     RowBox[{"\<\"color\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Input\"\>", "\[Rule]", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztmCFswkAUhpvNVFYimUMiKzvHHGFZggSyjsx0pCxZppBIJBKJRCKRSCQS
iUQibz+5hWwra25c37uRvC8PAqiPu9d3791N56XxdOV5Xt/HW6P9dpum7ff7
AF8ekv5zN4kf75LXuBunYecaP0afr8NnJQiCIAiCIAiCYM9i8S32e9dCBqzX
ajhU1arCZJSNSkX1emq1cm15is1GNZuntbMRRf/rXwwGyvdN5Y+BvXCeVLud
qtf/bH6MMFTbrUv531LdPMrlQ+45oVazldeBReBPJOR8IfI6Wi1WeVSPMx7Y
/MAZwYbNM5uTRTxg8QuX1zGbcfgXm/n8TwHaACL/ICAvRDhuiOR1LJe0/qgS
pP6TCa3/dErrj/aVlPGY1h/FgRTs70X7X3r+Y8Ii9Z/Paf0BqjSRPHoq9OTU
4JQk8sdcyQC6FCJ/FDce7MeubJRKfFMMxRaMRkzyGvPbEpPAIM8MCgVG70Lk
UdCcjPA4C+xrKWom5+T4A8xiNruAv+9QXoNEQt0+Qx5FzNXNTxb01eYbgWVn
rjYmoHrjAMq/1MKaw5yhSbABeshqdMJfA42Zw6tOQRAEQRAEQRCU+gAFJqfg

         "], {{0, 64}, {64, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{64, 64},
       PlotRange->{{0, 64}, {0, 64}}]}], ",", 
     RowBox[{"\<\"shape\"\>", "\[Rule]", "\<\"Circle\"\>"}], ",", 
     RowBox[{"\<\"color\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Input\"\>", "\[Rule]", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztlz0OgkAQRok2lpa03oDSUktbjAeAiMQGEzAxVhzB43EMSsp1CcYYfxDY
XXYm+V6GCVCQzXsVi/DkHyaO42Qzufzgsk7T4Lqdy4ddkh3jJNpvknMUR+ky
nMqXq8dV3wsAAAAAAAAA0ERZ2j6BAlUlPK/eTLndhPzDk5sjUrvr1ueXm2OC
Rn4z7BI85TfDLsGrfHYJ3uSzS/Apn1GCr/IZJfgln0WCFvksErTLJ57gr3zi
CbrIJ5ugo3yyCbrLJ5igl3yCCfrKJ5VggHxSCYbJJ5JgsHwiCVTkW0+gKN96
AnX5FhNokW8xgS75VhJolG8lgV75IyfQLn/kBCbkj5bAkPzREhSFyHODI78P
AAAAAAAAMMQdh17rJg==
         "], {{0, 64}, {64, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{64, 64},
       PlotRange->{{0, 64}, {0, 64}}]}], ",", 
     RowBox[{"\<\"shape\"\>", "\[Rule]", "\<\"Triangle\"\>"}], ",", 
     RowBox[{"\<\"color\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Input\"\>", "\[Rule]", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztmCFswkAUhpvNVFYimUMiKzvHHGFZggSyjsx0pCxZppBIJBKJRCKRSCQS
iUQibz+5hWwra25c37uRvC8PAqiPu9d3791N56XxdOV5Xt/HW6P9dpum7ff7
AF8ekv5zN4kf75LXuBunYecaP0afr8NnJQiCIAiCIAiCYM1i8S32e9dCBqzX
ajhU1arCYJSNSkX1emq1cm15is1GNZuntbMRRf/rXwwGyvdN5Y+BvXCeVLud
qtf/bH6MMFTbrUv531LdPMrlQ+45oVazldeBReBPJOR8IfI6Wi1WeVSPMx7Y
/MAZwYbNM5uTRTxg8QuX1zGbcfgXm/n8TwHaACL/ICAvRDhuiOR1LJe0/qgS
pP6TCa3/dErrj/aVlPGY1h/FgRTs70X7X3r+Y8Ii9Z/Paf0BqjSRPHoq9OTU
4JQk8sdcyQC6FCJ/FDce7MeubJRKfFMMxRaMRkzyGvPbEpPAIM8MCgVG70Lk
UdCcjPA4C+xrKWom5+T4A8xiNruAv+9QXoNEQt0+Qx5FzNXNTxb01eYbgWVn
rjYmoHrjAMq/1MKaw5yhSbABeshqdMJfA42Zw6tOQRAEQRAEQRDAB81Xp+A=

         "], {{0, 64}, {64, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{64, 64},
       PlotRange->{{0, 64}, {0, 64}}]}], ",", 
     RowBox[{"\<\"shape\"\>", "\[Rule]", "\<\"Circle\"\>"}], ",", 
     RowBox[{"\<\"color\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Input\"\>", "\[Rule]", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztmC9QQkEQhxktRKJRm9FIxKbN0XHGqI4IFmTQGTFpMxqNRKLRSCQSiUYj
kXh++JzleE8FHvfHsN+czhPw2Lvd/e3ebZ1fH16uFQqFmyK/Ds/udluts/uj
En8cN26uao3qxX7jtlqrtsrn67xY+f6ZPBtFURRFURRFUZTV6fVmxngc26AF
GA7N05PZ2TGcjLJje9s0m2YwiG3lT7y/m5OTn83Ojkrlf63i4cEUi4saLwNf
RA+q0cgcHMxYtblp6nXz9pb+ZL8/MZh37Q+Xy+bjI4bdX2C8Heql0iT4525p
p2M2NmbWS+xFYW9vagYLWXwnWaPtNf43fCAR82IAxuQwoN2eznB66sHE30E9
JGGJ4dy7Z0sWNSIY4n0ieZUEZOGSQTyEgc2XTXt+XnU2tl1me311Yd88JPKR
Did5J94MkwW0AcnXkYBOQFFFgX0LEdHuPOOoI6IGlDmv2OHqEPEpvvBKtztV
HofQ0SXTUsG98vIybYYdQuYm0yIOXpFcQ3wcIq2Ib/s9xb9UMd/xzwlL7HfV
N6KZKGcyZ7bxdo58l6tcE5+iomipbyTX6NycwHlHzpUBoEtx2LFQEKV4IW5h
cNg02q1ssFOM7QJOtbmRauKklV0K++iRz+9IjX0ICgxCYV8mLNuLovNiPIIW
5QhPLRAtZVBDeWUuJKztO1YR8uSYgrNY6koHdf2tBtEbI5X2TRfLj2h8AoEk
3aNtGC/ikcfHicLwbN/5iHbFuvnJQl+dcsQfg9UFVptFQL0RIvtSKzvYcywP
0CSsAuYR1XTC9iApIl51KoqiKIqiKIpizCdT0qGY
         "], {{0, 64}, {64, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{64, 64},
       PlotRange->{{0, 64}, {0, 64}}]}], ",", 
     RowBox[{"\<\"shape\"\>", "\[Rule]", "\<\"Disk\"\>"}], ",", 
     RowBox[{"\<\"color\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Input\"\>", "\[Rule]", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztmCFswkAUhpvNVFYimUMiKzvHHGFZggSyjsx0pCxZppBIJBKJRCKRSCQS
iUQibz+5hWwra25c37uRvC8PAqiPu9d3791N56XxdOV5Xt/HW6P9dpum7ff7
AF8ekv5zN4kf75LXuBunYecaP0afr8NnJQiCIAiCIAiCYM9i8S32e9dCBqzX
ajhU1arCZJSNSkX1emq1cm15is1GNZuntbMRRf/rXwwGyvdN5Y+BvXCeVLud
qtf/bH6MMFTbrUv531LdPMrlQ+45oVazldeBReBPJOR8IfI6Wi1WeVSPMx7Y
/MAZwYbNM5uTRTxg8QuX1zGbcfgXm/n8TwHaACL/ICAvRDhuiOR1LJe0/qgS
pP6TCa3/dErrj/aVlPGY1h/FgRTs70X7X3r+Y8Ii9Z/Paf0BqjSRPHoq9OTU
4JQk8sdcyQC6FCJ/FDce7MeubJRKfFMMxRaMRkzyGvPbEpPAIM8MCgVG70Lk
UdCcjPA4C+xrKWom5+T4A8xiNruAv+9QXoNEQt0+Qx5FzNXNTxb01eYbgWVn
rjYmoHrjAMq/1MKaw5yhSbABeshqdMJfA42Zw6tOQRAEQRAEQRCU+gAFJqfg

         "], {{0, 64}, {64, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{64, 64},
       PlotRange->{{0, 64}, {0, 64}}]}], ",", 
     RowBox[{"\<\"shape\"\>", "\[Rule]", "\<\"Circle\"\>"}], ",", 
     RowBox[{"\<\"color\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Input\"\>", "\[Rule]", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztlz0OgkAQRok2lpa03oDSUktbjAeAiMQGEzAxVhzB43EMSsp1CcYYfxDY
XXYm+V6GCVCQzXsVi/DkHyaO42Qzufzgsk7T4Lqdy4ddkh3jJNpvknMUR+ky
nMqXq8dV3wsAAAAAAAAA0ERZ2j6BAlUlPK/eTLndhPzDk5sjUrvr1ueXm2OC
Rn4z7BI85TfDLsGrfHYJ3uSzS/Apn1GCr/IZJfgln0WCFvksErTLJ57gr3zi
CbrIJ5ugo3yyCbrLJ5igl3yCCfrKJ5VggHxSCYbJJ5JgsHwiCVTkW0+gKN96
AnX5FhNokW8xgS75VhJolG8lgV75IyfQLn/kBCbkj5bAkPzREhSFyHODI78P
AAAAAAAAMMQdh17rJg==
         "], {{0, 64}, {64, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{64, 64},
       PlotRange->{{0, 64}, {0, 64}}]}], ",", 
     RowBox[{"\<\"shape\"\>", "\[Rule]", "\<\"Triangle\"\>"}], ",", 
     RowBox[{"\<\"color\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Input\"\>", "\[Rule]", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztmC9QQkEQhxktRKJRm9FIxKbN0XHGqI4IFmTQGTFpMxqNRKLRSCQSiUYj
kXh++JzleE8FHvfHsN+czhPw2Lvd/e3ebZ1fH16uFQqFmyK/Ds/udluts/uj
En8cN26uao3qxX7jtlqrtsrn67xY+f6ZPBtFURRFURRFUZSV6fVmxngc26AF
GA7N05PZ2TEcjLJje9s0m2YwiG3lT7y/m5OTn83Ojkrlf63i4cEUi4saLwNf
RA+q0cgcHMxYtblp6nXz9pb+ZL8/MZh37Q+Xy+bjI4bdX2C8Heql0iT4525p
p2M2NmbWS+xFYW9vagYLWXwnWaPtNf43fCAR82IAxuQwoN2eznB66sHE30E9
JGGJ4dy7Z0sWNSIY4n0ieZUEZOGSQTyEgc2XTXt+XnU2tl1me311Yd88JPKR
Did5J94MkwW0AcnXkYBOQFFFgX0LEdHuPOOoI6IGlDmv2OHqEPEpvvBKtztV
HofQ0SXTUsG98vIybYYdQuYm0yIOXpFcQ3wcIq2Ib/s9xb9UMd/xzwlL7HfV
N6KZKGcyZ7bxdo58l6tcE5+iomipbyTX6NycwHlHzpUBoEtx2LFQEKV4IW5h
cNg02q1ssFOM7QJOtbmRauKklV0K++iRz+9IjX0ICgxCYV8mLNuLovNiPIIW
5QhPLRAtZVBDeWUuJKztO1YR8uSYgrNY6koHdf2tBtEbI5X2TRfLj2h8AoEk
3aNtGC/ikcfHicLwbN/5iHbFuvnJQl+dcsQfg9UFVptFQL0RIvtSKzvYcywP
0CSsAuYR1XTC9iApIl51KoqiKIqiKIoCnxXKoZg=
         "], {{0, 64}, {64, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{64, 64},
       PlotRange->{{0, 64}, {0, 64}}]}], ",", 
     RowBox[{"\<\"shape\"\>", "\[Rule]", "\<\"Disk\"\>"}], ",", 
     RowBox[{"\<\"color\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Input\"\>", "\[Rule]", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztmC9QQkEQhxktRKJRm9FIxKbN0XHGqI4IFmTQGTFpMxqNRKLRSCQSiUYj
kXh++JzleE8FHvfHsN+czhPw2Lvd/e3ebZ1fH16uFQqFmyK/Ds/udluts/uj
En8cN26uao3qxX7jtlqrtsrn67xY+f6ZPBtFURRFURRFUZTV6fVmxngc26AF
GA7N05PZ2TGcjLJje9s0m2YwiG3lT7y/m5OTn83Ojkrlf63i4cEUi4saLwNf
RA+q0cgcHMxYtblp6nXz9pb+ZL8/MZh37Q+Xy+bjI4bdX2C8Heql0iT4525p
p2M2NmbWS+xFYW9vagYLWXwnWaPtNf43fCAR82IAxuQwoN2eznB66sHE30E9
JGGJ4dy7Z0sWNSIY4n0ieZUEZOGSQTyEgc2XTXt+XnU2tl1me311Yd88JPKR
Did5J94MkwW0AcnXkYBOQFFFgX0LEdHuPOOoI6IGlDmv2OHqEPEpvvBKtztV
HofQ0SXTUsG98vIybYYdQuYm0yIOXpFcQ3wcIq2Ib/s9xb9UMd/xzwlL7HfV
N6KZKGcyZ7bxdo58l6tcE5+iomipbyTX6NycwHlHzpUBoEtx2LFQEKV4IW5h
cNg02q1ssFOM7QJOtbmRauKklV0K++iRz+9IjX0ICgxCYV8mLNuLovNiPIIW
5QhPLRAtZVBDeWUuJKztO1YR8uSYgrNY6koHdf2tBtEbI5X2TRfLj2h8AoEk
3aNtGC/ikcfHicLwbN/5iHbFuvnJQl+dcsQfg9UFVptFQL0RIvtSKzvYcywP
0CSsAuYR1XTC9iApIl51KoqiKIqiKIpizCdT0qGY
         "], {{0, 64}, {64, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{64, 64},
       PlotRange->{{0, 64}, {0, 64}}]}], ",", 
     RowBox[{"\<\"shape\"\>", "\[Rule]", "\<\"Disk\"\>"}], ",", 
     RowBox[{"\<\"color\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Input\"\>", "\[Rule]", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztkT0OgkAQRjfaWFraegNLSy1tNR5AIhIbTNDEWHkEj8cxLCnXMRhj/EFc
9mcmfo9lAhRk8l4/2kxXLaXUtkNjutiPs2xxmHXpZZ5u10kaLyfpLk7ibBi1
6ePodl+fNQAAAAAAAABY4kyXWApdDPSAZuhFDDnpk9KKZuhFTCDtPd2j/WlK
TFDKL4+4BHf55RGX4FG+uARP8sUleJUvKMFb+YISfJIvIkGFfBEJquUzT/BV
PvMEdeSzTVBTPtsE9eUzTPCTfIYJfpXPKoGBfFYJzOQzSWAsn0mCJvKDJ2go
P3iC5vIDJrAiP2ACW/KDJLAoP0gCu/I9J7Au33MCF/K9JXAk31uCXOdHfXR3
6P9O9wcAAAAAAOCfuQCBm+sm
         "], {{0, 64}, {64, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{64, 64},
       PlotRange->{{0, 64}, {0, 64}}]}], ",", 
     RowBox[{"\<\"shape\"\>", "\[Rule]", "\<\"Triangle\"\>"}], ",", 
     RowBox[{"\<\"color\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Input\"\>", "\[Rule]", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztlz0OgkAQRok2lpa03oDSUktbjAeAiMQGEzAxVhzB43EMSsp1CcYYfxDY
XXYm+V6GCVCQzXsVi/DkHyaO42Qzufzgsk7T4Lqdy4ddkh3jJNpvknMUR+ky
nMqXq8dV3wsAAAAAAAAA0EVZ2j6BAlUlPK/eTLndhPzFk5sjUrvr1ueXm2OC
Rn4z7BI85TfDLsGrfHYJ3uSzS/Apn1GCr/IZJfgln0WCFvksErTLJ57gr3zi
CbrIJ5ugo3yyCbrLJ5igl3yCCfrKJ5VggHxSCYbJJ5JgsHwiCVTkW0+gKN96
AnX5FhNokW8xgS75VhJolG8lgV75IyfQLn/kBCbkj5bAkPzREhSFyHODI78P
AAAAAAAAMMMde9jrJg==
         "], {{0, 64}, {64, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{64, 64},
       PlotRange->{{0, 64}, {0, 64}}]}], ",", 
     RowBox[{"\<\"shape\"\>", "\[Rule]", "\<\"Triangle\"\>"}], ",", 
     RowBox[{"\<\"color\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Input\"\>", "\[Rule]", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztmC9QQkEQhxktRKJRm9FIxKbN0XHGqI4IFmTQGTFpMxqNRKLRSCQSiUYj
kXh++JzleE8FHvfHsN+czhPw2Lvd/e3ebZ1fH16uFQqFmyK/Ds/udluts/uj
En8cN26uao3qxX7jtlqrtsrn67xY+f6ZPBtFURRFURRFUZSV6fVmxngc26AF
GA7N05PZ2TEcjLJje9s0m2YwiG3lT7y/m5OTn83Ojkrlf63i4cEUi4saLwNf
RA+q0cgcHMxYtblp6nXz9pb+ZL8/MZh37Q+Xy+bjI4bdX2C8Heql0iT4525p
p2M2NmbWS+xFYW9vagYLWXwnWaPtNf43fCAR82IAxuQwoN2eznB66sHE30E9
JGGJ4dy7Z0sWNSIY4n0ieZUEZOGSQTyEgc2XTXt+XnU2tl1me311Yd88JPKR
Did5J94MkwW0AcnXkYBOQFFFgX0LEdHuPOOoI6IGlDmv2OHqEPEpvvBKtztV
HofQ0SXTUsG98vIybYYdQuYm0yIOXpFcQ3wcIq2Ib/s9xb9UMd/xzwlL7HfV
N6KZKGcyZ7bxdo58l6tcE5+iomipbyTX6NycwHlHzpUBoEtx2LFQEKV4IW5h
cNg02q1ssFOM7QJOtbmRauKklV0K++iRz+9IjX0ICgxCYV8mLNuLovNiPIIW
5QhPLRAtZVBDeWUuJKztO1YR8uSYgrNY6koHdf2tBtEbI5X2TRfLj2h8AoEk
3aNtGC/ikcfHicLwbN/5iHbFuvnJQl+dcsQfg9UFVptFQL0RIvtSKzvYcywP
0CSsAuYR1XTC9iApIl51KoqiKIqiKIoCnxXKoZg=
         "], {{0, 64}, {64, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{64, 64},
       PlotRange->{{0, 64}, {0, 64}}]}], ",", 
     RowBox[{"\<\"shape\"\>", "\[Rule]", "\<\"Disk\"\>"}], ",", 
     RowBox[{"\<\"color\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Input\"\>", "\[Rule]", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztmCFswkAUhpvNVFYimUMiKzvHHGFZggSyjsx0pCxZppBIJBKJRCKRSCQS
iUQibz+5hWwra25c37uRvC8PAqiPu9d3791N56XxdOV5Xt/HW6P9dpum7ff7
AF8ekv5zN4kf75LXuBunYecaP0afr8NnJQiCIAiCIAiCYM9i8S32e9dCBqzX
ajhU1arCZJSNSkX1emq1cm15is1GNZuntbMRRf/rXwwGyvdN5Y+BvXCeVLud
qtf/bH6MMFTbrUv531LdPMrlQ+45oVazldeBReBPJOR8IfI6Wi1WeVSPMx7Y
/MAZwYbNM5uTRTxg8QuX1zGbcfgXm/n8TwHaACL/ICAvRDhuiOR1LJe0/qgS
pP6TCa3/dErrj/aVlPGY1h/FgRTs70X7X3r+Y8Ii9Z/Paf0BqjSRPHoq9OTU
4JQk8sdcyQC6FCJ/FDce7MeubJRKfFMMxRaMRkzyGvPbEpPAIM8MCgVG70Lk
UdCcjPA4C+xrKWom5+T4A8xiNruAv+9QXoNEQt0+Qx5FzNXNTxb01eYbgWVn
rjYmoHrjAMq/1MKaw5yhSbABeshqdMJfA42Zw6tOQRAEQRAEQRCU+gAFJqfg

         "], {{0, 64}, {64, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{64, 64},
       PlotRange->{{0, 64}, {0, 64}}]}], ",", 
     RowBox[{"\<\"shape\"\>", "\[Rule]", "\<\"Circle\"\>"}], ",", 
     RowBox[{"\<\"color\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Input\"\>", "\[Rule]", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztmC1MA0EQRi9gKiuR4CqRlcWBIxASJBDKjymkkFAUOCQSiUQikUgkEolE
IpHDgyOTyR29lnbuDjEvCzlKO/12d/bb2V3YOVrbm0mS5KTBr7Xts6V+f/t8
vckfG72Tw/1ed3eld9rd7/bbO7O82Pn5+XqWIAiCIAiCIAiCqXmUR9s+5KNu
RaN5kZcruVqUxUSSfGtJ61iOn+W5bpm/8Cqvm7L5q+x860jnX/XiQi4a0hhT
vDbmovakepf3VVm1quZl/kAOHuQh884neUIw/7Vvbkv7Td5qUS7f4m2qN6VJ
8o8c0lu5nZM5219yrxK9WZZlWWXQkfFHkj7aWeOz1ScSOa8CEDOBgIEMNMKW
bJUhchi4hy5Ycnji0bOWxR7hqrEInX0yeZoFSMd1BfHgqLAABl8H7Vqup4zG
sGu0e7l3UViMZj7W4bLudDarWQWUAenXsQBdAuKo6sBlGxHZ7r7i2EfUDdjm
XGIOw6arY1idU+bCMWyeO7lT53EMS0WXhmUHdwyb50ZutBh2DMvKTcNiDo5h
8+haw3wcw2opUrb+kvJfd7Gy858Tlur3qhvxTJwzjZkvvN3R7/JaazqnuChe
6hKzAF1rVG4uATnv6LnSJWAxVCmOFQsbom5emJuLwpE4Fo22lK3sFGOngFPt
xHF0N3EpZf+EPXpMNu9YjT0EuSssBqOwlwl/rUXxeRWPodVyhGcvUC+lsYfy
yshPsWDt3NGLKk+OGTiLZa50cNdhexC1MVZpb7rofo3iU0gkrR6tMF5kRi7l
Eofh2d75qHfVdfOTh7o6MxEFjd5V7DbjgHtjRPZSK98Yc5RXUCRMA/LIaiph
21gUNV51BkEQBEEQBEEAnzTOoZg=
         "], {{0, 64}, {64, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{64, 64},
       PlotRange->{{0, 64}, {0, 64}}]}], ",", 
     RowBox[{"\<\"shape\"\>", "\[Rule]", "\<\"Disk\"\>"}], ",", 
     RowBox[{"\<\"color\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Input\"\>", "\[Rule]", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztlz0OgkAQRok2lpa03oDSUktbjAeAiMQGEzAxVhzB43EMSsp1CcYYfxDY
XXYm+V6GCVCQzXsVi/DkHyaO42Qzufzgsk7T4Lqdy4ddkh3jJNpvknMUR+ky
nMqXq8dV3wsAAAAAAAAA0ERZ2j6BAlUlPK/eTLndhPzDk5sjUrvr1ueXm2OC
Rn4z7BI85TfDLsGrfHYJ3uSzS/Apn1GCr/IZJfgln0WCFvksErTLJ57gr3zi
CbrIJ5ugo3yyCbrLJ5igl3yCCfrKJ5VggHxSCYbJJ5JgsHwiCVTkW0+gKN96
AnX5FhNokW8xgS75VhJolG8lgV75IyfQLn/kBCbkj5bAkPzREhSFyHODI78P
AAAAAAAAMMQdh17rJg==
         "], {{0, 64}, {64, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{64, 64},
       PlotRange->{{0, 64}, {0, 64}}]}], ",", 
     RowBox[{"\<\"shape\"\>", "\[Rule]", "\<\"Triangle\"\>"}], ",", 
     RowBox[{"\<\"color\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Input\"\>", "\[Rule]", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztlz0OgkAQRok2lpa03oDSUktbjAeAiMQGEzAxVhzB43EMSsp1CcYYfxDY
XXYm+V6GCVCQzXsVi/DkHyaO42Qzufzgsk7T4Lqdy4ddkh3jJNpvknMUR+ky
nMqXq8dV3wsAAAAAAAAA0ERZ2j6BAlUlPK/eTLndhPzDk5sjUrvr1ueXm2OC
Rn4z7BI85TfDLsGrfHYJ3uSzS/Apn1GCr/IZJfgln0WCFvksErTLJ57gr3zi
CbrIJ5ugo3yyCbrLJ5igl3yCCfrKJ5VggHxSCYbJJ5JgsHwiCVTkW0+gKN96
AnX5FhNokW8xgS75VhJolG8lgV75IyfQLn/kBCbkj5bAkPzREhSFyHODI78P
AAAAAAAAMMQdh17rJg==
         "], {{0, 64}, {64, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{64, 64},
       PlotRange->{{0, 64}, {0, 64}}]}], ",", 
     RowBox[{"\<\"shape\"\>", "\[Rule]", "\<\"Triangle\"\>"}], ",", 
     RowBox[{"\<\"color\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Input\"\>", "\[Rule]", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztzjEKwjAUgOGHLo5ewVs46uha8QAtjcUlQiqIp68puDoqFL6Pl5CX6d91
9+a6iohxU6+mfR5LaV/nbV0uebwNOfWn/EhDKvtuXT8PnzO/JwAAgC9iip+O
fv369evXr1+/fv369evXr1+/fv369evXr////QAAwHK9AaZ15yg=
         "], {{0, 64}, {64, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{64, 64},
       PlotRange->{{0, 64}, {0, 64}}]}], ",", 
     RowBox[{"\<\"shape\"\>", "\[Rule]", "\<\"Rect\"\>"}], ",", 
     RowBox[{"\<\"color\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Input\"\>", "\[Rule]", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztlz0OgkAQRok2lpa03oDSUktbjAeAiMQGEzAxVhzB43EMSsp1CcYYfxDY
XXYm+V6GCVCQzXsVi/DkHyaO42Qzufzgsk7T4Lqdy4ddkh3jJNpvknMUR+ky
nMqXq8dV3wsAAAAAAAAA0ERZ2j6BAlUlPK/eTLndhPzDk5sjUrvr1ueXm2OC
Rn4z7BI85TfDLsGrfHYJ3uSzS/Apn1GCr/IZJfgln0WCFvksErTLJ57gr3zi
CbrIJ5ugo3yyCbrLJ5igl3yCCfrKJ5VggHxSCYbJJ5JgsHwiCVTkW0+gKN96
AnX5FhNokW8xgS75VhJolG8lgV75IyfQLn/kBCbkj5bAkPzREhSFyHODI78P
AAAAAAAAMMQdh17rJg==
         "], {{0, 64}, {64, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{64, 64},
       PlotRange->{{0, 64}, {0, 64}}]}], ",", 
     RowBox[{"\<\"shape\"\>", "\[Rule]", "\<\"Triangle\"\>"}], ",", 
     RowBox[{"\<\"color\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Input\"\>", "\[Rule]", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzt1zEKwjAYgNGgS0ev4C0c7eha8QAtjcElQiqIp28juDpaEN4j+UkyfWv2
w727bkIIU1NH1z/bUvrXeVcvlzzdUo7jKT9iiuUwbOvj8bPf5xkAAOCb+mX4
6dKvX79+/fr169evX79+/fr169evX79+/fr1r98PAAD8rQWiseco
         "], {{0, 64}, {64, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{64, 64},
       PlotRange->{{0, 64}, {0, 64}}]}], ",", 
     RowBox[{"\<\"shape\"\>", "\[Rule]", "\<\"Rect\"\>"}], ",", 
     RowBox[{"\<\"color\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Input\"\>", "\[Rule]", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztmCFsAkEQRS+tQSKRrUMikdRRR2iaIIGUkhpKoElThUQikUgkEolEIpFI
JBL5+9trCOlRemVvZksyLwMB1GN3bnZmr+vP5ceLIAi6Kb6Va683nU7t7S7N
L/et7lOz1Xi4bb00mo1Ovn7JHwtfr4/PMAzDMAzDMAzDcGaG2X5ssfVt9DtL
LPvo55ALEEQji2wb7QUWvjUPsMKqgspB7WgUUPhX/6KHXgqpmPK74F54T6oN
NiWU/mq+izzya6w9yv+U6vHjClfMPS/+RRQd5cPgIugnEnM+EfkwqqhqyrN6
nPDAHg+eEWr+Ls/skSzSkefiJy4fxgQTBf9kM1//KWAbIOSfRlq6EPG4EZIP
Y465qD+rhKj/CCNR/zHGov5sX0X9hxiK+rM4iPpzf8/a/9zznxOWqP8UU1F/
wiotJM+eij25tD9PSSF/zpXS8oRdipA/i5uCP3Efu6KRQUZtipHYggEGOvIh
8W9L4gQHeU15fA7vHL0TkWdB8zLC8yxwr6WsmZqT4zc4i7nsAv++R/kQJhLr
9gnyLGK+bn6isK+OvxFcduVqEwdWbx5Axy+1uOY0V2gSXKAes5qd8H6wMfN4
1WkYhmEYhmEYBnkH6Ten4A==
         "], {{0, 64}, {64, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{64, 64},
       PlotRange->{{0, 64}, {0, 64}}]}], ",", 
     RowBox[{"\<\"shape\"\>", "\[Rule]", "\<\"Circle\"\>"}], ",", 
     RowBox[{"\<\"color\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Input\"\>", "\[Rule]", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzt1zEKwjAYgNGgS0ev4C0c7eha8QAtjcElQiqIp28juDpaEN4j+UkyfWv2
w727bkIIU1NH1z/bUvrXeVcvlzzdUo7jKT9iiuUwbOvj8bPf5xkAAOCb+mX4
6dKvX79+/fr169evX79+/fr169evX79+/fr1r98PAAD8rQWiseco
         "], {{0, 64}, {64, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{64, 64},
       PlotRange->{{0, 64}, {0, 64}}]}], ",", 
     RowBox[{"\<\"shape\"\>", "\[Rule]", "\<\"Rect\"\>"}], ",", 
     RowBox[{"\<\"color\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Input\"\>", "\[Rule]", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztmC9QQkEQhxktRKJRm9FIxKbN0XHGqI4IFmTQGTFpMxqNRKLRSCQSiUYj
kXh++JzleE8FHvfHsN+czhPw2Lvd/e3ebZ1fH16uFQqFmyK/Ds/udluts/uj
En8cN26uao3qxX7jtlqrtsrn67xY+f6ZPBtFURRFURRFUZTV6fVmxngc26AF
GA7N05PZ2TGcjLJje9s0m2YwiG3lT7y/m5OTn83Ojkrlf63i4cEUi4saLwNf
RA+q0cgcHMxYtblp6nXz9pb+ZL8/MZh37Q+Xy+bjI4bdX2C8Heql0iT4525p
p2M2NmbWS+xFYW9vagYLWXwnWaPtNf43fCAR82IAxuQwoN2eznB66sHE30E9
JGGJ4dy7Z0sWNSIY4n0ieZUEZOGSQTyEgc2XTXt+XnU2tl1me311Yd88JPKR
Did5J94MkwW0AcnXkYBOQFFFgX0LEdHuPOOoI6IGlDmv2OHqEPEpvvBKtztV
HofQ0SXTUsG98vIybYYdQuYm0yIOXpFcQ3wcIq2Ib/s9xb9UMd/xzwlL7HfV
N6KZKGcyZ7bxdo58l6tcE5+iomipbyTX6NycwHlHzpUBoEtx2LFQEKV4IW5h
cNg02q1ssFOM7QJOtbmRauKklV0K++iRz+9IjX0ICgxCYV8mLNuLovNiPIIW
5QhPLRAtZVBDeWUuJKztO1YR8uSYgrNY6koHdf2tBtEbI5X2TRfLj2h8AoEk
3aNtGC/ikcfHicLwbN/5iHbFuvnJQl+dcsQfg9UFVptFQL0RIvtSKzvYcywP
0CSsAuYR1XTC9iApIl51KoqiKIqiKIpizCdT0qGY
         "], {{0, 64}, {64, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{64, 64},
       PlotRange->{{0, 64}, {0, 64}}]}], ",", 
     RowBox[{"\<\"shape\"\>", "\[Rule]", "\<\"Disk\"\>"}], ",", 
     RowBox[{"\<\"color\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Input\"\>", "\[Rule]", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJzt1zEKwjAYgNGgS0ev4C0c7eha8QAtjcElQiqIp28juDpaEN4j+UkyfWv2
w727bkIIU1NH1z/bUvrXeVcvlzzdUo7jKT9iiuUwbOvj8bPf5xkAAOCb+mX4
6dKvX79+/fr169evX79+/fr169evX79+/fr1r98PAAD8rQWiseco
         "], {{0, 64}, {64, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{64, 64},
       PlotRange->{{0, 64}, {0, 64}}]}], ",", 
     RowBox[{"\<\"shape\"\>", "\[Rule]", "\<\"Rect\"\>"}], ",", 
     RowBox[{"\<\"color\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Input\"\>", "\[Rule]", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztmC1MA0EQRi9gKiuR4CqRlcWBIxASJBDKjymkkFAUOCQSiUQikUgkEolE
IpHDgyOTyR29lnbuDjEvCzlKO/12d/bb2V3YOVrbm0mS5KTBr7Xts6V+f/t8
vckfG72Tw/1ed3eld9rd7/bbO7O82Pn5+XqWIAiCIAiCIAiCqXmUR9s+5KNu
RaN5kZcruVqUxUSSfGtJ61iOn+W5bpm/8Cqvm7L5q+x860jnX/XiQi4a0hhT
vDbmovakepf3VVm1quZl/kAOHuQh884neUIw/7Vvbkv7Td5qUS7f4m2qN6VJ
8o8c0lu5nZM5219yrxK9WZZlWWXQkfFHkj7aWeOz1ScSOa8CEDOBgIEMNMKW
bJUhchi4hy5Ycnji0bOWxR7hqrEInX0yeZoFSMd1BfHgqLAABl8H7Vqup4zG
sGu0e7l3UViMZj7W4bLudDarWQWUAenXsQBdAuKo6sBlGxHZ7r7i2EfUDdjm
XGIOw6arY1idU+bCMWyeO7lT53EMS0WXhmUHdwyb50ZutBh2DMvKTcNiDo5h
8+haw3wcw2opUrb+kvJfd7Gy858Tlur3qhvxTJwzjZkvvN3R7/JaazqnuChe
6hKzAF1rVG4uATnv6LnSJWAxVCmOFQsbom5emJuLwpE4Fo22lK3sFGOngFPt
xHF0N3EpZf+EPXpMNu9YjT0EuSssBqOwlwl/rUXxeRWPodVyhGcvUC+lsYfy
yshPsWDt3NGLKk+OGTiLZa50cNdhexC1MVZpb7rofo3iU0gkrR6tMF5kRi7l
Eofh2d75qHfVdfOTh7o6MxEFjd5V7DbjgHtjRPZSK98Yc5RXUCRMA/LIaiph
21gUNV51BkEQBEEQBEEAnzTOoZg=
         "], {{0, 64}, {64, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{64, 64},
       PlotRange->{{0, 64}, {0, 64}}]}], ",", 
     RowBox[{"\<\"shape\"\>", "\[Rule]", "\<\"Disk\"\>"}], ",", 
     RowBox[{"\<\"color\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Input\"\>", "\[Rule]", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztmC9QQkEQhxktRKJRm9FIxKbN0XHGqI4IFmTQGTFpMxqNRKLRSCQSiUYj
kXh++JzleE8FHvfHsN+czhPw2Lvd/e3ebZ1fH16uFQqFmyK/Ds/udluts/uj
En8cN26uao3qxX7jtlqrtsrn67xY+f6ZPBtFURRFURRFUZTV6fVmxngc26AF
GA7N05PZ2TGcjLJje9s0m2YwiG3lT7y/m5OTn83Ojkrlf63i4cEUi4saLwNf
RA+q0cgcHMxYtblp6nXz9pb+ZL8/MZh37Q+Xy+bjI4bdX2C8Heql0iT4525p
p2M2NmbWS+xFYW9vagYLWXwnWaPtNf43fCAR82IAxuQwoN2eznB66sHE30E9
JGGJ4dy7Z0sWNSIY4n0ieZUEZOGSQTyEgc2XTXt+XnU2tl1me311Yd88JPKR
Did5J94MkwW0AcnXkYBOQFFFgX0LEdHuPOOoI6IGlDmv2OHqEPEpvvBKtztV
HofQ0SXTUsG98vIybYYdQuYm0yIOXpFcQ3wcIq2Ib/s9xb9UMd/xzwlL7HfV
N6KZKGcyZ7bxdo58l6tcE5+iomipbyTX6NycwHlHzpUBoEtx2LFQEKV4IW5h
cNg02q1ssFOM7QJOtbmRauKklV0K++iRz+9IjX0ICgxCYV8mLNuLovNiPIIW
5QhPLRAtZVBDeWUuJKztO1YR8uSYgrNY6koHdf2tBtEbI5X2TRfLj2h8AoEk
3aNtGC/ikcfHicLwbN/5iHbFuvnJQl+dcsQfg9UFVptFQL0RIvtSKzvYcywP
0CSsAuYR1XTC9iApIl51KoqiKIqiKIpizCdT0qGY
         "], {{0, 64}, {64, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{64, 64},
       PlotRange->{{0, 64}, {0, 64}}]}], ",", 
     RowBox[{"\<\"shape\"\>", "\[Rule]", "\<\"Disk\"\>"}], ",", 
     RowBox[{"\<\"color\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Input\"\>", "\[Rule]", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztlz0OgkAQRok2lpa03oDSUktbjAeAiMQGEzAxVhzB43EMSsp1CcYYfxDY
XXYm+V6GCVCQzXsVi/DkHyaO42Qzufzgsk7T4Lqdy4ddkh3jJNpvknMUR+ky
nMqXq8dV3wsAAAAAAAAA0EVZ2j6BAlUlPK/eTLndhPzFk5sjUrvr1ueXm2OC
Rn4z7BI85TfDLsGrfHYJ3uSzS/Apn1GCr/IZJfgln0WCFvksErTLJ57gr3zi
CbrIJ5ugo3yyCbrLJ5igl3yCCfrKJ5VggHxSCYbJJ5JgsHwiCVTkW0+gKN96
AnX5FhNokW8xgS75VhJolG8lgV75IyfQLn/kBCbkj5bAkPzREhSFyHODI78P
AAAAAAAAMMMde9jrJg==
         "], {{0, 64}, {64, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{64, 64},
       PlotRange->{{0, 64}, {0, 64}}]}], ",", 
     RowBox[{"\<\"shape\"\>", "\[Rule]", "\<\"Triangle\"\>"}], ",", 
     RowBox[{"\<\"color\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Input\"\>", "\[Rule]", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztmCFsAkEQRS+tQSKRrUMikdRRR2iaIIGUkhpKoElThUQikUgkEolEIpFI
JBL5+9trCOlRemVvZksyLwMB1GN3bnZmr+vP5ceLIAi6Kb6Va683nU7t7S7N
L/et7lOz1Xi4bb00mo1Ovn7JHwtfr4/PMAzDMAzDMAzDcGaG2X5ssfVt9DtL
LPvo55ALEEQji2wb7QUWvjUPsMKqgspB7WgUUPhX/6KHXgqpmPK74F54T6oN
NiWU/mq+izzya6w9yv+U6vHjClfMPS/+RRQd5cPgIugnEnM+EfkwqqhqyrN6
nPDAHg+eEWr+Ls/skSzSkefiJy4fxgQTBf9kM1//KWAbIOSfRlq6EPG4EZIP
Y465qD+rhKj/CCNR/zHGov5sX0X9hxiK+rM4iPpzf8/a/9zznxOWqP8UU1F/
wiotJM+eij25tD9PSSF/zpXS8oRdipA/i5uCP3Efu6KRQUZtipHYggEGOvIh
8W9L4gQHeU15fA7vHL0TkWdB8zLC8yxwr6WsmZqT4zc4i7nsAv++R/kQJhLr
9gnyLGK+bn6isK+OvxFcduVqEwdWbx5Axy+1uOY0V2gSXKAes5qd8H6wMfN4
1WkYhmEYhmEYBnkH6Ten4A==
         "], {{0, 64}, {64, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{64, 64},
       PlotRange->{{0, 64}, {0, 64}}]}], ",", 
     RowBox[{"\<\"shape\"\>", "\[Rule]", "\<\"Circle\"\>"}], ",", 
     RowBox[{"\<\"color\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Input\"\>", "\[Rule]", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztkT0OgkAQRjfaWFraegNLSy1tNR5AIhIbTNDEWHkEj8cxLCnXMRhj/EFc
9mcmfo9lAhRk8l4/2kxXLaXUtkNjutiPs2xxmHXpZZ5u10kaLyfpLk7ibBi1
6ePodl+fNQAAAAAAAABY4kyXWApdDPSAZuhFDDnpk9KKZuhFTCDtPd2j/WlK
TFDKL4+4BHf55RGX4FG+uARP8sUleJUvKMFb+YISfJIvIkGFfBEJquUzT/BV
PvMEdeSzTVBTPtsE9eUzTPCTfIYJfpXPKoGBfFYJzOQzSWAsn0mCJvKDJ2go
P3iC5vIDJrAiP2ACW/KDJLAoP0gCu/I9J7Au33MCF/K9JXAk31uCXOdHfXR3
6P9O9wcAAAAAAOCfuQCBm+sm
         "], {{0, 64}, {64, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{64, 64},
       PlotRange->{{0, 64}, {0, 64}}]}], ",", 
     RowBox[{"\<\"shape\"\>", "\[Rule]", "\<\"Triangle\"\>"}], ",", 
     RowBox[{"\<\"color\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Input\"\>", "\[Rule]", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztmCFswkAUhpvNVFYimUMiKzvHHGFZggSyjsx0pCxZppBIJBKJRCKRSCQS
iUQibz+5hWwra25c37uRvC8PAqiPu9d3791N56XxdOV5Xt/HW6P9dpum7ff7
AF8ekv5zN4kf75LXuBunYecaP0afr8NnJQiCIAiCIAiCYM9i8S32e9dCBqzX
ajhU1arCZJSNSkX1emq1cm15is1GNZuntbMRRf/rXwwGyvdN5Y+BvXCeVLud
qtf/bH6MMFTbrUv531LdPMrlQ+45oVazldeBReBPJOR8IfI6Wi1WeVSPMx7Y
/MAZwYbNM5uTRTxg8QuX1zGbcfgXm/n8TwHaACL/ICAvRDhuiOR1LJe0/qgS
pP6TCa3/dErrj/aVlPGY1h/FgRTs70X7X3r+Y8Ii9Z/Paf0BqjSRPHoq9OTU
4JQk8sdcyQC6FCJ/FDce7MeubJRKfFMMxRaMRkzyGvPbEpPAIM8MCgVG70Lk
UdCcjPA4C+xrKWom5+T4A8xiNruAv+9QXoNEQt0+Qx5FzNXNTxb01eYbgWVn
rjYmoHrjAMq/1MKaw5yhSbABeshqdMJfA42Zw6tOQRAEQRAEQRCU+gAFJqfg

         "], {{0, 64}, {64, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{64, 64},
       PlotRange->{{0, 64}, {0, 64}}]}], ",", 
     RowBox[{"\<\"shape\"\>", "\[Rule]", "\<\"Circle\"\>"}], ",", 
     RowBox[{"\<\"color\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Input\"\>", "\[Rule]", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztmCFswkAUhpvNVFYimUMiKzvHHGFZggSyjsx0pCxZppBIJBKJRCKRSCQS
iUQibz+5hWwra25c37uRvC8PAqiPu9d3791N56XxdOV5Xt/HW6P9dpum7ff7
AF8ekv5zN4kf75LXuBunYecaP0afr8NnJQiCIAiCIAiCYM1i8S32e9dCBqzX
ajhU1arCYJSNSkX1emq1cm15is1GNZuntbMRRf/rXwwGyvdN5Y+BvXCeVLud
qtf/bH6MMFTbrUv531LdPMrlQ+45oVazldeBReBPJOR8IfI6Wi1WeVSPMx7Y
/MAZwYbNM5uTRTxg8QuX1zGbcfgXm/n8TwHaACL/ICAvRDhuiOR1LJe0/qgS
pP6TCa3/dErrj/aVlPGY1h/FgRTs70X7X3r+Y8Ii9Z/Paf0BqjSRPHoq9OTU
4JQk8sdcyQC6FCJ/FDce7MeubJRKfFMMxRaMRkzyGvPbEpPAIM8MCgVG70Lk
UdCcjPA4C+xrKWom5+T4A8xiNruAv+9QXoNEQt0+Qx5FzNXNTxb01eYbgWVn
rjYmoHrjAMq/1MKaw5yhSbABeshqdMJfA42Zw6tOQRAEQRAEQRDAB81Xp+A=

         "], {{0, 64}, {64, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{64, 64},
       PlotRange->{{0, 64}, {0, 64}}]}], ",", 
     RowBox[{"\<\"shape\"\>", "\[Rule]", "\<\"Circle\"\>"}], ",", 
     RowBox[{"\<\"color\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Input\"\>", "\[Rule]", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztmC9QQkEQhxktRKJRm9FIxKbN0XHGqI4IFmTQGTFpMxqNRKLRSCQSiUYj
kXh++JzleE8FHvfHsN+czhPw2Lvd/e3ebZ1fH16uFQqFmyK/Ds/udluts/uj
En8cN26uao3qxX7jtlqrtsrn67xY+f6ZPBtFURRFURRFUZTV6fVmxngc26AF
GA7N05PZ2TGcjLJje9s0m2YwiG3lT7y/m5OTn83Ojkrlf63i4cEUi4saLwNf
RA+q0cgcHMxYtblp6nXz9pb+ZL8/MZh37Q+Xy+bjI4bdX2C8Heql0iT4525p
p2M2NmbWS+xFYW9vagYLWXwnWaPtNf43fCAR82IAxuQwoN2eznB66sHE30E9
JGGJ4dy7Z0sWNSIY4n0ieZUEZOGSQTyEgc2XTXt+XnU2tl1me311Yd88JPKR
Did5J94MkwW0AcnXkYBOQFFFgX0LEdHuPOOoI6IGlDmv2OHqEPEpvvBKtztV
HofQ0SXTUsG98vIybYYdQuYm0yIOXpFcQ3wcIq2Ib/s9xb9UMd/xzwlL7HfV
N6KZKGcyZ7bxdo58l6tcE5+iomipbyTX6NycwHlHzpUBoEtx2LFQEKV4IW5h
cNg02q1ssFOM7QJOtbmRauKklV0K++iRz+9IjX0ICgxCYV8mLNuLovNiPIIW
5QhPLRAtZVBDeWUuJKztO1YR8uSYgrNY6koHdf2tBtEbI5X2TRfLj2h8AoEk
3aNtGC/ikcfHicLwbN/5iHbFuvnJQl+dcsQfg9UFVptFQL0RIvtSKzvYcywP
0CSsAuYR1XTC9iApIl51KoqiKIqiKIpizCdT0qGY
         "], {{0, 64}, {64, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{64, 64},
       PlotRange->{{0, 64}, {0, 64}}]}], ",", 
     RowBox[{"\<\"shape\"\>", "\[Rule]", "\<\"Disk\"\>"}], ",", 
     RowBox[{"\<\"color\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Input\"\>", "\[Rule]", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztlz0OgkAQRok2lpa03oDSUktbjAeAiMQGEzAxVhzB43EMSsp1CcYYfxDY
XXYm+V6GCVCQzXsVi/DkHyaO42Qzufzgsk7T4Lqdy4ddkh3jJNpvknMUR+ky
nMqXq8dV3wsAAAAAAAAA0EVZ2j6BAlUlPK/eTLndhPzFk5sjUrvr1ueXm2OC
Rn4z7BI85TfDLsGrfHYJ3uSzS/Apn1GCr/IZJfgln0WCFvksErTLJ57gr3zi
CbrIJ5ugo3yyCbrLJ5igl3yCCfrKJ5VggHxSCYbJJ5JgsHwiCVTkW0+gKN96
AnX5FhNokW8xgS75VhJolG8lgV75IyfQLn/kBCbkj5bAkPzREhSFyHODI78P
AAAAAAAAMMMde9jrJg==
         "], {{0, 64}, {64, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{64, 64},
       PlotRange->{{0, 64}, {0, 64}}]}], ",", 
     RowBox[{"\<\"shape\"\>", "\[Rule]", "\<\"Triangle\"\>"}], ",", 
     RowBox[{"\<\"color\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Input\"\>", "\[Rule]", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztmC9QQkEQhxktRKJRm9FIxKbN0XHGqI4IFmTQGTFpMxqNRKLRSCQSiUYj
kXh++JzleE8FHvfHsN+czhPw2Lvd/e3ebZ1fH16uFQqFmyK/Ds/udluts/uj
En8cN26uao3qxX7jtlqrtsrn67xY+f6ZPBtFURRFURRFUZSV6fVmxngc26AF
GA7N05PZ2TEcjLJje9s0m2YwiG3lT7y/m5OTn83Ojkrlf63i4cEUi4saLwNf
RA+q0cgcHMxYtblp6nXz9pb+ZL8/MZh37Q+Xy+bjI4bdX2C8Heql0iT4525p
p2M2NmbWS+xFYW9vagYLWXwnWaPtNf43fCAR82IAxuQwoN2eznB66sHE30E9
JGGJ4dy7Z0sWNSIY4n0ieZUEZOGSQTyEgc2XTXt+XnU2tl1me311Yd88JPKR
Did5J94MkwW0AcnXkYBOQFFFgX0LEdHuPOOoI6IGlDmv2OHqEPEpvvBKtztV
HofQ0SXTUsG98vIybYYdQuYm0yIOXpFcQ3wcIq2Ib/s9xb9UMd/xzwlL7HfV
N6KZKGcyZ7bxdo58l6tcE5+iomipbyTX6NycwHlHzpUBoEtx2LFQEKV4IW5h
cNg02q1ssFOM7QJOtbmRauKklV0K++iRz+9IjX0ICgxCYV8mLNuLovNiPIIW
5QhPLRAtZVBDeWUuJKztO1YR8uSYgrNY6koHdf2tBtEbI5X2TRfLj2h8AoEk
3aNtGC/ikcfHicLwbN/5iHbFuvnJQl+dcsQfg9UFVptFQL0RIvtSKzvYcywP
0CSsAuYR1XTC9iApIl51KoqiKIqiKIoCnxXKoZg=
         "], {{0, 64}, {64, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{64, 64},
       PlotRange->{{0, 64}, {0, 64}}]}], ",", 
     RowBox[{"\<\"shape\"\>", "\[Rule]", "\<\"Disk\"\>"}], ",", 
     RowBox[{"\<\"color\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Input\"\>", "\[Rule]", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztmCFsAkEQRS+tQSKRrUMikdRRR2iaIIGUkhpKoElThUQikUgkEolEIpFI
JBL5+9trCOlRemVvZksyLwMB1GN3bnZmr+vP5ceLIAi6Kb6Va683nU7t7S7N
L/et7lOz1Xi4bb00mo1Ovn7JHwtfr4/PMAzDMAzDMAzDcGaG2X5ssfVt9DtL
LPvo55ALEEQji2wb7QUWvjUPsMKqgspB7WgUUPhX/6KHXgqpmPK74F54T6oN
NiWU/mq+izzya6w9yv+U6vHjClfMPS/+RRQd5cPgIugnEnM+EfkwqqhqyrN6
nPDAHg+eEWr+Ls/skSzSkefiJy4fxgQTBf9kM1//KWAbIOSfRlq6EPG4EZIP
Y465qD+rhKj/CCNR/zHGov5sX0X9hxiK+rM4iPpzf8/a/9zznxOWqP8UU1F/
wiotJM+eij25tD9PSSF/zpXS8oRdipA/i5uCP3Efu6KRQUZtipHYggEGOvIh
8W9L4gQHeU15fA7vHL0TkWdB8zLC8yxwr6WsmZqT4zc4i7nsAv++R/kQJhLr
9gnyLGK+bn6isK+OvxFcduVqEwdWbx5Axy+1uOY0V2gSXKAes5qd8H6wMfN4
1WkYhmEYhmEYBnkH6Ten4A==
         "], {{0, 64}, {64, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{64, 64},
       PlotRange->{{0, 64}, {0, 64}}]}], ",", 
     RowBox[{"\<\"shape\"\>", "\[Rule]", "\<\"Circle\"\>"}], ",", 
     RowBox[{"\<\"color\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Input\"\>", "\[Rule]", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztlz0OgkAQRok2lpa03oDSUktbjAeAiMQGEzAxVhzB43EMSsp1CcYYfxDY
XXYm+V6GCVCQzXsVi/DkHyaO42Qzufzgsk7T4Lqdy4ddkh3jJNpvknMUR+ky
nMqXq8dV3wsAAAAAAAAA0EVZ2j6BAlUlPK/eTLndhPzFk5sjUrvr1ueXm2OC
Rn4z7BI85TfDLsGrfHYJ3uSzS/Apn1GCr/IZJfgln0WCFvksErTLJ57gr3zi
CbrIJ5ugo3yyCbrLJ5igl3yCCfrKJ5VggHxSCYbJJ5JgsHwiCVTkW0+gKN96
AnX5FhNokW8xgS75VhJolG8lgV75IyfQLn/kBCbkj5bAkPzREhSFyHODI78P
AAAAAAAAMMMde9jrJg==
         "], {{0, 64}, {64, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{64, 64},
       PlotRange->{{0, 64}, {0, 64}}]}], ",", 
     RowBox[{"\<\"shape\"\>", "\[Rule]", "\<\"Triangle\"\>"}], ",", 
     RowBox[{"\<\"color\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Input\"\>", "\[Rule]", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztmC1MA0EQRi9gKiuR4CqRlcWBIxASJBDKjymkkFAUOCQSiUQikUgkEolE
IpHDgyOTyR29lnbuDjEvCzlKO/12d/bb2V3YOVrbm0mS5KTBr7Xts6V+f/t8
vckfG72Tw/1ed3eld9rd7/bbO7O82Pn5+XqWIAiCIAiCIAiCqXmUR9s+5KNu
RaN5kZcruVqUxUSSfGtJ61iOn+W5bpm/8Cqvm7L5q+x860jnX/XiQi4a0hhT
vDbmovakepf3VVm1quZl/kAOHuQh884neUIw/7Vvbkv7Td5qUS7f4m2qN6VJ
8o8c0lu5nZM5219yrxK9WZZlWWXQkfFHkj7aWeOz1ScSOa8CEDOBgIEMNMKW
bJUhchi4hy5Ycnji0bOWxR7hqrEInX0yeZoFSMd1BfHgqLAABl8H7Vqup4zG
sGu0e7l3UViMZj7W4bLudDarWQWUAenXsQBdAuKo6sBlGxHZ7r7i2EfUDdjm
XGIOw6arY1idU+bCMWyeO7lT53EMS0WXhmUHdwyb50ZutBh2DMvKTcNiDo5h
8+haw3wcw2opUrb+kvJfd7Gy858Tlur3qhvxTJwzjZkvvN3R7/JaazqnuChe
6hKzAF1rVG4uATnv6LnSJWAxVCmOFQsbom5emJuLwpE4Fo22lK3sFGOngFPt
xHF0N3EpZf+EPXpMNu9YjT0EuSssBqOwlwl/rUXxeRWPodVyhGcvUC+lsYfy
yshPsWDt3NGLKk+OGTiLZa50cNdhexC1MVZpb7rofo3iU0gkrR6tMF5kRi7l
Eofh2d75qHfVdfOTh7o6MxEFjd5V7DbjgHtjRPZSK98Yc5RXUCRMA/LIaiph
21gUNV51BkEQBEEQBEEAnzTOoZg=
         "], {{0, 64}, {64, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{64, 64},
       PlotRange->{{0, 64}, {0, 64}}]}], ",", 
     RowBox[{"\<\"shape\"\>", "\[Rule]", "\<\"Disk\"\>"}], ",", 
     RowBox[{"\<\"color\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Input\"\>", "\[Rule]", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztmC1MA0EQRi9gKiuR4CqRlcWBIxASJBDKjymkkFAUOCQSiUQikUgkEolE
IpHDgyOTyR29lnbuDjEvCzlKO/12d/bb2V3YOVrbm0mS5KTBr7Xts6V+f/t8
vckfG72Tw/1ed3eld9rd7/bbO7O82Pn5+XqWIAiCIAiCIAiCqXmUR9s+5KNu
RaN5kZcruVqUxUSSfGtJ61iOn+W5bpm/8Cqvm7L5q+x860jnX/XiQi4a0hhT
vDbmovakepf3VVm1quZl/kAOHuQh884neUIw/7Vvbkv7Td5qUS7f4m2qN6VJ
8o8c0lu5nZM5219yrxK9WZZlWWXQkfFHkj7aWeOz1ScSOa8CEDOBgIEMNMKW
bJUhchi4hy5Ycnji0bOWxR7hqrEInX0yeZoFSMd1BfHgqLAABl8H7Vqup4zG
sGu0e7l3UViMZj7W4bLudDarWQWUAenXsQBdAuKo6sBlGxHZ7r7i2EfUDdjm
XGIOw6arY1idU+bCMWyeO7lT53EMS0WXhmUHdwyb50ZutBh2DMvKTcNiDo5h
8+haw3wcw2opUrb+kvJfd7Gy858Tlur3qhvxTJwzjZkvvN3R7/JaazqnuChe
6hKzAF1rVG4uATnv6LnSJWAxVCmOFQsbom5emJuLwpE4Fo22lK3sFGOngFPt
xHF0N3EpZf+EPXpMNu9YjT0EuSssBqOwlwl/rUXxeRWPodVyhGcvUC+lsYfy
yshPsWDt3NGLKk+OGTiLZa50cNdhexC1MVZpb7rofo3iU0gkrR6tMF5kRi7l
Eofh2d75qHfVdfOTh7o6MxEFjd5V7DbjgHtjRPZSK98Yc5RXUCRMA/LIaiph
21gUNV51BkEQBEEQBEEAnzTOoZg=
         "], {{0, 64}, {64, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{64, 64},
       PlotRange->{{0, 64}, {0, 64}}]}], ",", 
     RowBox[{"\<\"shape\"\>", "\[Rule]", "\<\"Disk\"\>"}], ",", 
     RowBox[{"\<\"color\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Input\"\>", "\[Rule]", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztmC9QQkEQhxktRKJRm9FIxKbN0XHGqI4IFmTQGTFpMxqNRKLRSCQSiUYj
kXh++JzleE8FHvfHsN+czhPw2Lvd/e3ebZ1fH16uFQqFmyK/Ds/udluts/uj
En8cN26uao3qxX7jtlqrtsrn67xY+f6ZPBtFURRFURRFUZTV6fVmxngc26AF
GA7N05PZ2TGcjLJje9s0m2YwiG3lT7y/m5OTn83Ojkrlf63i4cEUi4saLwNf
RA+q0cgcHMxYtblp6nXz9pb+ZL8/MZh37Q+Xy+bjI4bdX2C8Heql0iT4525p
p2M2NmbWS+xFYW9vagYLWXwnWaPtNf43fCAR82IAxuQwoN2eznB66sHE30E9
JGGJ4dy7Z0sWNSIY4n0ieZUEZOGSQTyEgc2XTXt+XnU2tl1me311Yd88JPKR
Did5J94MkwW0AcnXkYBOQFFFgX0LEdHuPOOoI6IGlDmv2OHqEPEpvvBKtztV
HofQ0SXTUsG98vIybYYdQuYm0yIOXpFcQ3wcIq2Ib/s9xb9UMd/xzwlL7HfV
N6KZKGcyZ7bxdo58l6tcE5+iomipbyTX6NycwHlHzpUBoEtx2LFQEKV4IW5h
cNg02q1ssFOM7QJOtbmRauKklV0K++iRz+9IjX0ICgxCYV8mLNuLovNiPIIW
5QhPLRAtZVBDeWUuJKztO1YR8uSYgrNY6koHdf2tBtEbI5X2TRfLj2h8AoEk
3aNtGC/ikcfHicLwbN/5iHbFuvnJQl+dcsQfg9UFVptFQL0RIvtSKzvYcywP
0CSsAuYR1XTC9iApIl51KoqiKIqiKIpizCdT0qGY
         "], {{0, 64}, {64, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{64, 64},
       PlotRange->{{0, 64}, {0, 64}}]}], ",", 
     RowBox[{"\<\"shape\"\>", "\[Rule]", "\<\"Disk\"\>"}], ",", 
     RowBox[{"\<\"color\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Input\"\>", "\[Rule]", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztzjEKwjAUgOGHLo5ewVs46uha8QAtjcUlQiqIp68puDoqFL6Pl5CX6d91
9+a6iohxU6+mfR5LaV/nbV0uebwNOfWn/EhDKvtuXT8PnzO/JwAAgC9iip+O
fv369evXr1+/fv369evXr1+/fv369evXr////QAAwHK9AaZ15yg=
         "], {{0, 64}, {64, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{64, 64},
       PlotRange->{{0, 64}, {0, 64}}]}], ",", 
     RowBox[{"\<\"shape\"\>", "\[Rule]", "\<\"Rect\"\>"}], ",", 
     RowBox[{"\<\"color\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False]}]}], "\[RightAssociation]"}], ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"Input\"\>", "\[Rule]", 
      GraphicsBox[
       TagBox[RasterBox[CompressedData["
1:eJztlz0OgkAQRok2lpa03oDSUktbjAeAiMQGEzAxVhzB43EMSsp1CcYYfxDY
XXYm+V6GCVCQzXsVi/DkHyaO42Qzufzgsk7T4Lqdy4ddkh3jJNpvknMUR+ky
nMqXq8dV3wsAAAAAAAAA0ERZ2j6BAlUlPK/eTLndhPzDk5sjUrvr1ueXm2OC
Rn4z7BI85TfDLsGrfHYJ3uSzS/Apn1GCr/IZJfgln0WCFvksErTLJ57gr3zi
CbrIJ5ugo3yyCbrLJ5igl3yCCfrKJ5VggHxSCYbJJ5JgsHwiCVTkW0+gKN96
AnX5FhNokW8xgS75VhJolG8lgV75IyfQLn/kBCbkj5bAkPzREhSFyHODI78P
AAAAAAAAMMQdh17rJg==
         "], {{0, 64}, {64, 0}}, {0, 255},
         ColorFunction->RGBColor],
        BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
        Selectable->False],
       DefaultBaseStyle->"ImageGraphics",
       ImageSizeRaw->{64, 64},
       PlotRange->{{0, 64}, {0, 64}}]}], ",", 
     RowBox[{"\<\"shape\"\>", "\[Rule]", "\<\"Triangle\"\>"}], ",", 
     RowBox[{"\<\"color\"\>", "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False]}]}], "\[RightAssociation]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.820297738742354*^9, 3.820297812273264*^9}, {
  3.8202978757555685`*^9, 3.820297912181385*^9}, {3.8202979691773767`*^9, 
  3.8202981152560773`*^9}},
 CellLabel->
  "Out[341]=",ExpressionUUID->"f6994de5-93ec-438f-9a50-cea5724aceb5"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["3\tretrain the network", "Subsubsection",
 CellChangeTimes->{{3.8202985812783413`*^9, 
  3.8202985893719473`*^9}},ExpressionUUID->"35617332-8bbf-4af2-8cc4-\
419a2a5557ca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"netT", " ", "=", " ", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"netT", ",", "trainingData", ",", 
    RowBox[{"TargetDevice", "\[Rule]", "\"\<GPU\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.820297816154767*^9, 3.820297844462006*^9}},
 CellLabel->
  "In[342]:=",ExpressionUUID->"08bce6cd-cd70-460e-9b0f-c4e151d428c0"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetGraph", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of outputs\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["2", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["5", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.0149], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.03], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 37.}, {18., 37.}, {
                  18.5, 27.5}, {35., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{50., 37.}, {50., 37.}, {
                  49.5, 27.5}, {33., 27.}}}, CurveClosed -> {0}], 
                 
                 JoinedCurveBox[{{{1, 4, 3}}}, {{{18., 16.}, {18., 16.}, {
                  18.5, 25.5}, {35., 26.}}}, CurveClosed -> {0}]}, {
                 FaceForm[
                  RGBColor[0.631, 0.8160000000000001, 0.498]], 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  40.5}, {22.5, 40.5}, {22.5, 33.5}, {15.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.40800000000000003`, 0.627, 0.196]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 41.}, {15., 41.}, {15., 
                  33.}, {23., 33.}}, {{22., 34.}, {16., 34.}, {16., 40.}, {
                  22., 40.}}}]}, {
                 FaceForm[
                  RGBColor[0.38, 0.753, 0.89]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  19.5}, {22.5, 19.5}, {22.5, 12.5}, {15.5, 12.5}}}]}, {
                 FaceForm[
                  RGBColor[0.24300000000000002`, 0.608, 0.71]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 20.}, {15., 20.}, {15., 
                  12.}, {23., 12.}}, {{22., 13.}, {16., 13.}, {16., 19.}, {
                  22., 19.}}}]}, {
                 FaceForm[
                  RGBColor[0.584, 0.51, 0.8390000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{30.5, 
                  30.5}, {37.5, 30.5}, {37.5, 23.5}, {30.5, 23.5}}}]}, {
                 FaceForm[
                  RGBColor[0.4, 0.396, 0.659]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 31.}, {30., 31.}, {30., 
                  23.}, {38., 23.}}, {{37., 24.}, {31., 24.}, {31., 30.}, {
                  37., 30.}}}]}, {
                 FaceForm[
                  RGBColor[0.8270000000000001, 0.41200000000000003`, 0.133]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{45.5, 
                  40.5}, {52.5, 40.5}, {52.5, 33.5}, {45.5, 33.5}}}]}, {
                 FaceForm[
                  RGBColor[0.647, 0.259, 0.08600000000000001]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{53., 41.}, {45., 41.}, {45., 
                  33.}, {53., 33.}}, {{52., 34.}, {46., 34.}, {46., 40.}, {
                  52., 40.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetGraph`selection = None}, 
                  GridBox[{{
                    TagBox[
                    GraphicsBox[{{
                    GrayLevel[0.7], {
                    
                    LineBox[{{-4., 2.4492935982947064`*^-16}, {-3., 
                    1.8369701987210297`*^-16}}], 
                    
                    LineBox[{{-3., 1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}}], 
                    
                    LineBox[{{-3., 
                    1.8369701987210297`*^-16}, {-2., -0.9999999999999999}}], 
                    
                    LineBox[{{-2., -0.9999999999999999}, {-1., \
-0.9999999999999999}}], 
                    
                    LineBox[{{-1., -0.9999999999999999}, \
{-6.123233995736766*^-17, -1.}}], 
                    
                    LineBox[{{-2., 1.2246467991473532`*^-16}, {-1., 
                    6.123233995736766*^-17}}], 
                    LineBox[{{-1., 6.123233995736766*^-17}, {0., 0.}}]}}, {
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-3.4, 
                    2.0818995585505003`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736767*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, 
                    1.4695761589768238`*^-16}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-2.4000000000000004`, -0.5999999999999998}, \
{-0.25, 0}, 
                    Offset[8], {1., -1.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-1.4, -0.9999999999999998}, {-0.25, 0}, 
                    Offset[8], {1., 0.}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> 
                    False]], {-0.4000000000000001, -1.}, {-0.25, 0}, 
                    Offset[8], {
                    0.9999999999999999, -1.1102230246251565`*^-16}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-1.4, 
                    8.572527594031473*^-17}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736766*^-17}], 
                    InsetBox[
                    GraphicsBox[
                    StyleBox[
                    
                    PolygonBox[{{-1., 0.3333333333333333}, {0., 
                    0.}, {-1., -0.3333333333333333}, {-0.6666666666666666, 
                    0.}, {-1., 0.3333333333333333}}], 
                    GrayLevel[0.7], StripOnInput -> False]], {-0.4, 
                    2.4492935982947065`*^-17}, {-0.25, 0}, 
                    Offset[8], {1., -6.123233995736766*^-17}]}, {
                    EdgeForm[
                    AbsoluteThickness[1]], FontSize -> 10, {
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-4., 2.4492935982947064`*^-16}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"Input\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["Input", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 1), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-12, -12}, {-3., 1.8369701987210297`*^-16}], 
                    Offset[{12, 12}, {-3., 1.8369701987210297`*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[{
                    Thickness[0.014925373134328358`], {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    GrayLevel[0.5], 
                    Thickness[0.018686567164179105`], 
                    Opacity[1.], 
                    JoinForm[{"Miter", 10.}], 
                    
                    JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 
                    91.5}}}, CurveClosed -> {0}]}, {
                    FaceForm[{
                    RGBColor[0.631, 0.8160000000000001, 0.498], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    15.5, 103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.40800000000000003`, 0.627, 0.196], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                    15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                    103.}, {23., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.38, 0.753, 0.89], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    29.5, 103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.24300000000000002`, 0.608, 0.71], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                    29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                    103.}, {37., 103.}}}]}, {
                    FaceForm[{
                    RGBColor[0.584, 0.51, 0.8390000000000001], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    43.5, 103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 
                    79.5}}}]}, {
                    FaceForm[{
                    RGBColor[0.4, 0.396, 0.659], 
                    Opacity[1.]}], 
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2,
                     0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                    43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                    103.}, {51., 103.}}}]}}, PlotRange -> All, AspectRatio -> 
                    0.7, PlotRangePadding -> 1, ImagePadding -> 0, ImageSize -> 
                    16, ImageMargins -> 0.], {-3., 
                    1.8369701987210297`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"1\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"NetChain", "[", 
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], 
                    "]"}], HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["1", Bold], 
                    Style[
                    HoldForm[
                    NetChain[
                    Skeleton[7]]], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 2), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2., 1.2246467991473532`*^-16}], 
                    Offset[{10, 10}, {-2., 1.2246467991473532`*^-16}]]}, 
                    InsetBox[
                    GraphicsBox[
                    
                    GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {
                    1.3, 1}, {0.9, 0}}, {{
                    Opacity[0.2], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[3.5], 
                    RGBColor[0.33, 0.33, 0.33], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 18], {-2., 
                    1.2246467991473532`*^-16}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"2\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"LinearLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "4", "}"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "100"}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["2", Bold], 
                    Style[
                    HoldForm[
                    LinearLayer[{4}, "Input" -> 100]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 3), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[
                    0.7999999999999999, 0.7999999999999999, 
                    0.7999999999999999]], 
                    EdgeForm[
                    GrayLevel[0.7]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-2., -0.9999999999999999}], 
                    Offset[{10, 10}, {-2., -0.9999999999999999}]]}, 
                    InsetBox[
                    GraphicsBox[
                    
                    GraphicsComplexBox[{{0.1, 0}, {-0.3, 1}, {0.5, 1}, {
                    1.3, 1}, {0.9, 0}}, {{
                    Opacity[0.2], 
                    
                    LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 
                    4}}]}, {
                    AbsolutePointSize[3.5], 
                    RGBColor[0.33, 0.33, 0.33], 
                    PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 
                    18], {-2., -0.9999999999999999}]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"4\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"LinearLayer", "[", 
                    RowBox[{
                    RowBox[{"{", "3", "}"}], ",", 
                    RowBox[{"\"Input\"", "\[Rule]", "100"}]}], "]"}], 
                    HoldForm], FontFamily -> "Source Code Pro", 
                    ShowStringCharacters -> True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["4", Bold], 
                    Style[
                    HoldForm[
                    LinearLayer[{3}, "Input" -> 100]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 4), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-1., -0.9999999999999999}], 
                    Offset[{10, 10}, {-1., -0.9999999999999999}]]}, 
                    InsetBox[
                    FormBox["\"S\"", TraditionalForm], 
                    Offset[{0, -1}, {-1., -0.9999999999999999}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"5\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"SoftmaxLayer", "[", 
                    RowBox[{"\"Input\"", "\[Rule]", "3"}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["5", Bold], 
                    Style[
                    HoldForm[
                    SoftmaxLayer["Input" -> 3]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 5), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{-6.123233995736766*^-17, -1.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"color\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["color", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 6), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{{
                    FaceForm[
                    RGBColor[0.9, 0.9, 0.9]], 
                    EdgeForm[
                    GrayLevel[0.85]], 
                    RectangleBox[
                    Offset[{-10, -10}, {-1., 6.123233995736766*^-17}], 
                    Offset[{10, 10}, {-1., 6.123233995736766*^-17}]]}, 
                    InsetBox[
                    FormBox["\"S\"", TraditionalForm], 
                    Offset[{0, -1}, {-1., 6.123233995736766*^-17}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"3\"", Bold, StripOnInput -> False]}, {
                    StyleBox[
                    TagBox[
                    RowBox[{"SoftmaxLayer", "[", 
                    RowBox[{"\"Input\"", "\[Rule]", "4"}], "]"}], HoldForm], 
                    FontFamily -> "Source Code Pro", ShowStringCharacters -> 
                    True, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["3", Bold], 
                    Style[
                    HoldForm[
                    SoftmaxLayer["Input" -> 4]], FontFamily -> 
                    "Source Code Pro", ShowStringCharacters -> True]}], 
                    "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 7), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]], 
                    TagBox[
                    TagBox[
                    TooltipBox[{
                    GrayLevel[0.85], 
                    EdgeForm[
                    GrayLevel[0.5]], 
                    DiskBox[{0., 0.}, 
                    Offset[{2, 2}]]}, 
                    TagBox[
                    GridBox[{{
                    StyleBox["\"shape\"", Bold, StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Style["shape", Bold]}], "Tooltip"]& ], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = 8), 
                    PassEventsUp -> False, Method -> "Preemptive", 
                    PassEventsDown -> Automatic}]]}}, {
                    StyleBox[{{
                    InsetBox[
                    FormBox["\"Input\"", TraditionalForm], 
                    Offset[{0, -7}, {-4., 2.4492935982947064`*^-16}], {0, 1.},
                     Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    Offset[{0, -15}, {-3., 1.8369701987210297`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"2\"", TraditionalForm], 
                    Offset[{0, -13}, {-2., 1.2246467991473532`*^-16}], {
                    0, 1.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"4\"", TraditionalForm], 
                    Offset[{0, -13}, {-2., -0.9999999999999999}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"5\"", TraditionalForm], 
                    Offset[{0, -13}, {-1., -0.9999999999999999}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"color\"", TraditionalForm], 
                    Offset[{0, -7}, {-6.123233995736766*^-17, -1.}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"3\"", TraditionalForm], 
                    Offset[{0, -13}, {-1., 6.123233995736766*^-17}], {0, 1.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["\"shape\"", TraditionalForm], 
                    Offset[{0, -7}, {0., 0.}], {0, 1.}, Automatic, {1, 0}]}}, 
                    FontColor -> GrayLevel[0.5], StripOnInput -> False], 
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{
                    "\[Cross]", "\"\[Cross]\"", "\"3\"", "\"32\"", "\"32\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.367778697655222*^-16, 5.5}, {-3.4, 
                    2.0818995585505003`*^-16}], {0., -0.17}, Automatic, {
                    1., -6.123233995736767*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"100\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.3677786976552205`*^-16, 
                    5.5}, {-2.4000000000000004`, 1.4695761589768238`*^-16}], {
                    0., -0.17}, Automatic, {1., -6.123233995736765*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"100\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.889087296526011, 
                    3.889087296526011}, {-2.4000000000000004`, \
-0.5999999999999998}], {0., -0.17}, Automatic, {
                    0.7071067811865475, -0.7071067811865475}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"3\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    Offset[{0., 5.5}, {-1.4, -0.9999999999999998}], {
                    0., -0.17}, Automatic, {1., 0.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"3\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{6.106226635438362*^-16, 
                    5.5}, {-0.4000000000000001, -1.}], {0., -0.17}, 
                    Automatic, {1., -1.1102230246251568`*^-16}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"4\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.3677786976552215`*^-16, 5.5}, {-1.4, 
                    8.572527594031473*^-17}], {0., -0.17}, Automatic, {
                    1., -6.123233995736766*^-17}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"4\""}, 
                    "RowWithSeparators"], TraditionalForm], 
                    
                    Offset[{3.3677786976552215`*^-16, 5.5}, {-0.4, 
                    2.4492935982947065`*^-17}], {0., -0.17}, Automatic, {
                    1., -6.123233995736766*^-17}]}, FontColor -> 
                    GrayLevel[0.7], FontSize -> 8, FontWeight -> "Thin", 
                    StripOnInput -> False]}, {
                    FaceForm[None], 
                    EdgeForm[{
                    Dashing[{0, Small}], 
                    GrayLevel[0.5], 
                    Thickness[Large]}], 
                    PolygonBox[
                    Dynamic[
                    If[
                    Not[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection]], {}, 
                    GeneralUtilities`Graphics`PackagePrivate`makeOffsetSquare[
                    
                    Part[{{-4., 2.4492935982947064`*^-16}, {-3., 
                    1.8369701987210297`*^-16}, {-2., 
                    1.2246467991473532`*^-16}, {-2., -0.9999999999999999}, \
{-1., -0.9999999999999999}, {-6.123233995736766*^-17, -1.}, {-1., 
                    6.123233995736766*^-17}, {0., 0.}}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    3 + {0.5, 0.5} 
                    Part[{8, 24, 20, 20, 20, 8, 20, 8}, 
                    NeuralNetworks`Private`NetGraph`selection], {-0.5, 
                    0.5}]]]]}}, ImageSize -> {276., 101.00000000000001`}, 
                    AspectRatio -> Full, PlotRangePadding -> 0, 
                    ImagePadding -> {{28., 28.}, {28., 18.}}, 
                    ImageMargins -> {{0, 0}, {0, 0}}, 
                    BaseStyle -> {
                    TooltipBoxOptions -> {TooltipDelay -> 0.08}}], 
                    
                    EventHandlerTag[{
                    "MouseClicked" :> (
                    NeuralNetworks`Private`NetGraph`selection = None), Method -> 
                    "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
                    True}]]}, {
                    DynamicBox[
                    If[
                    IntegerQ[NeuralNetworks`Private`NetGraph`selection], 
                    NeuralNetworks`Private`NetGraph`vpathInfo[
                    Part[{
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "1"], 
                    NeuralNetworks`NetPath["Nodes", "2"], 
                    NeuralNetworks`NetPath["Nodes", "4"], 
                    NeuralNetworks`NetPath["Nodes", "5"], 
                    NeuralNetworks`NetPath["Outputs", "color"], 
                    NeuralNetworks`NetPath["Nodes", "3"], 
                    NeuralNetworks`NetPath["Outputs", "shape"]}, 
                    NeuralNetworks`Private`NetGraph`selection], 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3, 32, 32}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {32, 32}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, "Interleaving" -> False, 
                    "MeanImage" -> None, "VarianceImage" -> None, "$Version" -> 
                    "12.0.11"]], 
                    Association[
                    "color" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`RealT], "Type" -> "Class", "Labels" -> {
                    RGBColor[1, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 0, 1]}, "InputDepth" -> 1, "Dimensions" -> 3, 
                    "$Rank" -> 0, "$Version" -> "12.0.11"], "shape" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {
                    "\"Rect\"", "\"Disk\"", "\"Circle\"", "\"Triangle\""}, 
                    "InputDepth" -> 1, "Dimensions" -> 4, "$Rank" -> 0, 
                    "$Version" -> "12.0.11"]], 
                    Association[
                    "1" -> Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{4, 3, 4, 
                    4}], "Biases" -> NeuralNetworks`Private`DummyArray[{4}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 4, "KernelSize" -> {4, 4}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 3, "$InputSize" -> {32, 32}, 
                    "$OutputSize" -> {29, 29}, "$WeightsInputChannels" -> 3], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{3, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4, 29, 29}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {4, 29, 29}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{4, 29, 29}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4, 29, 29}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 4, "$InputSize" -> {29, 29}, 
                    "$OutputSize" -> {14, 14}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{4, 29, 29}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4, 14, 14}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{4, 4, 4, 
                    4}], "Biases" -> NeuralNetworks`Private`DummyArray[{4}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 4, "KernelSize" -> {4, 4}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 4, "$InputSize" -> {14, 14}, 
                    "$OutputSize" -> {11, 11}, "$WeightsInputChannels" -> 4], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{4, 14, 14}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4, 11, 11}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {4, 11, 11}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{4, 11, 11}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4, 11, 11}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 4, "$InputSize" -> {11, 11}, 
                    "$OutputSize" -> {5, 5}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{4, 11, 11}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4, 5, 5}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{4, 5, 5}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{100}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{3, 32, 32}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{100}, NeuralNetworks`RealT]]], 
                    "4" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3, 100}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{3}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {3}, "$OutputSize" -> 3, 
                    "$InputSize" -> 100, "$InputDimensions" -> {100}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{100}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{4, 100}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{4}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {4}, "$OutputSize" -> 4, 
                    "$InputSize" -> 100, "$InputDimensions" -> {100}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{100}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]]], 
                    Association[]], 
                    GridBox[{{
                    ItemBox[
                    StyleBox["Inputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox["", Frame -> {{False, False}, {False, 
                    GrayLevel[0.85]}}], 
                    ItemBox[
                    StyleBox["Outputs", Bold], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]], 
                    ItemBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {1, 11}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline)], 
                    "CacheGraphics" -> False], 
                    Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                    GrayLevel[0.85]]}, {
                    StyleBox[
                    TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"image\"", "SummaryItem"], "", "", 
                    StyleBox[
                    TemplateBox[{"\"color\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}, {"", "", "", "", 
                    StyleBox[
                    TemplateBox[{"\"shape\"", "\":\""}, "RowDefault"], 
                    "SummaryItemAnnotation"], 
                    StyleBox["\"class\"", "SummaryItem"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}]], 
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetGraph`selection}]}}, 
                   GridBoxAlignment -> {"Columns" -> {{Left}}}], 
                  Initialization :> {NetGraph}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetGraph[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8202978582599907`*^9, 3.8202979252442465`*^9, 
  3.82029804102412*^9, 3.8202981275957394`*^9},
 CellLabel->
  "Out[342]=",ExpressionUUID->"11db02f3-fb69-4784-b877-f735e9be0645"]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
WindowSize->{958, 998},
WindowMargins->{{-7, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 235, 4, 53, "Subsection",ExpressionUUID->"10bebdbb-4535-45d5-b953-b3df8b403dbe"],
Cell[CellGroupData[{
Cell[840, 30, 174, 3, 44, "Subsubsection",ExpressionUUID->"fa8d4040-cd12-45f1-b6f3-94b34b2aded8"],
Cell[1017, 35, 523, 12, 172, "Input",ExpressionUUID->"f492b6b0-b311-487a-81ff-787493fd5f6b",
 InitializationCell->True],
Cell[1543, 49, 2517, 71, 228, "Input",ExpressionUUID->"ff1406fd-e301-4375-9f46-e7662facc965",
 InitializationCell->True],
Cell[4063, 122, 4057, 106, 396, "Input",ExpressionUUID->"1e17a569-6693-4921-976b-2b49592c858c",
 InitializationCell->True],
Cell[8123, 230, 1773, 47, 194, "Input",ExpressionUUID->"25c63d64-db7a-46f4-8ec8-3098716100d1",
 InitializationCell->True],
Cell[9899, 279, 1127, 31, 118, "Input",ExpressionUUID->"bca9a2d2-a5f0-4c18-bf95-6f4a598db1fa",
 InitializationCell->True],
Cell[11029, 312, 2331, 61, 285, "Input",ExpressionUUID->"a09870c1-3406-45b2-8b22-a1f019a02718",
 InitializationCell->True],
Cell[13363, 375, 2262, 61, 283, "Input",ExpressionUUID->"dd7539b7-fb70-4276-9694-6c87d21655d6",
 InitializationCell->True],
Cell[15628, 438, 2097, 55, 231, "Input",ExpressionUUID->"0ab186f0-1700-4e03-ba71-3b1e637cbd22",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[17750, 497, 232, 4, 28, "Input",ExpressionUUID->"406543cb-00e0-4adb-b471-fc97adb4564e"],
Cell[17985, 503, 435, 10, 269, "Output",ExpressionUUID->"78b521bb-8cac-4870-a873-0a1f71e34b18"]
}, Open  ]],
Cell[18435, 516, 1194, 32, 120, "Input",ExpressionUUID->"619e3079-3c01-4636-9934-eeb5dde9597e"],
Cell[19632, 550, 348, 8, 48, "Input",ExpressionUUID->"cec98a1b-8365-4b8e-b1d4-4639cca27497"],
Cell[CellGroupData[{
Cell[20005, 562, 1020, 28, 121, "Input",ExpressionUUID->"119050e1-c041-4dd6-92ac-c5f20f999280"],
Cell[21028, 592, 743, 15, 269, "Output",ExpressionUUID->"7e429ffe-a95c-4ba0-9c17-242084bb6b05"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21808, 612, 222, 4, 28, "Input",ExpressionUUID->"6d69c460-14a7-4a4a-b8b1-2517e560cdba"],
Cell[22033, 618, 1196, 32, 66, "Output",ExpressionUUID->"acaea6ff-f5cd-4830-8893-33788b26706c"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[23278, 656, 198, 3, 36, "Subsubsection",ExpressionUUID->"4647438c-81a9-4c2b-87a6-ed8f20aa5b67"],
Cell[CellGroupData[{
Cell[23501, 663, 696, 16, 66, "Input",ExpressionUUID->"f7ee5c61-dbcd-48bc-80f0-beabd1879064"],
Cell[24200, 681, 25098, 503, 88, "Output",ExpressionUUID->"8354bbcd-0adf-497e-9c2f-abc080267d60"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49335, 1189, 260, 5, 28, "Input",ExpressionUUID->"b19ed7cb-9fa6-4f78-beb2-20352ca5729e"],
Cell[49598, 1196, 347, 9, 32, "Output",ExpressionUUID->"5bb1f1b2-dc1e-45e8-9412-b402270e053e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49982, 1210, 289, 6, 28, "Input",ExpressionUUID->"bbeadcd4-fbf6-449e-b0c2-0c0de96763da"],
Cell[50274, 1218, 251, 6, 32, "Output",ExpressionUUID->"f52266af-b740-4327-aeec-2b9b9cd37b67"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50562, 1229, 1020, 29, 121, "Input",ExpressionUUID->"846b6187-cc62-449d-9717-aa41633866c1"],
Cell[51585, 1260, 722, 17, 382, "Output",ExpressionUUID->"66b10efa-dde4-48a1-b776-e090e0062dfa"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[52356, 1283, 229, 4, 36, "Subsubsection",ExpressionUUID->"c58d7455-a8d4-4db8-9b1b-73c44e1d71db"],
Cell[52588, 1289, 599, 15, 45, "Input",ExpressionUUID->"f2887952-4aeb-4466-8de6-e992d0946905"],
Cell[CellGroupData[{
Cell[53212, 1308, 407, 7, 67, "Input",ExpressionUUID->"98584751-92c9-4916-a6ad-7e24b2fedba1"],
Cell[53622, 1317, 21792, 418, 212, "Output",ExpressionUUID->"3269f01e-9e1b-4750-a5d8-09c9e7254a44"],
Cell[75417, 1737, 271, 5, 32, "Output",ExpressionUUID->"663fc4a7-6a66-4fe9-b3c9-a03df747c335"],
Cell[75691, 1744, 26266, 529, 198, "Output",ExpressionUUID->"c73c4e40-bdf8-4c03-901e-6d18fa25c117"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101994, 2278, 466, 11, 67, "Input",ExpressionUUID->"4548932f-8f67-4cb3-96cb-2a8a313f9f0a"],
Cell[102463, 2291, 571, 16, 32, "Output",ExpressionUUID->"09add8c6-9c55-4bca-9abb-f16eaa5cc1d9"],
Cell[103037, 2309, 231, 4, 32, "Output",ExpressionUUID->"4f90e938-ae68-4940-8b95-6f7c6610003e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103305, 2318, 974, 28, 121, "Input",ExpressionUUID->"57544b25-eab7-4e00-9d52-ff7252a2d7a0"],
Cell[104282, 2348, 671, 14, 269, "Output",ExpressionUUID->"9aa3a3c4-11ce-4758-abb4-18cec85fdaac"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104990, 2367, 260, 5, 28, "Input",ExpressionUUID->"95118bf2-6d21-4a89-8ec4-2820740f47cb"],
Cell[105253, 2374, 484, 12, 32, "Output",ExpressionUUID->"bc90a8c1-0646-4b97-9e82-8c4bd2b63b60"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105774, 2391, 254, 5, 28, "Input",ExpressionUUID->"d64fc651-881c-4e7a-9661-c3bf5a0c2bb6"],
Cell[106031, 2398, 755, 18, 99, "Output",ExpressionUUID->"f7bd28f8-ac21-4dc6-9c75-99a176ca6b99"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[106847, 2423, 185, 3, 53, "Subsection",ExpressionUUID->"e1071918-3ff1-4063-87fe-757e9dae2085"],
Cell[CellGroupData[{
Cell[107057, 2430, 172, 3, 44, "Subsubsection",ExpressionUUID->"50f9c99e-db7d-42f4-b1f0-b3ce6e4433c5"],
Cell[107232, 2435, 654, 17, 82, "Input",ExpressionUUID->"46a5af64-2f58-429f-862f-602aa0825c94"],
Cell[CellGroupData[{
Cell[107911, 2456, 209, 4, 45, "Input",ExpressionUUID->"8ff56c74-a50c-432e-962f-073e0e0d06c0"],
Cell[108123, 2462, 156, 3, 32, "Output",ExpressionUUID->"0d96a087-c9b9-4ac9-b068-81bd971182ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108316, 2470, 232, 5, 28, "Input",ExpressionUUID->"14b99c73-22f0-4afe-9705-b401d5e008e9"],
Cell[108551, 2477, 314, 5, 32, "Output",ExpressionUUID->"549f6173-b443-45ec-a604-f9eac84810d7"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[108914, 2488, 171, 3, 36, "Subsubsection",ExpressionUUID->"22061659-30d1-4e44-8ef6-69a17bd97255"],
Cell[CellGroupData[{
Cell[109110, 2495, 1292, 29, 341, "Input",ExpressionUUID->"e5f69238-ac94-4591-b741-60cef46271c2"],
Cell[110405, 2526, 31077, 616, 88, "Output",ExpressionUUID->"81291dc1-f6ab-4fa7-ae24-6fdb67578212"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141519, 3147, 276, 6, 28, "Input",ExpressionUUID->"c89daaa7-4744-4596-bdbd-283a302d7e29"],
Cell[141798, 3155, 364, 8, 32, "Output",ExpressionUUID->"ce509781-c7df-43ae-91b2-a80ea1a999f6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142199, 3168, 331, 7, 45, "Input",ExpressionUUID->"52f48054-4282-4d3c-bd84-22b777d3e39c"],
Cell[142533, 3177, 3626, 71, 204, "Output",ExpressionUUID->"0816c32e-0595-4991-a0d3-5b9ed628d68c"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[146208, 3254, 178, 3, 36, "Subsubsection",ExpressionUUID->"4ee29566-ce90-43e8-bb46-80fe27463487"],
Cell[CellGroupData[{
Cell[146411, 3261, 401, 8, 45, "Input",ExpressionUUID->"f34d178d-40ec-4707-babf-72787dffc023"],
Cell[146815, 3271, 27296, 557, 459, "Output",ExpressionUUID->"8f3fb2b8-b625-4c19-9225-8e591eb7779e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[174148, 3833, 411, 8, 67, "Input",ExpressionUUID->"5cc7a8a6-c244-41d9-a895-1fd5897cac23"],
Cell[174562, 3843, 17280, 342, 212, "Output",ExpressionUUID->"7528c46a-ef1f-4f83-bd92-2dbff0107716"],
Cell[191845, 4187, 364, 8, 32, "Output",ExpressionUUID->"a9b3ae22-b12f-4ab4-a1d4-89981c95f6c4"],
Cell[192212, 4197, 31077, 616, 88, "Output",ExpressionUUID->"a6db4902-9b9c-4eb6-abdc-7347c33e15f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[223326, 4818, 221, 4, 28, "Input",ExpressionUUID->"04a1bed3-e836-42c5-8360-b9176b9e56a6"],
Cell[223550, 4824, 170, 3, 32, "Output",ExpressionUUID->"d01aef10-2594-4e4c-a10f-73e5083269fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[223757, 4832, 253, 6, 28, "Input",ExpressionUUID->"0fa6c9ec-c875-415e-9825-ba06fedb883e"],
Cell[224013, 4840, 361, 8, 32, "Output",ExpressionUUID->"3b68bb18-5759-4cdc-b039-d1f5b6aaede1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[224411, 4853, 302, 7, 28, "Input",ExpressionUUID->"d629c1fb-bea2-4889-bd57-9e3e9e787c5c"],
Cell[224716, 4862, 388, 8, 32, "Output",ExpressionUUID->"076a2504-0569-4c68-92fe-0717955bc874"]
}, Open  ]],
Cell[225119, 4873, 156, 3, 28, "Input",ExpressionUUID->"7fd626ec-5371-448e-8668-2638357f365f"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[225324, 4882, 180, 3, 53, "Subsection",ExpressionUUID->"80da0d96-6fd0-4e03-bf44-f3f5416c9d9f"],
Cell[CellGroupData[{
Cell[225529, 4889, 170, 3, 44, "Subsubsection",ExpressionUUID->"b048dd3d-b691-4a5a-b0c6-bfae0172de47"],
Cell[225702, 4894, 3606, 101, 265, "Input",ExpressionUUID->"e52426af-950e-425e-ac72-420d672f1830",
 InitializationCell->True],
Cell[229311, 4997, 2024, 55, 177, "Input",ExpressionUUID->"976ea98c-ec3a-47a8-b935-fc454e3be765"],
Cell[CellGroupData[{
Cell[231360, 5056, 493, 13, 83, "Input",ExpressionUUID->"f06c8a48-15e4-4bfb-aded-1b3bf52bbd89"],
Cell[231856, 5071, 386, 10, 32, "Output",ExpressionUUID->"40c54702-252c-4fa2-ba9e-a58e3feca356"],
Cell[232245, 5083, 227, 4, 32, "Output",ExpressionUUID->"72f98d3a-d463-417f-b695-627311bd4b02"]
}, Open  ]],
Cell[CellGroupData[{
Cell[232509, 5092, 707, 20, 45, "Input",ExpressionUUID->"4fa10e0a-bee2-40a6-a34b-462770f83082"],
Cell[233219, 5114, 347, 6, 449, "Output",ExpressionUUID->"af803a53-186b-4709-83d4-4cbb24badc4c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[233603, 5125, 365, 10, 45, "Input",ExpressionUUID->"c257d702-a2cf-4a0e-bbef-fc11ab968a23"],
Cell[233971, 5137, 153, 3, 32, "Output",ExpressionUUID->"ab11793e-cf74-4fcc-a663-cd98bd1e7534"]
}, Open  ]],
Cell[CellGroupData[{
Cell[234161, 5145, 364, 10, 45, "Input",ExpressionUUID->"15f3a8c8-0a51-4ef3-b9dc-b27205891277"],
Cell[234528, 5157, 163, 3, 32, "Output",ExpressionUUID->"62ac7242-b07d-45ce-b303-00198f0afad0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[234728, 5165, 206, 4, 28, "Input",ExpressionUUID->"c1e95d9b-793b-405c-8f62-152270a01bde"],
Cell[234937, 5171, 2556, 68, 188, "Output",ExpressionUUID->"13e49753-07cf-4b57-88be-083c954fab85"]
}, Open  ]],
Cell[237508, 5242, 358, 9, 48, "Input",ExpressionUUID->"a9923d28-4c81-42c8-a4d1-749c75445818"],
Cell[CellGroupData[{
Cell[237891, 5255, 865, 23, 121, "Input",ExpressionUUID->"bae08368-71b2-4737-87b2-6d123a69cc73"],
Cell[238759, 5280, 517, 13, 32, "Output",ExpressionUUID->"5519324e-65c9-4a5c-993f-e506402df9e1"],
Cell[239279, 5295, 314, 7, 32, "Output",ExpressionUUID->"d800448f-4d35-4677-8cf7-c1c8ecd759ac"],
Cell[239596, 5304, 683, 15, 269, "Output",ExpressionUUID->"3d26ab2a-bd0e-482e-af67-1b5ef2c965be"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[240328, 5325, 171, 3, 36, "Subsubsection",ExpressionUUID->"796640cf-17a3-437c-a9d0-8c0aedd5eb26"],
Cell[240502, 5330, 1060, 26, 120, "Input",ExpressionUUID->"4bc48618-364f-4100-8910-d0a5d4ae9916"],
Cell[CellGroupData[{
Cell[241587, 5360, 328, 8, 48, "Input",ExpressionUUID->"0c5247fd-029a-4b00-ae4f-41219165b1f1"],
Cell[241918, 5370, 523, 14, 32, "Output",ExpressionUUID->"9b25026c-6cab-4b9f-adde-94c5ee50d85b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[242478, 5389, 346, 9, 28, "Input",ExpressionUUID->"d219989e-af7b-4e21-8526-acc23c6e5ab1"],
Cell[242827, 5400, 501, 11, 21, "Message",ExpressionUUID->"c512d955-1c93-49c4-b64e-dec977cad4da"],
Cell[243331, 5413, 158, 3, 32, "Output",ExpressionUUID->"425d5b9d-174b-47e4-bf91-391543557221"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[243538, 5422, 178, 3, 36, "Subsubsection",ExpressionUUID->"0549b513-87a2-427a-97f8-553f716305e8"],
Cell[CellGroupData[{
Cell[243741, 5429, 605, 16, 45, "Input",ExpressionUUID->"a8516448-464a-4422-8fc5-9241e3814bf3"],
Cell[244349, 5447, 528, 11, 21, "Message",ExpressionUUID->"56ce831b-8b7d-4fb6-bbe7-45fa89ff99cf"]
}, Open  ]],
Cell[244892, 5461, 386, 8, 67, "Input",ExpressionUUID->"58f1d675-9c29-4000-b276-851c10e1a603"],
Cell[245281, 5471, 305, 8, 48, "Input",ExpressionUUID->"52851da4-fb23-4e6c-9052-6403afc600f0"],
Cell[245589, 5481, 328, 9, 28, "Input",ExpressionUUID->"ea9c1b4a-a874-461b-8b88-36f1eb2e005e"],
Cell[245920, 5492, 993, 28, 140, "Input",ExpressionUUID->"cda37dd4-e440-46fb-b974-e749c41d30f3"],
Cell[246916, 5522, 357, 9, 45, "Input",ExpressionUUID->"41c35973-d508-4d15-a79e-07b673e6d50f"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[247322, 5537, 192, 3, 53, "Subsection",ExpressionUUID->"df495b1a-cc13-4eef-bae5-7a2e907238a6"],
Cell[CellGroupData[{
Cell[247539, 5544, 172, 3, 44, "Subsubsection",ExpressionUUID->"1f0bf3f3-998f-4b9e-abfb-624ef1a588f0"],
Cell[247714, 5549, 4017, 99, 323, "Input",ExpressionUUID->"e05a21ad-6d46-438c-acae-0606177462a4"],
Cell[CellGroupData[{
Cell[251756, 5652, 202, 4, 28, "Input",ExpressionUUID->"e7be292b-1a05-4cc9-af2a-ac6f1d97dd0c"],
Cell[251961, 5658, 4064, 91, 171, "Output",ExpressionUUID->"d8e53fe4-80c3-48b2-8246-2e3ed4337cdf"]
}, Open  ]],
Cell[256040, 5752, 355, 9, 48, "Input",ExpressionUUID->"0b24d0d4-3a2a-4c56-b139-b3a72b0d12dd"]
}, Closed]],
Cell[CellGroupData[{
Cell[256432, 5766, 168, 3, 36, "Subsubsection",ExpressionUUID->"127c677a-c549-4bba-8fb3-f502c0bccf33"],
Cell[256603, 5771, 167, 3, 34, "Text",ExpressionUUID->"c7244f35-34cb-438a-a286-0aa99f9027d4"],
Cell[CellGroupData[{
Cell[256795, 5778, 1698, 37, 510, "Input",ExpressionUUID->"7889adda-f85f-4dc3-bfac-47d1c881b0df"],
Cell[258496, 5817, 41675, 845, 88, "Output",ExpressionUUID->"81eed8b4-bf07-4ab9-b774-4aa53e854b37"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[300220, 6668, 175, 3, 36, "Subsubsection",ExpressionUUID->"a964df1a-3289-40b5-b967-e89398a0770d"],
Cell[300398, 6673, 422, 10, 45, "Input",ExpressionUUID->"f8aa4e07-1960-461b-adf9-a54696b051f7"],
Cell[CellGroupData[{
Cell[300845, 6687, 407, 8, 67, "Input",ExpressionUUID->"fec9245b-e180-491e-bc92-aca3f23d2f42"],
Cell[301255, 6697, 21792, 418, 212, "Output",ExpressionUUID->"1f45c14e-ce64-4836-a08b-939b6d7ca4af"],
Cell[323050, 7117, 275, 6, 32, "Output",ExpressionUUID->"a1f2501c-8bd5-447f-b7f5-4b0d71d8e5f9"],
Cell[323328, 7125, 41651, 845, 88, "Output",ExpressionUUID->"7c05aff2-80d5-4cb9-a7c9-cb1b2aaba50b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[365016, 7975, 411, 8, 67, "Input",ExpressionUUID->"eef3790c-5745-4b46-88f7-1db1f89b0e00"],
Cell[365430, 7985, 21790, 418, 212, "Output",ExpressionUUID->"4aaf9cc1-d211-4fd3-b38a-ab85c38f69de"],
Cell[387223, 8405, 275, 6, 32, "Output",ExpressionUUID->"387c13c4-8e0e-479c-88b3-c44b0551402e"],
Cell[387501, 8413, 41651, 845, 88, "Output",ExpressionUUID->"b39aa236-e424-49b5-8cbf-009745d02a65"]
}, Open  ]],
Cell[CellGroupData[{
Cell[429189, 9263, 560, 14, 121, "Input",ExpressionUUID->"0e3995d0-2507-4ce8-bd8f-1347a1c03661"],
Cell[429752, 9279, 689, 16, 210, "Output",ExpressionUUID->"2d284401-ad67-46f3-8d7b-dd6cf36ae53f"],
Cell[430444, 9297, 583, 10, 32, "Output",ExpressionUUID->"d332b0f6-5118-4dc9-ab51-48f845bb5eeb"],
Cell[431030, 9309, 583, 10, 32, "Output",ExpressionUUID->"d1a4c478-8c8a-410d-9afb-6b937bb6e487"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[431674, 9326, 200, 3, 53, "Subsection",ExpressionUUID->"d1de44d9-b93d-4820-a6b9-34876910eaa7"],
Cell[CellGroupData[{
Cell[431899, 9333, 173, 3, 44, "Subsubsection",ExpressionUUID->"d8b57ff8-d7a2-42fb-b6c3-df9ed1065417"],
Cell[432075, 9338, 479, 13, 48, "Input",ExpressionUUID->"cd8353e4-9116-478a-839d-88f05fdcdb57"],
Cell[CellGroupData[{
Cell[432579, 9355, 775, 20, 82, "Input",ExpressionUUID->"d0152f70-5fc5-48e3-8e1c-a47881ed65a8"],
Cell[433357, 9377, 19924, 404, 88, "Output",ExpressionUUID->"4aab7c14-2e46-4ee1-ba28-0da104a7a010"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[453330, 9787, 174, 3, 36, "Subsubsection",ExpressionUUID->"91b1c034-1f40-491b-bcd0-936c84735cbe"],
Cell[453507, 9792, 2947, 72, 359, "Input",ExpressionUUID->"ff8164f2-0af6-429b-928d-4081d7f5a338",
 InitializationCell->True],
Cell[456457, 9866, 250, 6, 28, "Input",ExpressionUUID->"7a85812b-6d6c-42fe-974b-7dc9db80999f"],
Cell[CellGroupData[{
Cell[456732, 9876, 269, 5, 28, "Input",ExpressionUUID->"cd5d1bc4-e034-4aec-8c56-2dc5db40edd2"],
Cell[457004, 9883, 2604, 48, 71, "Output",ExpressionUUID->"4d0b73fd-33fd-468b-9fb7-04503e70c7db"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[459657, 9937, 175, 3, 36, "Subsubsection",ExpressionUUID->"a6285917-420f-4665-bcd3-3a4428203cd4"],
Cell[CellGroupData[{
Cell[459857, 9944, 348, 7, 45, "Input",ExpressionUUID->"870628c9-fed6-4bf3-b404-648cd884339d"],
Cell[460208, 9953, 19975, 405, 88, "Output",ExpressionUUID->"995e7639-6251-46f2-80d5-5bf41372080a"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[480244, 10365, 198, 3, 53, "Subsection",ExpressionUUID->"0ce7c484-6989-498f-93f2-d2e340ded029"],
Cell[CellGroupData[{
Cell[480467, 10372, 171, 3, 44, "Subsubsection",ExpressionUUID->"65a96728-255c-4c48-9291-1171031f07ef"],
Cell[480641, 10377, 510, 13, 64, "Input",ExpressionUUID->"8924e3f4-c341-44c5-9284-f2c34e3f6d51"],
Cell[CellGroupData[{
Cell[481176, 10394, 938, 24, 82, "Input",ExpressionUUID->"32cc50d0-e6e6-4094-b150-ebbda4c0c11f"],
Cell[482117, 10420, 33664, 685, 88, "Output",ExpressionUUID->"ed7cf22b-3fcd-4d86-89b6-31d22080557d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[515818, 11110, 1368, 34, 119, "Input",ExpressionUUID->"f9643169-c0ab-4ca0-a228-04d47c702219"],
Cell[517189, 11146, 53280, 1071, 88, "Output",ExpressionUUID->"a3f214c6-2d97-450c-bb64-06e6d8333d8d"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[570518, 12223, 176, 3, 36, "Subsubsection",ExpressionUUID->"74620905-dd57-4d4d-a834-323f73f62821"],
Cell[570697, 12228, 2001, 55, 175, "Input",ExpressionUUID->"f1953aa2-9065-45d1-8aee-6f22ca4950b4"],
Cell[CellGroupData[{
Cell[572723, 12287, 273, 5, 48, "Input",ExpressionUUID->"de27083c-a898-4c17-91c7-fedd597b37aa"],
Cell[572999, 12294, 664, 15, 81, "Output",ExpressionUUID->"f9900d3c-7b22-400c-8336-4befde22274a"],
Cell[573666, 12311, 1986, 51, 32, "Output",ExpressionUUID->"33e32a41-3903-4213-8f26-b6008e03dfc9"]
}, Open  ]],
Cell[575667, 12365, 3545, 85, 398, "Input",ExpressionUUID->"7d381c73-9d7a-442d-a244-081090e55b5b"],
Cell[579215, 12452, 248, 6, 28, "Input",ExpressionUUID->"c39ae243-f755-477f-baee-7d6f75b97a76"],
Cell[CellGroupData[{
Cell[579488, 12462, 240, 5, 28, "Input",ExpressionUUID->"0b571a82-1a7b-4d91-b8ce-b20efa1ef3da"],
Cell[579731, 12469, 116081, 2722, 1603, "Output",ExpressionUUID->"f6994de5-93ec-438f-9a50-cea5724aceb5"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[695861, 15197, 177, 3, 36, "Subsubsection",ExpressionUUID->"35617332-8bbf-4af2-8cc4-419a2a5557ca"],
Cell[CellGroupData[{
Cell[696063, 15204, 346, 7, 45, "Input",ExpressionUUID->"08bce6cd-cd70-460e-9b0f-c4e151d428c0"],
Cell[696412, 15213, 53352, 1072, 88, "Output",ExpressionUUID->"11db02f3-fb69-4784-b877-f735e9be0645"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

