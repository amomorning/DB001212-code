(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1313250,      25717]
NotebookOptionsPosition[   1283738,      25220]
NotebookOutlinePosition[   1284112,      25236]
CellTagsIndexPosition[   1284069,      25233]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Neural Networks", "Section",
 CellChangeTimes->{{3.8196007647251124`*^9, 
  3.8196007895599785`*^9}},ExpressionUUID->"8e6de6da-88d2-459e-9960-\
595b98043366"],

Cell[CellGroupData[{

Cell["predict a number from numbers", "Subsection",
 CellChangeTimes->{{3.8196007948000026`*^9, 
  3.8196008066365333`*^9}},ExpressionUUID->"b5fe443c-8ca0-43d1-a659-\
8e84c38c7eb2"],

Cell[CellGroupData[{

Cell["1\tprepare datasets", "Subsubsection",
 CellChangeTimes->{{3.8196008125650887`*^9, 3.8196008176623693`*^9}, {
  3.8196062642401237`*^9, 
  3.8196062661150827`*^9}},ExpressionUUID->"08c69ad4-661a-46fe-bedf-\
981af4b43898"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Batch", "[", "n_", "]"}], ":=", 
  RowBox[{"Thread", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"#", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Plus", "@@", "#"}], "}"}]}], "&"}], "/@", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{"10", ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "2"}], "}"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.819600542429883*^9, 3.819600542433455*^9}},
 CellLabel->"In[12]:=",ExpressionUUID->"30b0656e-17be-4bcc-a96c-771b2bcd27b9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataT", "=", 
   RowBox[{"Batch", "@", "300"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataV", "=", 
   RowBox[{"Batch", "@", "10"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8196005475701804`*^9, 3.8196005836554384`*^9}, 
   3.8196021311420827`*^9},
 CellLabel->"In[13]:=",ExpressionUUID->"128af95b-e631-4408-a260-cc1d3cae23f2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["2\tsetup a network", "Subsubsection",
 CellChangeTimes->{{3.8196008252520432`*^9, 3.8196008314269705`*^9}, {
  3.8196062675714684`*^9, 
  3.81960626816183*^9}},ExpressionUUID->"5f324979-5acc-4470-b048-\
dca0b8a5f201"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"net", "=", 
   RowBox[{"NetInitialize", "@", 
    RowBox[{"NetChain", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2", ",", "Ramp", ",", "1"}], "}"}], ",", 
      RowBox[{"\"\<Input\>\"", "\[Rule]", 
       RowBox[{"{", "2", "}"}]}], ",", 
      RowBox[{"\"\<Output\>\"", "\[Rule]", 
       RowBox[{"{", "1", "}"}]}]}], "]"}]}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8196005872139735`*^9, 3.819600675734063*^9}, {
  3.8196021617329006`*^9, 3.819602186849592*^9}, {3.8196022759343953`*^9, 
  3.819602277986991*^9}, {3.8196023349619346`*^9, 3.819602336039522*^9}, {
  3.8196828785823803`*^9, 3.819682896425745*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"1e720467-1d3d-4823-8d87-85c66a359354"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["3", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{2, 2}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{2}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {2}, "$OutputSize" -> 2, 
                    "$InputSize" -> 2, "$InputDimensions" -> {2}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {2}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1, 2}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 2, "$InputDimensions" -> {2}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8196006781770105`*^9, {3.819602177068678*^9, 3.819602187498065*^9}, 
   3.819602278523378*^9, 3.819602336834324*^9, {3.8196828745650687`*^9, 
   3.8196828977844343`*^9}, 3.8196882290561776`*^9, 3.819689012461626*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"e38c4356-c48a-457e-849c-22607daa3f2c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"net", "[", 
  RowBox[{"{", 
   RowBox[{"3", ",", "4"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8196006860364285`*^9, 3.81960068925728*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"13978a19-bd48-44af-a89e-13eb1cd5137f"],

Cell[BoxData[
 RowBox[{"{", "0.11721812188625336`", "}"}]], "Output",
 CellChangeTimes->{3.819600689589511*^9, 3.819602195525999*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"cd31d837-0f1c-4104-9ddb-93b572459908"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NetExtract", "[", 
   RowBox[{"net", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "\"\<Weights\>\""}], "}"}]}], "]"}], "//", 
  "Normal"}]], "Input",
 CellChangeTimes->{{3.819600718076307*^9, 3.8196007436631346`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"511f58df-3c3d-425f-95ef-1d159978260d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.8116529583930969`"}], ",", "0.6914356350898743`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.33080780506134033`", ",", 
     RowBox[{"-", "0.1072593405842781`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.819600733975217*^9, 3.819600744078204*^9}},
 CellLabel->"Out[10]=",ExpressionUUID->"2c2ce34f-2b8e-4791-8d49-8154f2cab859"]
}, Closed]],

Cell["what is a linear layer?", "Text",
 CellChangeTimes->{{3.819600872201271*^9, 
  3.8196008796821356`*^9}},ExpressionUUID->"b47a5d68-87ec-4efa-b500-\
025731a9d906"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"linear", "=", 
  RowBox[{"NetInitialize", "@", 
   RowBox[{"LinearLayer", "[", 
    RowBox[{"5", ",", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"{", "3", "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.819600887119678*^9, 3.819600946477316*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"a75b2513-dd4c-47a2-b5ca-a08b716468dd"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["LinearLayer", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {18., {0., 18.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[
               
               GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {1.5, 1}, {1, 
                 0}}, {{
                  Opacity[0.3], 
                  LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 4}}]}, {
                  RGBColor[0.33, 0.33, 0.33], 
                  AbsolutePointSize[5], 
                  PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"5\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}}, BaselinePosition -> Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {18., {0., 18.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[
               
               GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {1.5, 1}, {1, 
                 0}}, {{
                  Opacity[0.3], 
                  LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 4}}]}, {
                  RGBColor[0.33, 0.33, 0.33], 
                  AbsolutePointSize[5], 
                  PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37], 
              GridBox[{{
                 ItemBox[
                  StyleBox["Parameters", FontWeight -> Bold]], 
                 ItemBox[""]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Output dimensions\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox[
                  
                  TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"5\""}, 
                   "RowWithSeparators"], "SummaryItem"]}, {
                 ItemBox[
                  StyleBox["Arrays", FontWeight -> Bold], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]], 
                 ItemBox[
                  StyleBox[
                   
                   GraphicsBox[{}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline), 
                    ImageSize -> {1, 11}], CacheGraphics -> False], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]]}, {
                 StyleBox[
                  TemplateBox[{"\"Weights\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"5\"", "\"3\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Biases\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"5\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 ItemBox[
                  StyleBox["Ports", FontWeight -> Bold], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]], 
                 ItemBox[
                  StyleBox[
                   
                   GraphicsBox[{}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline), 
                    ImageSize -> {1, 11}], CacheGraphics -> False], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]]}, {
                 StyleBox[
                  TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"5\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("LinearLayer[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.819600916295873*^9, 3.8196009468721*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"02e54ef0-9c7e-4fd9-b4e4-8b9280b2c82a"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"linear", "[", 
  RowBox[{"{", 
   RowBox[{".1", ",", ".2", ",", ".3"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8196009232870436`*^9, 3.8196009312403126`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"70db38bc-9134-4bc0-b4aa-4310949f09ea"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.1105661690235138`", ",", "0.020807065069675446`", ",", 
   "0.10675114393234253`", ",", "0.12883920967578888`", ",", 
   "0.04222479462623596`"}], "}"}]], "Output",
 CellChangeTimes->{{3.8196009319128447`*^9, 3.819600949126949*^9}},
 CellLabel->"Out[14]=",ExpressionUUID->"41fa3be4-fc40-4cea-89a4-4e4b90012528"]
}, Closed]],

Cell["\<\
or extract it from the net model, the first layer has two node\
\>", "Text",
 CellChangeTimes->{{3.819600971474393*^9, 3.819600981603979*^9}, {
  3.819601029972315*^9, 
  3.819601036880477*^9}},ExpressionUUID->"660822b3-9112-4e40-b6d9-\
0b22b20200e8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NetExtract", "[", 
  RowBox[{"net", ",", "1"}], "]"}]], "Input",
 CellChangeTimes->{{3.8196009875520515`*^9, 3.81960099664787*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"69e9c136-b2b3-4b1f-bc1c-e026aa0d4bb6"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["LinearLayer", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {18., {0., 18.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[
               
               GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {1.5, 1}, {1, 
                 0}}, {{
                  Opacity[0.3], 
                  LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 4}}]}, {
                  RGBColor[0.33, 0.33, 0.33], 
                  AbsolutePointSize[5], 
                  PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}}, BaselinePosition -> Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {18., {0., 18.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[
               
               GraphicsComplexBox[{{0, 0}, {-0.5, 1}, {0.5, 1}, {1.5, 1}, {1, 
                 0}}, {{
                  Opacity[0.3], 
                  LineBox[{{1, 2}, {1, 3}, {1, 4}, {5, 2}, {5, 3}, {5, 4}}]}, {
                  RGBColor[0.33, 0.33, 0.33], 
                  AbsolutePointSize[5], 
                  PointBox[{1, 5, 2, 3, 4}]}}], ImageSize -> 37], 
              GridBox[{{
                 ItemBox[
                  StyleBox["Parameters", FontWeight -> Bold]], 
                 ItemBox[""]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Output dimensions\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox[
                  
                  TemplateBox[{"\[Cross]", "\"\[Cross]\"", "\"2\""}, 
                   "RowWithSeparators"], "SummaryItem"]}, {
                 ItemBox[
                  StyleBox["Arrays", FontWeight -> Bold], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]], 
                 ItemBox[
                  StyleBox[
                   
                   GraphicsBox[{}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline), 
                    ImageSize -> {1, 11}], CacheGraphics -> False], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]]}, {
                 StyleBox[
                  TemplateBox[{"\"Weights\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"2\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Biases\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 ItemBox[
                  StyleBox["Ports", FontWeight -> Bold], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]], 
                 ItemBox[
                  StyleBox[
                   
                   GraphicsBox[{}, 
                    BaselinePosition -> (Scaled[0.] -> Baseline), 
                    ImageSize -> {1, 11}], CacheGraphics -> False], 
                  Frame -> {{False, False}, {False, True}}, FrameStyle -> 
                  GrayLevel[0.85]]}, {
                 StyleBox[
                  TemplateBox[{"\"Input\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("LinearLayer[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.819600997195364*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"223478b6-b44e-4d16-ac00-20a4fa98b709"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NetExtract", "[", 
   RowBox[{"net", ",", "1"}], "]"}], "@", 
  RowBox[{"{", 
   RowBox[{"3", ",", "4"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.819601008284401*^9, 3.8196010173057537`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"73d4f0ed-679a-4839-b2c5-a8d697da8973"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.3307836055755615`", ",", "0.563386082649231`"}], "}"}]], "Output",
 CellChangeTimes->{3.8196010177531967`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"b12601be-fd82-4147-8018-768118c10d2f"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3\ttrain and validate", "Subsubsection",
 CellChangeTimes->{{3.819600841689805*^9, 3.8196008502621527`*^9}, {
  3.8196062691627584`*^9, 
  3.819606270317413*^9}},ExpressionUUID->"0b05e136-73cc-466b-a0e3-\
e6100ee7085d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"netT", "=", 
  RowBox[{"NetTrain", "[", 
   RowBox[{"net", ",", "dataT", ",", "All", ",", 
    RowBox[{"ValidationSet", "\[Rule]", "dataV"}], ",", 
    RowBox[{"TargetDevice", "\[Rule]", "\"\<GPU\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8196011453147025`*^9, 3.81960116336472*^9}, {
  3.8196829021376715`*^9, 3.819682904315509*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"789b1914-b102-4928-8a2d-716927c1e8d5"],

Cell[BoxData[
 FrameBox[GridBox[{
    {
     ItemBox[
      FrameBox[
       StyleBox["\<\"NetTrain Results\"\>", "SuggestionsBarText",
        StripOnInput->False,
        FontSize->12],
       FrameMargins->{{10, 5}, {-4, 2}},
       FrameStyle->None,
       StripOnInput->False],
      Alignment->{Left, Bottom},
      Background->RGBColor[0.96, 0.96, 0.96],
      Frame->{{False, False}, {True, False}},
      FrameStyle->Opacity[0.1],
      ItemSize->{Automatic, 1},
      StripOnInput->False]},
    {
     ItemBox[
      TagBox[
       FrameBox[
        TagBox[GridBox[{
           {
            TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox["\"summary\"", 
               GrayLevel[0.4], StripOnInput -> False]},
             "RowDefault"], 
            
            TemplateBox[{
             ",","\",\"",
              TemplateBox[{"\[ThinSpace]", "\" \"", "\"batches:\"", "10480"}, 
               "RowWithSeparators"],
              TemplateBox[{"\[ThinSpace]", "\" \"", "\"rounds:\"", "2096"}, 
               "RowWithSeparators"],
              TemplateBox[{"\[ThinSpace]", "\" \"", "\"time:\"", "\"17s\""}, 
               "RowWithSeparators"],
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"examples/s:\"", "40449"}, 
               "RowWithSeparators"]},
             "RowWithSeparators"]},
           {
            TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox["\"data\"", 
               GrayLevel[0.4], StripOnInput -> False]},
             "RowDefault"], 
            
            TemplateBox[{
             ",","\",\"",
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"training examples:\"", "300"}, 
               "RowWithSeparators"],
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"validation examples:\"", "10"}, 
               "RowWithSeparators"],
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"processed examples:\"", "670720"}, 
               "RowWithSeparators"],
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"skipped examples:\"", "0"}, 
               "RowWithSeparators"]},
             "RowWithSeparators"]},
           {
            TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox["\"method\"", 
               GrayLevel[0.4], StripOnInput -> False]},
             "RowDefault"], 
            
            TemplateBox[{
             ",","\",\"",
              TemplateBox[{
               "\[ThinSpace]", "\" \"", "\"ADAM\"", "\"optimizer\""}, 
               "RowWithSeparators"],
              TemplateBox[{"\[ThinSpace]", "\" \"", "\"batch size\"", "64"}, 
               "RowWithSeparators"],"\"GPU\""},
             "RowWithSeparators"]},
           {
            TemplateBox[{TemplateBox[{5}, "Spacer1"],StyleBox["\"round\"", 
               GrayLevel[0.4], StripOnInput -> False]},
             "RowDefault"], 
            TemplateBox[{",","\",\"",TemplateBox[{"\[ThinSpace]", "\" \"", 
                TagBox[
                 TooltipBox["\"loss:\"", 
                  TagBox[
                   GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"loss\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]], Annotation[#, 
                  Column[{
                    Row[{"Measurement: ", "loss"}]}], "Tooltip"]& ], 
                TagBox[
                 InterpretationBox[
                  RowBox[{"\"8.18\"", "\[Times]", 
                    SuperscriptBox["10", "\"-4\""]}], 0.000818499660812222, 
                  AutoDelete -> True], ScientificForm[#, 3]& ]}, 
               "RowWithSeparators"]},
             "RowWithSeparators"]},
           {
            
            TemplateBox[{
             TemplateBox[{5}, "Spacer1"],StyleBox["\"validation\"", 
               GrayLevel[0.4], StripOnInput -> False]},
             "RowDefault"], 
            TemplateBox[{",","\",\"",TemplateBox[{"\[ThinSpace]", "\" \"", 
                TagBox[
                 TooltipBox["\"loss:\"", 
                  TagBox[
                   GridBox[{{
                    
                    TemplateBox[{"\"Measurement: \"", "\"loss\""}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]], Annotation[#, 
                  Column[{
                    Row[{"Measurement: ", "loss"}]}], "Tooltip"]& ], 
                TagBox[
                 InterpretationBox[
                  RowBox[{"\"1.32\"", "\[Times]", 
                    SuperscriptBox["10", "\"-5\""]}], 
                  0.000013182347993279109`, AutoDelete -> True], 
                 ScientificForm[#, 3]& ]}, "RowWithSeparators"]},
             "RowWithSeparators"]},
           {
            ItemBox[GridBox[{
               {"", 
                ItemBox["\<\"rounds\"\>",
                 DefaultBaseStyle->"LabeledLabel"]},
               {
                RotationBox[
                 ItemBox["\<\"loss\"\>",
                  DefaultBaseStyle->"LabeledLabel"],
                 BoxRotation->1.5708], 
                GraphicsBox[
                 {AbsoluteThickness[1.25], {
                   {Hue[0.083, 1., 1.], LineBox[CompressedData["
1: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
                    "]]}, {}}, {
                   {Hue[0.59, 0.7, 0.75], LineBox[CompressedData["
1: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
                    "]]}, {}}},
                 AspectRatio->Full,
                 Axes->None,
                 Background->GrayLevel[1],
                 
                 BaseStyle->{
                  FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                   GrayLevel[0.5], ScriptSizeMultipliers -> 0.2, 
                   ScriptMinSize -> 6},
                 Frame->True,
                 FrameStyle->GrayLevel[0.5],
                 FrameTicks->None,
                 GridLines->{{500., 1000., 1500., 2000., 2500., 3000.}, {{-9., 
                    GrayLevel[0.3001]}, {-8., 
                    GrayLevel[0.3001]}, {-7., 
                    GrayLevel[0.3001]}, {-6., 
                    GrayLevel[0.3001]}, {-5., 
                    GrayLevel[0.3001]}, {-4., 
                    GrayLevel[0.3001]}, {-3., 
                    GrayLevel[0.3001]}, {-2., 
                    GrayLevel[0.3001]}, {-1., 
                    GrayLevel[0.3001]}, {0., 
                    GrayLevel[0.3001]}, {1., 
                    GrayLevel[0.3001]}, {2., 
                    GrayLevel[0.3001]}}},
                 ImagePadding->1,
                 ImageSize->{302, 182.},
                 PlotRange->{{0, 2096.1}, {-8.612, 2.8120000000000003`}},
                 PlotRangeClipping->True,
                 PlotRangePadding->None,
                 Prolog->{{
                    InsetBox[
                    FormBox["500", TraditionalForm], 
                    Offset[{-2, -2}, {500., 2.8120000000000003`}], {1., 1.}], 
                    InsetBox[
                    FormBox["1000", TraditionalForm], 
                    Offset[{-2, -2}, {1000., 2.8120000000000003`}], {1., 1.}], 
                    InsetBox[
                    FormBox["1500", TraditionalForm], 
                    Offset[{-2, -2}, {1500., 2.8120000000000003`}], {1., 1.}], 
                    InsetBox[
                    FormBox["2000", TraditionalForm], 
                    Offset[{-2, -2}, {2000., 2.8120000000000003`}], {1., 1.}], 
                    InsetBox[
                    FormBox["2500", TraditionalForm], 
                    Offset[{-2, -2}, {2500., 2.8120000000000003`}], {1., 1.}], 
                    InsetBox[
                    FormBox["3000", TraditionalForm], 
                    Offset[{-2, -2}, {3000., 2.8120000000000003`}], {1., 
                    1.}]}, {
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "\"-8\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, -8.}], {-1, -1.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "\"-7\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, -7.}], {-1, -1.}], 
                    InsetBox[
                    FormBox[
                    TemplateBox[{"10", "\"-6\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, -6.}], {-1, -1.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "\"-5\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, -5.}], {-1, -1.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "\"-4\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, -4.}], {-1, -1.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "\"-3\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, -3.}], {-1, -1.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "\"-2\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, -2.}], {-1, -1.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "\"-1\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, -1.}], {-1, -1.}], 
                    InsetBox[
                    FormBox["\"1\"", TraditionalForm], 
                    Offset[{3, 0}, {0, 0.}], {-1, -1.}], 
                    InsetBox[
                    FormBox["\"10\"", TraditionalForm], 
                    Offset[{3, 0}, {0, 1.}], {-1, -1.}], 
                    InsetBox[
                    FormBox[
                    
                    TemplateBox[{"10", "\"2\""}, "Superscript", SyntaxForm -> 
                    SuperscriptBox], TraditionalForm], 
                    Offset[{3, 0}, {0, 2.}], {-1, -1.}]}}]}
              },
              
              BaseStyle->{
               FontFamily -> "Verdana", FontSize -> 8, FontColor -> 
                GrayLevel[0.4]},
              
              GridBoxAlignment->{
               "Columns" -> {{Center}}, "Rows" -> {{Center}}},
              GridBoxSpacings->{"Columns" -> {{0.5}}}],
             Alignment->Center,
             StripOnInput->False], "\[SpanFromLeft]"},
           {
            ItemBox[
             StyleBox[
              RowBox[{
               GraphicsBox[{},
                Axes->None,
                Background->Hue[0.083, 1., 1.],
                ImagePadding->{{0, 0}, {5, 2}},
                ImageSize->{13, 1}], "  ", "\<\"training set\"\>", "\t", 
               GraphicsBox[{},
                Axes->None,
                Background->Hue[0.59, 0.7, 0.75],
                ImagePadding->{{0, 0}, {5, 2}},
                ImageSize->{13, 1}], "  ", "\<\"validation set\"\>"}],
              FontFamily->"Verdana",
              FontSize->8,
              FontColor->GrayLevel[0.4]],
             Alignment->Center,
             StripOnInput->False], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          ColumnsEqual->False,
          
          GridBoxAlignment->{
           "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
          GridBoxDividers->{"Columns" -> {False, {
               Opacity[0.15]}, False}},
          GridBoxItemSize->{"Columns" -> {8, {26}}, "Rows" -> {{1.}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], 
              Offset[1.1199999999999999`], {
               Offset[1.75]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.8]}, 
              Offset[0.2]}}],
         "Grid"],
        FrameMargins->{{10, 10}, {10, 5}},
        FrameStyle->None,
        StripOnInput->False],
       Deploy,
       DefaultBaseStyle->"Deploy"],
      Alignment->Center,
      BaseStyle->{
       FontWeight -> "Light", FontSize -> 11, FontFamily -> "Segoe UI", 
        NumberMarks -> False, Deployed -> False},
      StripOnInput->False]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.5599999999999999]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], 
       Offset[0.8], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Background->GrayLevel[1],
  FrameMargins->{{0, 0}, {0, 0}},
  FrameStyle->GrayLevel[0.85],
  RoundingRadius->5,
  StripOnInput->False]], "Output",
 CellChangeTimes->{3.819601173773655*^9, 3.819601245032999*^9, 
  3.8196020891125507`*^9, 3.8196022294418063`*^9, 3.819602316315316*^9, 
  3.8196023704607964`*^9, 3.8196835845544405`*^9, 3.8196876967966213`*^9, 
  3.8196880896198597`*^9, 3.8196881993877687`*^9, 3.819688266809716*^9, 
  3.81968832332152*^9, 3.8196889271372557`*^9, 3.819689035901118*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"410e6941-3b7c-4e77-9824-7a90fe8934c6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"netT", "[", "\"\<LossPlot\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"netT", "[", "\"\<RoundMeasurements\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"netF", "=", 
  RowBox[{"netT", "[", "\"\<TrainedNet\>\"", "]"}]}]}], "Input",
 CellChangeTimes->{{3.8196012729753957`*^9, 3.819601272977395*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"a104bb69-40fd-4078-a3ab-a18231d3859b"],

Cell[BoxData[
 TemplateBox[{GridBox[{{"", 
      ItemBox["\"rounds\"", DefaultBaseStyle -> "LabeledLabel"]}, {
      RotationBox[
       ItemBox["\"loss\"", DefaultBaseStyle -> "LabeledLabel"], BoxRotation -> 
       1.5708], 
      GraphicsBox[{
        AbsoluteThickness[1.25], {{
          Hue[0.083, 1., 1.], 
          LineBox[CompressedData["
1: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
           "]]}, {}}, {{
          Hue[0.59, 0.7, 0.75], 
          LineBox[CompressedData["
1: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
           "]]}, {}}}, Prolog -> {{
          InsetBox[
           FormBox["500", TraditionalForm], 
           Offset[{-2, -2}, {500., 2.8120000000000003`}], {1., 1.}], 
          InsetBox[
           FormBox["1000", TraditionalForm], 
           Offset[{-2, -2}, {1000., 2.8120000000000003`}], {1., 1.}], 
          InsetBox[
           FormBox["1500", TraditionalForm], 
           Offset[{-2, -2}, {1500., 2.8120000000000003`}], {1., 1.}], 
          InsetBox[
           FormBox["2000", TraditionalForm], 
           Offset[{-2, -2}, {2000., 2.8120000000000003`}], {1., 1.}], 
          InsetBox[
           FormBox["2500", TraditionalForm], 
           Offset[{-2, -2}, {2500., 2.8120000000000003`}], {1., 1.}], 
          InsetBox[
           FormBox["3000", TraditionalForm], 
           Offset[{-2, -2}, {3000., 2.8120000000000003`}], {1., 1.}]}, {
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-8\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -8.}], {-1, -1.}], 
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-7\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -7.}], {-1, -1.}], 
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-6\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -6.}], {-1, -1.}], 
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-5\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -5.}], {-1, -1.}], 
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-4\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -4.}], {-1, -1.}], 
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-3\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -3.}], {-1, -1.}], 
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-2\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -2.}], {-1, -1.}], 
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-1\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -1.}], {-1, -1.}], 
          InsetBox[
           FormBox["\"1\"", TraditionalForm], 
           Offset[{3, 0}, {0, 0.}], {-1, -1.}], 
          InsetBox[
           FormBox["\"10\"", TraditionalForm], 
           Offset[{3, 0}, {0, 1.}], {-1, -1.}], 
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"2\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, 2.}], {-1, -1.}]}}, 
       PlotRange -> {{0, 2096.1}, {-8.612, 2.8120000000000003`}}, 
       ImageSize -> {302, 182.}, 
       GridLines -> {{500., 1000., 1500., 2000., 2500., 3000.}, {{-9., 
           GrayLevel[0.3001]}, {-8., 
           GrayLevel[0.3001]}, {-7., 
           GrayLevel[0.3001]}, {-6., 
           GrayLevel[0.3001]}, {-5., 
           GrayLevel[0.3001]}, {-4., 
           GrayLevel[0.3001]}, {-3., 
           GrayLevel[0.3001]}, {-2., 
           GrayLevel[0.3001]}, {-1., 
           GrayLevel[0.3001]}, {0., 
           GrayLevel[0.3001]}, {1., 
           GrayLevel[0.3001]}, {2., 
           GrayLevel[0.3001]}}}, Frame -> True, Axes -> None, AspectRatio -> 
       Full, BaseStyle -> {
        FontFamily -> "Verdana", FontSize -> 8, FontColor -> GrayLevel[0.5], 
         ScriptSizeMultipliers -> 0.2, ScriptMinSize -> 6}, PlotRangePadding -> 
       None, PlotRangeClipping -> True, Background -> GrayLevel[1], 
       FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, FrameTicks -> None]}},
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    GridBoxSpacings -> {"Columns" -> {{0.5}}}, 
    BaseStyle -> {
     FontFamily -> "Verdana", FontSize -> 8, FontColor -> GrayLevel[0.4]}],
   FormBox[
    TemplateBox[{"\"validation\"", "\"training\""}, "LineLegend", 
     DisplayFunction -> (FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.59, 0.7, 0.75]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.59, 0.7, 0.75]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.083, 1., 1.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.083, 1., 1.]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}],
                "Grid"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
           "Grid"], Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
        Background -> Automatic, StripOnInput -> False], TraditionalForm]& ), 
     InterpretationFunction :> (RowBox[{"LineLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.59, 0.7, 0.75], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> Hue[0.59, 0.7, 0.5], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 StyleBox[
                  RowBox[{"Hue", "[", 
                    RowBox[{"0.59`", ",", "0.7`", ",", "0.75`"}], "]"}], 
                  NumberMarks -> False]], Appearance -> None, BaseStyle -> {},
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.59, 0.7, 0.75]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Hue[0.59, 0.7, 0.75], Editable -> False, Selectable -> False], 
              ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.083, 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> Hue[0.083, 1., 0.6666666666666667], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 StyleBox[
                  RowBox[{"Hue", "[", 
                    RowBox[{"0.083`", ",", "1.`", ",", "1.`"}], "]"}], 
                  NumberMarks -> False]], Appearance -> None, BaseStyle -> {},
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.083, 1., 1.]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Hue[0.083, 1., 1.], Editable -> False, Selectable -> False]}], 
            "}"}], ",", 
          RowBox[{"{", 
            RowBox[{#, ",", #2}], "}"}]}], "]"}]& ), Editable -> True], 
    TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.819601273991923*^9, 3.8196022343330464`*^9, 
  3.819602324955262*^9, 3.8196023782954273`*^9, 3.819689045211943*^9},
 CellLabel->"Out[17]=",ExpressionUUID->"008c85e5-3f78-4595-9cfe-8e2c8be39413"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"Loss\"\>", "\[Rule]", "0.000818499660812222`"}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.819601273991923*^9, 3.8196022343330464`*^9, 
  3.819602324955262*^9, 3.8196023782954273`*^9, 3.81968904527067*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"5920730e-cc9f-40f5-ba69-c6ffeb2d1296"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["3", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{2, 2}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{2}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {2}, "$OutputSize" -> 2, 
                    "$InputSize" -> 2, "$InputDimensions" -> {2}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {2}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1, 2}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 2, "$InputDimensions" -> {2}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.819601273991923*^9, 3.8196022343330464`*^9, 
  3.819602324955262*^9, 3.8196023782954273`*^9, 3.819689045291127*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"167481c2-7e81-4391-a4e2-a72c1456b912"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"n", "=", "4"}], "\[IndentingNewLine]", 
 RowBox[{"dataV", "[", 
  RowBox[{"[", "n", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"net", "[", 
  RowBox[{"dataV", "[", 
   RowBox[{"[", 
    RowBox[{"n", ",", "1"}], "]"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"netF", "[", 
  RowBox[{"dataV", "[", 
   RowBox[{"[", 
    RowBox[{"n", ",", "1"}], "]"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.819601181691183*^9, 3.8196011964188833`*^9}, 
   3.8196013396704597`*^9, {3.819602240044362*^9, 3.819602269733777*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"ab025af3-1635-415a-a26f-9a975c18c25f"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{{3.819601186676189*^9, 3.8196011969344597`*^9}, 
   3.8196012513653636`*^9, 3.819601340402465*^9, {3.819602255246869*^9, 
   3.819602270211894*^9}, 3.819602328778012*^9, 3.819602380817031*^9, 
   3.8196890489549303`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"6491fd13-8fc2-4f67-97b1-1cca0fb39ab2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"4", ",", "5"}], "}"}], "\[Rule]", 
  RowBox[{"{", "9", "}"}]}]], "Output",
 CellChangeTimes->{{3.819601186676189*^9, 3.8196011969344597`*^9}, 
   3.8196012513653636`*^9, 3.819601340402465*^9, {3.819602255246869*^9, 
   3.819602270211894*^9}, 3.819602328778012*^9, 3.819602380817031*^9, 
   3.819689048959961*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"189a731b-7913-427b-9830-56fd8fb7cf2a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"-", "2.0342698097229004`"}], "}"}]], "Output",
 CellChangeTimes->{{3.819601186676189*^9, 3.8196011969344597`*^9}, 
   3.8196012513653636`*^9, 3.819601340402465*^9, {3.819602255246869*^9, 
   3.819602270211894*^9}, 3.819602328778012*^9, 3.819602380817031*^9, 
   3.8196890490301127`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"191a9530-22c9-4375-9614-5ad4c9f329e3"],

Cell[BoxData[
 RowBox[{"{", "8.99994945526123`", "}"}]], "Output",
 CellChangeTimes->{{3.819601186676189*^9, 3.8196011969344597`*^9}, 
   3.8196012513653636`*^9, 3.819601340402465*^9, {3.819602255246869*^9, 
   3.819602270211894*^9}, 3.819602328778012*^9, 3.819602380817031*^9, 
   3.819689049038111*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"f1bcb19f-a4a0-4794-a174-688bf1f3fffb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NetExtract", "[", 
   RowBox[{
    RowBox[{"NetExtract", "[", 
     RowBox[{"netF", ",", "1"}], "]"}], ",", "\"\<Weights\>\""}], "]"}], "//",
   "Normal"}]], "Input",
 CellChangeTimes->{{3.819601378528463*^9, 3.819601474150118*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"9ec15bfc-aa66-489e-9566-b3a21b33c8af"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.016345296055078506`", ",", "1.2069209814071655`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.1931942701339722`", ",", "0.3978483974933624`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8196014027775965`*^9, 3.8196014748327084`*^9}},
 CellLabel->"Out[40]=",ExpressionUUID->"84ff3390-d4a8-45e7-86c8-c2c6c58f9fde"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["assigning a class to a number", "Subsection",
 CellChangeTimes->{{3.819602390035182*^9, 
  3.819602404511332*^9}},ExpressionUUID->"0896ffe6-b445-42e6-b5a6-\
e792f0b453fe"],

Cell[CellGroupData[{

Cell["1\tprepare datasets", "Subsubsection",
 CellChangeTimes->{{3.819602414376995*^9, 3.8196024185884323`*^9}, {
  3.819606271802677*^9, 
  3.819606272049299*^9}},ExpressionUUID->"f7092fc2-e344-4b64-8718-\
9c5aa11d3362"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Batch", "[", "n_", "]"}], ":=", 
  RowBox[{"Replace", "[", 
   RowBox[{
    RowBox[{"RandomInteger", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "10"}], ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", "1"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a_", "/;", 
         RowBox[{"a", ">", "0"}]}], "}"}], "\[RuleDelayed]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"{", "a", "}"}], "\[Rule]", "\"\<PLUS\>\""}], ")"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a_", "/;", 
         RowBox[{"a", "<", "0"}]}], "}"}], "\[RuleDelayed]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"{", "a", "}"}], "\[Rule]", "\"\<MINUS\>\""}], ")"}]}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a_", "/;", 
         RowBox[{"a", "\[Equal]", "0"}]}], "}"}], "\[RuleDelayed]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"{", "a", "}"}], "\[Rule]", "\"\<ZERO\>\""}], ")"}]}]}], 
     "}"}], ",", "All"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.819602421622079*^9, 3.8196024216238823`*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"2a192029-780b-40b5-8389-484d90504caa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Batch", "@", "3"}]], "Input",
 CellChangeTimes->{{3.8196024285540133`*^9, 3.819602428556014*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"173e6acc-6cd0-48ca-a822-5a80c0266e12"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"-", "5"}], "}"}], "\[Rule]", "\<\"MINUS\"\>"}], ",", 
   RowBox[{
    RowBox[{"{", "2", "}"}], "\[Rule]", "\<\"PLUS\"\>"}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"-", "6"}], "}"}], "\[Rule]", "\<\"MINUS\"\>"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8196024291813173`*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"2e8ebdac-20ca-4884-ae79-b76408823d16"]
}, Closed]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataT", "=", 
   RowBox[{"Batch", "@", "100"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataV", "=", 
   RowBox[{"Batch", "@", "10"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8196024359574223`*^9, 3.8196024359594216`*^9}},
 CellLabel->"In[95]:=",ExpressionUUID->"e8eebf0d-2db0-4a49-9445-96d2f52bb8f9"]
}, Closed]],

Cell[CellGroupData[{

Cell["2\tsetup a network", "Subsubsection",
 CellChangeTimes->{{3.819602450986846*^9, 3.8196024538640347`*^9}, {
  3.8196062735881968`*^9, 
  3.8196062738648815`*^9}},ExpressionUUID->"8413b9e7-13b9-45fd-87ff-\
4e79006f2f41"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"net", "=", 
  RowBox[{"NetInitialize", "@", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"6", ",", "Ramp", ",", "3", ",", 
       RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}], ",", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"{", "1", "}"}]}], ",", 
     RowBox[{"\"\<Output\>\"", "\[Rule]", 
      RowBox[{"NetDecoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Class\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<PLUS\>\"", ",", "\"\<MINUS\>\"", ",", "\"\<ZERO\>\""}],
           "}"}]}], "}"}], "]"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8196024714455547`*^9, 3.8196025033265967`*^9}, {
  3.819602621045754*^9, 3.8196026263847046`*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"a3418a7e-7fca-4b1f-99db-9672b7d5559e"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {18., {0., 18.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["4", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {18., {0., 18.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{6, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{6}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {6}, "$OutputSize" -> 6, 
                    "$InputSize" -> 1, "$InputDimensions" -> {1}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{6}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {6}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{6}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{6}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3, 6}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{3}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {3}, "$OutputSize" -> 3, 
                    "$InputSize" -> 6, "$InputDimensions" -> {6}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{6}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {"\"PLUS\"", "\"MINUS\"", "\"ZERO\""}, 
                    "InputDepth" -> 1, "Dimensions" -> 3, "$Rank" -> 0, 
                    "$Version" -> "12.0.11"]]], 
                   NeuralNetworks`Private`NetChain`opart = {
                    "Outputs", "Output"}, 
                   NeuralNetworks`Private`NetChain`part = {
                    "Outputs", "Output"}, 
                   NeuralNetworks`Private`NetChain`selected = 
                   Association[
                    "Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {"\"PLUS\"", "\"MINUS\"", "\"ZERO\""}, 
                    "InputDepth" -> 1, "Dimensions" -> 3, "$Rank" -> 0, 
                    "$Version" -> "12.0.11"]}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"6\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"6\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   ImageSizeCache -> {320., {147.5, 155.5}}, 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.819602503879547*^9, {3.819602621646747*^9, 3.819602633873974*^9}},
 CellLabel->
  "Out[104]=",ExpressionUUID->"87bb283d-bd22-42cc-86ae-696bf0518a39"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NetExtract", "[", 
   RowBox[{"net", ",", "4"}], "]"}], "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "0.24748778343200684"}], ",", 
    RowBox[{"-", "0.3324894607067108"}], ",", "0.09656712412834167"}], "}"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.819602519076912*^9, 3.819602522915284*^9}, {
  3.8196025834345794`*^9, 3.8196026002802773`*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"0dabb395-7c66-46b5-9e98-b7c7ccedbad5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.30037546157836914`", ",", "0.2758980989456177`", ",", 
   "0.42372646927833557`"}], "}"}]], "Output",
 CellChangeTimes->{3.819602523419874*^9, 3.8196026024744015`*^9, 
  3.8196026363185825`*^9},
 CellLabel->
  "Out[105]=",ExpressionUUID->"c4fa456a-109f-493f-bc36-4330bbc20f3b"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NetTake", "[", 
   RowBox[{"net", ",", "3"}], "]"}], "[", 
  RowBox[{"{", "4", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.819602550107573*^9, 3.819602574418825*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"9d3f96d4-9854-4da2-800c-dfbdfd104945"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.24748778343200684`"}], ",", 
   RowBox[{"-", "0.3324894607067108`"}], ",", "0.09656712412834167`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.819602553816736*^9, 3.8196025750868535`*^9}, 
   3.8196026382743483`*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"a8b69154-a76b-452e-9d2a-fbf22c3c88c9"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NetExtract", "[", 
   RowBox[{"net", ",", "\"\<Output\>\""}], "]"}], "[", 
  RowBox[{"{", 
   RowBox[{
   "0.30037546157836914`", ",", "0.2758980989456177`", ",", 
    "0.42372646927833557`"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8196026554637823`*^9, 3.8196026775882664`*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"c97ba6e3-4bfa-462b-8413-264a4a4f3241"],

Cell[BoxData["\<\"ZERO\"\>"], "Output",
 CellChangeTimes->{{3.8196026630202045`*^9, 3.8196026780336113`*^9}},
 CellLabel->
  "Out[108]=",ExpressionUUID->"c3a80b28-fcbd-4260-b30c-b99c2178d41a"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["3\ttrain and validate", "Subsubsection",
 CellChangeTimes->{{3.81960294221605*^9, 3.8196029471042123`*^9}, {
  3.8196062746503377`*^9, 
  3.8196062748288965`*^9}},ExpressionUUID->"0f13b753-90ee-4a9f-a4fe-\
9dab8548afd3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"netT", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"net", ",", "dataT", ",", "All", ",", 
     RowBox[{"ValidationSet", "\[Rule]", "dataV"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.819602948744609*^9, 3.8196029487466154`*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"1fd9fc4b-e99c-49ab-8148-e9d6200e89d4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"netT", "[", "\"\<LossPlot\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"netT", "[", "\"\<RoundMeasurements\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"netF", "=", 
  RowBox[{"netT", "[", "\"\<TrainedNet\>\"", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"NetMeasurements", "[", 
  RowBox[{"netF", ",", "dataV", ",", "\"\<Accuracy\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"NetMeasurements", "[", 
  RowBox[{"netF", ",", "dataV", ",", "\"\<ConfusionMatrixPlot\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8196029647475348`*^9, 3.8196029647505355`*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"62b30272-4859-45ee-80e1-c8f07ab3a54a"],

Cell[BoxData[
 TemplateBox[{GridBox[{{"", 
      ItemBox["\"rounds\"", DefaultBaseStyle -> "LabeledLabel"]}, {
      RotationBox[
       ItemBox["\"loss\"", DefaultBaseStyle -> "LabeledLabel"], BoxRotation -> 
       1.5708], 
      GraphicsBox[{
        AbsoluteThickness[1.25], {{
          Hue[0.083, 1., 1.], 
          LineBox[CompressedData["
1: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
IUhrb5ZASgn/988qn0qooigHS44S/h8h5leo
           "]]}, {}}, {{
          Hue[0.59, 0.7, 0.75], 
          LineBox[CompressedData["
1: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
lLPR//5ZdaEGjh1WQmuFbPR/f/k/NA==
           "]]}, {}}}, Prolog -> {{
          InsetBox[
           FormBox["2000", TraditionalForm], 
           Offset[{-2, -2}, {2000., 0.964}], {1., 1.}], 
          InsetBox[
           FormBox["4000", TraditionalForm], 
           Offset[{-2, -2}, {4000., 0.964}], {1., 1.}], 
          InsetBox[
           FormBox["6000", TraditionalForm], 
           Offset[{-2, -2}, {6000., 0.964}], {1., 1.}], 
          InsetBox[
           FormBox["8000", TraditionalForm], 
           Offset[{-2, -2}, {8000., 0.964}], {1., 1.}], 
          InsetBox[
           FormBox["10000", TraditionalForm], 
           Offset[{-2, -2}, {10000., 0.964}], {1., 1.}]}, {
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-5\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -5.}], {-1, -1.}], 
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-4\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -4.}], {-1, -1.}], 
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-3\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -3.}], {-1, -1.}], 
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-2\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -2.}], {-1, -1.}], 
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-1\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -1.}], {-1, -1.}], 
          InsetBox[
           FormBox["\"1\"", TraditionalForm], 
           Offset[{3, 0}, {0, 0.}], {-1, -1.}]}}, 
       PlotRange -> {{0, 10000.25}, {-5.564, 0.964}}, 
       ImageSize -> {302, 182.}, 
       GridLines -> {{2000., 4000., 6000., 8000., 10000.}, {{-6., 
           GrayLevel[0.3001]}, {-5., 
           GrayLevel[0.3001]}, {-4., 
           GrayLevel[0.3001]}, {-3., 
           GrayLevel[0.3001]}, {-2., 
           GrayLevel[0.3001]}, {-1., 
           GrayLevel[0.3001]}, {0., 
           GrayLevel[0.3001]}}}, Frame -> True, Axes -> None, AspectRatio -> 
       Full, BaseStyle -> {
        FontFamily -> "Verdana", FontSize -> 8, FontColor -> GrayLevel[0.5], 
         ScriptSizeMultipliers -> 0.2, ScriptMinSize -> 6}, PlotRangePadding -> 
       None, PlotRangeClipping -> True, Background -> GrayLevel[1], 
       FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, FrameTicks -> None]}},
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    GridBoxSpacings -> {"Columns" -> {{0.5}}}, 
    BaseStyle -> {
     FontFamily -> "Verdana", FontSize -> 8, FontColor -> GrayLevel[0.4]}],
   FormBox[
    TemplateBox[{"\"validation\"", "\"training\""}, "LineLegend", 
     DisplayFunction -> (FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.59, 0.7, 0.75]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.59, 0.7, 0.75]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.083, 1., 1.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.083, 1., 1.]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}],
                "Grid"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
           "Grid"], Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
        Background -> Automatic, StripOnInput -> False], TraditionalForm]& ), 
     InterpretationFunction :> (RowBox[{"LineLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.59, 0.7, 0.75], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> Hue[0.59, 0.7, 0.5], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 StyleBox[
                  RowBox[{"Hue", "[", 
                    RowBox[{"0.59`", ",", "0.7`", ",", "0.75`"}], "]"}], 
                  NumberMarks -> False]], Appearance -> None, BaseStyle -> {},
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.59, 0.7, 0.75]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Hue[0.59, 0.7, 0.75], Editable -> False, Selectable -> False], 
              ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.083, 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> Hue[0.083, 1., 0.6666666666666667], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 StyleBox[
                  RowBox[{"Hue", "[", 
                    RowBox[{"0.083`", ",", "1.`", ",", "1.`"}], "]"}], 
                  NumberMarks -> False]], Appearance -> None, BaseStyle -> {},
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.083, 1., 1.]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Hue[0.083, 1., 1.], Editable -> False, Selectable -> False]}], 
            "}"}], ",", 
          RowBox[{"{", 
            RowBox[{#, ",", #2}], "}"}]}], "]"}]& ), Editable -> True], 
    TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.819602986416735*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"e1f819b1-691b-4832-be5e-f8ac9d99195b"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Loss\"\>", "\[Rule]", "9.58018133447383`*^-6"}], ",", 
   RowBox[{"\<\"ErrorRate\"\>", "\[Rule]", "0.`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8196029864492817`*^9},
 CellLabel->
  "Out[111]=",ExpressionUUID->"789717a3-b537-4430-954b-ceecfb42337e"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["4", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{6, 1}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{6}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {6}, "$OutputSize" -> 6, 
                    "$InputSize" -> 1, "$InputDimensions" -> {1}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{6}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {6}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{6}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{6}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3, 6}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{3}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {3}, "$OutputSize" -> 3, 
                    "$InputSize" -> 6, "$InputDimensions" -> {6}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{6}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {"\"PLUS\"", "\"MINUS\"", "\"ZERO\""}, 
                    "InputDepth" -> 1, "Dimensions" -> 3, "$Rank" -> 0, 
                    "$Version" -> "12.0.11"]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"6\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"6\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox["\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.819602986471736*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"dbaba3f5-31ec-45c3-89ce-6fdd7c38c327"],

Cell[BoxData["1.`"], "Output",
 CellChangeTimes->{3.8196029865012703`*^9},
 CellLabel->
  "Out[113]=",ExpressionUUID->"1b9b148f-b039-4ad3-a774-e0cd1970c54b"],

Cell[BoxData[GridBox[{
   {
    RotationBox[
     ItemBox["\<\"actual class\"\>",
      DefaultBaseStyle->"LabeledLabel"],
     BoxRotation->1.5708], 
    GraphicsBox[
     RasterBox[{{{1., 1., 1.}, {1., 1., 1.}, {1., 1., 1.}}, {{1., 1., 1.}, {
      0.22500000000000003`, 0.4665, 0.75}, {1., 1., 1.}}, {{
      0.5479166666666668, 0.6887916666666667, 0.8541666666666667}, {1., 1., 
      1.}, {1., 1., 1.}}}, {{0, 0}, {3, 3}}, {0, 1}],
     Background->GrayLevel[1],
     BaseStyle->Directive[
      FontSize -> 7, FontFamily -> "Verdana", FontWeight -> "Thin", 
       FontTracking -> "Condensed"],
     Epilog->{{
        InsetBox[
         FormBox["4", TraditionalForm], {0.5, 2.5}, {0, 0}]}, {
        InsetBox[
         FormBox["6", TraditionalForm], {1.5, 1.5}, {0, 0}]}, {}},
     Frame->True,
     FrameLabel->{None, None},
     FrameTicks->{{{{2.5, 
          FormBox[
           RotationBox["\"PLUS\"", BoxRotation -> 0.], TraditionalForm]}, {
         1.5, 
          FormBox[
           RotationBox["\"MINUS\"", BoxRotation -> 0.], TraditionalForm]}, {
         0.5, 
          FormBox[
           RotationBox["\"ZERO\"", BoxRotation -> 0.], TraditionalForm]}}, {{
         2.5, 
          FormBox["4", TraditionalForm]}, {1.5, 
          FormBox["6", TraditionalForm]}, {0.5, 
          FormBox["0", TraditionalForm]}}}, {{{0.5, 
          FormBox[
           RotationBox["4", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1.5, 
          FormBox[
           RotationBox["6", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {2.5, 
          FormBox[
           RotationBox["0", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}}, {{0.5, 
          FormBox[
           RotationBox["\"PLUS\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1.5, 
          FormBox[
           RotationBox["\"MINUS\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {2.5, 
          FormBox[
           RotationBox["\"ZERO\"", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}}}},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImagePadding->{{All, 18.}, {18., All}},
     ImageSize->300,
     Method->{
      "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
       "RangePadding" -> Scaled[0.05]}]},
   {"", 
    ItemBox["\<\"predicted class\"\>",
     DefaultBaseStyle->"LabeledLabel"]}
  },
  BaseStyle->{
   FontFamily -> "Verdana", FontSize -> 8, FontColor -> GrayLevel[0.4]},
  GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
  GridBoxSpacings->{"Columns" -> {{0.5}}}]], "Output",
 CellChangeTimes->{3.8196029866328335`*^9},
 CellLabel->
  "Out[114]=",ExpressionUUID->"c701b744-c0a3-421f-946c-00bb78e5b1da"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"netF", "[", 
  RowBox[{"{", "0", "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.819602995465186*^9, 3.8196030005110316`*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"507e47ec-e180-4a80-8932-89faca429b38"],

Cell[BoxData["\<\"ZERO\"\>"], "Output",
 CellChangeTimes->{3.8196030008535867`*^9},
 CellLabel->
  "Out[115]=",ExpressionUUID->"251867ea-c894-48b5-b570-626dbca806df"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"netF", "[", 
  RowBox[{
   RowBox[{"{", "2", "}"}], ",", "\"\<Probabilities\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8196030021763315`*^9, 3.8196030163789883`*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"e0a0e295-60de-4bac-99ae-8321493f1a97"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"PLUS\"\>", "\[Rule]", "0.9999839067459106`"}], ",", 
   RowBox[{"\<\"MINUS\"\>", "\[Rule]", "7.2497323344578035`*^-6"}], ",", 
   RowBox[{"\<\"ZERO\"\>", "\[Rule]", "8.841180715535302`*^-6"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8196030167584763`*^9},
 CellLabel->
  "Out[116]=",ExpressionUUID->"c6036df4-7b6c-418f-b9e9-c651ebf69eef"]
}, Closed]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["assigning a class to number 2", "Subsection",
 CellChangeTimes->{{3.8196031230599756`*^9, 
  3.8196031353626723`*^9}},ExpressionUUID->"6143deae-e7d0-48d2-a937-\
60e5d25f6eec"],

Cell[CellGroupData[{

Cell["1\tprepare datasets", "Subsubsection",
 CellChangeTimes->{{3.8196031404114943`*^9, 3.819603143635228*^9}, {
  3.8196062764030685`*^9, 
  3.8196062767412786`*^9}},ExpressionUUID->"3893914c-161c-4c7f-9e72-\
c6d2cba59074"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Batch", "[", "n_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "makeCluster", "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"makeCluster", "[", 
       RowBox[{"class_", ",", "\[Mu]_", ",", "\[Rho]_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"RandomVariate", "[", 
        RowBox[{
         RowBox[{"MultinormalDistribution", "[", 
          RowBox[{"\[Mu]", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", 
               RowBox[{"2", "\[Rho]"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"2", "\[Rho]"}], ",", "4"}], "}"}]}], "}"}]}], "]"}], 
         ",", 
         RowBox[{"Round", "[", 
          RowBox[{"n", "/", "3"}], "]"}]}], "]"}], "\[Rule]", "class"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Thread", "/@", 
       RowBox[{"makeCluster", "@@@", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Red", ",", 
            RowBox[{"{", 
             RowBox[{"1.5", ",", "1.5"}], "}"}], ",", 
            RowBox[{"-", ".2"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Green", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "1.5"}], ",", "1"}], "}"}], ",", ".1"}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"Blue", ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"-", "2.5"}]}], "}"}], ",", ".8"}], "}"}]}], "}"}]}]}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.819603148143364*^9, 3.819603148146364*^9}},
 CellLabel->
  "In[117]:=",ExpressionUUID->"c25a45dc-9f0f-4164-b2d6-c0df2ec0ecf5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Batch", "@", "3"}]], "Input",
 CellChangeTimes->{{3.819603155326988*^9, 3.819603155331012*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"6494ac85-dca4-4526-a941-3291a5c26abd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0.174909646733872`", ",", "1.2970058272959593`"}], "}"}], 
    "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[1, 0, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2.188619098331115`"}], ",", "4.907975148362176`"}], "}"}],
     "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 1, 0],
     Editable->False,
     Selectable->False]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.9460568823721422`"}], ",", 
      RowBox[{"-", "5.0326508343395275`"}]}], "}"}], "\[Rule]", 
    InterpretationBox[
     ButtonBox[
      TooltipBox[
       GraphicsBox[{
         {GrayLevel[0], RectangleBox[{0, 0}]}, 
         {GrayLevel[0], RectangleBox[{1, -1}]}, 
         {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
        AspectRatio->1,
        DefaultBaseStyle->"ColorSwatchGraphics",
        Frame->True,
        FrameStyle->RGBColor[0., 0., 0.6666666666666666],
        FrameTicks->None,
        ImageSize->
         Dynamic[{
          Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
           Magnification]}],
        PlotRangePadding->None],
       StyleBox[
        RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> False]],
      Appearance->None,
      BaseStyle->{},
      BaselinePosition->Baseline,
      ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
        If[
         Not[
          AbsoluteCurrentValue["Deployed"]], 
         SelectionMove[Typeset`box$, All, Expression]; 
         FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
         FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
         FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
         MathLink`CallFrontEnd[
           FrontEnd`AttachCell[Typeset`box$, 
            FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
            Left, Top}, 
            "ClosingActions" -> {
             "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
      DefaultBaseStyle->{},
      Evaluator->Automatic,
      Method->"Preemptive"],
     RGBColor[0, 0, 1],
     Editable->False,
     Selectable->False]}]}], "}"}]], "Output",
 CellChangeTimes->{3.8196031559119234`*^9},
 CellLabel->
  "Out[118]=",ExpressionUUID->"dfbb5bd7-726e-41bf-bb81-76ec009fc9f4"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataT", "=", 
   RowBox[{"Batch", "@", "600"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataV", "=", 
   RowBox[{"Batch", "@", "60"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8196031958941193`*^9, 3.8196031958951173`*^9}},
 CellLabel->
  "In[119]:=",ExpressionUUID->"ef5a5b38-2c42-465c-884a-341ef0ee4362"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gr", "=", 
  RowBox[{"Graphics", "[", 
   RowBox[{
    RowBox[{"Cases", "[", 
     RowBox[{"dataT", ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"a_", "\[Rule]", "b_"}], ")"}], "\[RuleDelayed]", 
       RowBox[{"{", 
        RowBox[{"b", ",", 
         RowBox[{"Point", "@", "a"}]}], "}"}]}], ",", "1"}], "]"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "5"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8196032863861866`*^9, 3.819603317801384*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"71282ac7-e7d0-470f-bebd-c17ef54e1a98"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[1, 0, 0], PointBox[{1.868324138380431, -0.8710717400492429}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.1658312337309553`, 0.06689790219674108}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.1883930413478305`, 2.316502703009889}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.182207731772651, -0.3487900615816064}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.312419004939234, 2.4793881913877556`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.3520087379566887`, 4.00004800460389}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.547998335529225, -0.5765035382714432}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.8854852382957792`, 1.1640455994032806`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.63708351579931, -1.2554162157126387`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.7149793811213803`, 1.025433786829585}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.4910588730322891, 3.976339162038973}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.5849611466342366`, 0.620891682872383}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.8234457471012542, 2.2115423735790314`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.7892197991222621, 1.8291174095452656`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.5952945990497174`, 0.7138940552262559}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.0358793386041218`, 4.785822193485297}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.7995441306181981, 1.7037873931363177`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.06908286234292094, 2.8493181462750767`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.832521260350409, 2.1792713490782836`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.2842811779842065`, 2.344565796583827}]}, 
   {RGBColor[1, 0, 0], 
    PointBox[{2.2162429788499436`, -0.27334202802749585`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.3869192546156779, 5.587020576180378}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.4141167822610279, 1.3282784629660684`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.9365724121558485`, 0.7090918848049406}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.3926555338359563`, 0.2096461095071196}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.264592482414371, 1.9816920047450486`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.23036282664690177`, 0.6309203893948083}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.652223439873495, 0.9761814473544658}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.3516448493696114`, 3.525062547652266}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.9438996170620657`, 1.6478337702776062`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.3677909029420505`, 1.6417830823362412`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.3350042600337697`, -0.4247512851855637}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.5773128781368433`, 0.8949942854672212}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.043844095601368, 3.9131413097669308`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.4912537551662217, 0.5892576317639838}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.0538995248686542`, -0.5486745167858555}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.7051994828534456, 1.0153540212065835`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.686642815584235, 2.1277232114853977`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.404127061750891, 1.9104887113927855`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.8045952575514255`, 5.497221113678569}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.5537274872029463`, -2.431680985144585}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.7796793057343967`, 2.5346443585037326`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.1385217185640908`, 0.2691372396287346}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.0964581256749595`, 3.1034901598119915`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.759820607762243, 1.4378705748735072`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.443903013969135, 2.6152292020055397`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.4530856123215024`, -0.3198418707303303}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.1403390381143934, -0.6759813494768507}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.4229152833293406, 1.0928236265600286`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.8801848986776672`, 1.0844620178445563`}]}, 
   {RGBColor[1, 0, 0], 
    PointBox[{0.17008299857274323`, -0.08256849021971635}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.3746022446969146`, 0.13053970860504616`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.5011257663121427`, -0.9307791442467597}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.1591183728140084`, 0.46193662563936866`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.548297835385104, 1.7060916211061294`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.7065467146590843`, -1.6194369449740518`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.2059648136020225`, 2.1505908216309084`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.391788131636586, 1.8154991979987236`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.1963272678118444`, 0.19237045685152587`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.3848120091401954`, 1.0553079307578404`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.4481109241467294, 3.358622835966207}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.19401658446182313`, 2.481276664239563}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.05552195410889538, 2.5223648401560177`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.6530220511970777`, 1.7494684120882495`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.0377309233131324`, -0.6914250060237102}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.2728712506663387`, 2.052293279329856}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.802924602446986, -1.3367804182197873`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.023816009548145, -0.15229434864208424`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.4896227560303454`, 2.2517662569089594`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.8317086290481606`, -0.07411494487763126}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.0316742513427593`, -0.6022433962042899}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.2541532135422715`, -0.8444767265247579}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.7558560380228645`, 4.9684798114465085`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.7080641157902375, 1.3294063087237153`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.009383404498062, -2.3124236922511736`}]}, 
   {RGBColor[1, 0, 0], 
    PointBox[{2.3203453738072755`, -0.15017009193336994`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.876356863187047, 2.483207606346013}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.5042468016289313, 6.08246636693954}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.1084823928924274`, 3.8645040543872127`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.9045645714550516`, 0.6828899825293367}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.0584739934624396`, 0.07108098820361475}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.5732332471560228, 2.6758166332132767`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.8564510245956143`, 5.854265630156134}]}, 
   {RGBColor[1, 0, 0], 
    PointBox[{1.4754621627074753`, -0.14978284084777793`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.7353800647764503`, 3.1371528826331634`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.8367418012412259, 6.215664656583694}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.002883915964756, 1.6182774117677239`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.3357299657385315`, 1.925312343943867}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.8131069611017473, 3.2099851831195556`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.274956898930776, 3.855900684125385}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.063377973938012, 4.150834731386751}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.5214585964708032`, 0.5344069419258572}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.5254588464133093, 2.902914783546938}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.4484722496913762, 1.8903392515829576`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.7577361349924496`, 0.97184392351392}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.063497692672719, 4.635743194435103}]}, 
   {RGBColor[1, 0, 0], 
    PointBox[{-0.28953781691849767`, 1.2966886671089601`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.0818054937956245`, 1.2925795313137165`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.0844691041553649, 2.6021215030758524`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.898954469604976, -0.34160322539975185`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.3093880196475094, 2.6027741927416104`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.8654953466345665, 1.8678802340922425`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.2438421621528286`, 2.352238095091768}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.5137413079122513`, -1.925373939736081}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.6661165574429382, 4.013104134428309}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.41902341830238177`, -0.7983504797069245}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.219202209041367, 3.006000294847608}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.6354404565438634`, -1.7578915863620672`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.243202128672693, 0.48350334464205424`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.125243449220418, 3.632330909152237}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.585698639501565, -2.1648647128714176`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.264719945494974, 0.9517928533464747}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.0407215432542527`, 2.3485052738337986`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.9021282704705685, 5.166421801312822}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.33100530537247397`, 1.7662537322600718`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.44593049292840914`, 2.1401817645770906`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.7130987067465643, 4.759326397166753}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.8518401306241893, 1.1210749418407582`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.10242550195516964`, 2.171545014662481}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.2143458055647067`, -0.5718703457928842}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.9540376898701597`, 0.7884153752276611}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.8182206105526092, 0.4739235275453286}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.537039758126826, 1.3241742927689597`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.93730521010938, 3.0240889791917756`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.818165041998044, -0.1978850252455433}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.9687414989595591, -0.36317384892682747`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.688616088247105, 1.69745525021537}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.09526150653792942, 0.8539859919381009}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.5197223225105014`, 4.4872840426662215`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.9465960815924217`, 1.0575157804844029`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.833420549006721, 2.056126230743046}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.310790718174684, 0.34436906857408034`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.508019362208805, 0.1883974466859295}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.038864023447712004`, 2.844412226184623}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.9536857786088644`, 3.21603644280036}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.1014385087821532`, 1.9859792403094714`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.4059336532810396`, 1.5617134766862797`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.92105860910629, -0.6493558098871759}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.1115785790688844`, 3.6266000170072754`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.7625352772844293, -1.6920475868497697`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.5939649257070467`, 4.632175616935808}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.8408784647878041, 2.4380948119590036`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.2845355332861963, 2.112872690905811}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.7576064736663515, 3.0514825651113497`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.19805641929651463`, 3.210779575892258}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.3669581235453465`, -0.0635883621510196}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.2900405775858035`, 1.685424875846664}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.3484163911949956`, 1.3268392408670648`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.7559202463406116`, -2.5447173126774354`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.5057832783753821, 5.653444466737039}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.7966266589760135, -2.8412028041947677`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.4024080003788875`, 1.3879874505877334`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.9250228410459589, 0.6618673803900811}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.5266189430068065`, -1.6366245606391354`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.790774074859664, 0.8699862487970663}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.6355404999979, 4.967699191908598}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.5000978489286774`, -0.2320243307330765}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.23498691410290617`, -0.0606273264008681}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.4630957877491544`, 1.4748941785355936`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.688700188955134, 1.0226556026841749`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.08569902024665654, 2.2391743029742335`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.6693999910570674`, 4.4055328984591045`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.7052166377284577, 2.763647066929587}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.39781695351536417`, 1.46291105663504}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.979591008531715, 4.7993084236736605`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.2808644717491964`, 1.183116414233745}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.3407575700337206`, 2.5774249630458996`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.5946731340162101`, -0.8278151294178802}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.5635122663107319, -1.3747332422113088`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.0638423091001008`, 2.245961272265627}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.45308500229454074`, 4.345026674740483}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.9735231103764015, 6.144690020070647}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.020300806295501683`, 4.95919688089743}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.1205453343762657`, -2.1162605634815503`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.7037018825778905`, -0.09463063006879513}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.262317909787019, 1.6926053634026703`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.35761868465090707`, 1.7828623932216936`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.8278543707883177`, 3.437844674300094}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.5700654519200827`, 2.8988544481353706`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.6405666374266827`, 1.6075022569404016`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.03023122816542, 2.0005673747976727`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.8163472310281357`, -3.6312117691330377`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.3049589950913283`, 6.190050666664035}]}, 
   {RGBColor[1, 0, 0], 
    PointBox[{0.6429364245354497, -0.019761839215256094`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.8010730810175398, -1.289048176236339}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.8622841849099228, -0.28479251230672764`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.4646705939325537`, 4.121694113476206}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.4388901564296936`, 6.427033263517999}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.6367399708223163`, -0.608887488532694}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.704880277227995, 0.3867492452500938}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.4248482711320163`, 4.292230269932917}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.4558426396746813`, 4.519375948209799}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.289411868794752, 2.0691777685657344`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.7424914808755063`, 1.9382769837240887`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.956006836165142, -0.9259557342988902}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.391387989473878, 2.6132583261563442`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.3461278712796574`, 1.6944410670097902`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.15482891172513202`, 4.467090978711779}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.5692342056429975`, 0.5542763824831322}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.161839600701687, 6.040504176357629}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.4175029563239654, -0.0363021969147348}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.2232008043594833`, -2.646107149219467}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.7783900179627359`, -2.770395444639722}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.0438685853618836`, 1.954722402922728}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.0335762874454177`, 1.4679915661818057`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.57545847053934, 1.242864474823334}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.4808835747577898`, 2.997655083072971}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.3620057801583845`, -1.0215112921772147`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.2186716563297173`, -0.34918019152339497`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.762777628024981, 2.8289105373591084`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.712337882375809, 1.3626577660380146`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.2851201304117623`, -1.47432089884306}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.034635340362876965`, 5.226206575624735}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.5420901655031738`, -0.18474790909430827`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.9919367882378375, -0.3550214147703339}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.3038181974678418`, 4.12466220151539}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.698124412390265, 5.084342126703064}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.0718103501048333`, 0.4042470944784654}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.614525042532352, 2.3338393728958042`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.9600816008521965, 3.2367623639413137`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.179697182516727, 2.588825707984917}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.35998910720280985`, 3.128187126229356}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.3021909143854373`, -1.3746497136522118`}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.17308729164603642`, 3.6378113186822527`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.356278716495662, 2.7165155975916617`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.342598510121583, 2.253635159350429}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-0.0006361825410601263, 1.4381112831689682`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.8081481783818836`, 0.5252467824311955}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.44163333446018, 3.1244088430739145`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.7369431040328712, 1.3229199716238775`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.821236571958091, 1.1941405896141908`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.8932057110775705, 1.2299045973778582`}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.1305306909759283`, 3.150506524130247}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.7868313130545346, 0.460176798027342}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.374609864754211, 1.8906375453751498`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.331272245961439, 2.7020318151279445`}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.7489453729288917, 3.59068111048315}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.4470427557982, -0.6247160781016645}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.9590357889543406`, 0.3905968572813756}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.382498603856304, 4.307621466559091}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.8139479587334473`, 1.0155871805624845`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.037617193480422, -1.224773554383027}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.7435958924633255`, 0.9708234763293134}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.362633969782755, -0.2668035538256932}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{0.053939686496691897`, -1.7320220256377867`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.9795035488473823, 0.46652289662137725`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.3277569374617864`, 2.186159953029538}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.5930046964749915`, 2.6375685298337572`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.0409719689228796`, 3.2155487238995444`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{0.10768276207870597`, 0.15802893296852294`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.9983217006641119`, 0.7877791415363016}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.2784047703095822, -3.2565911439473556`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.3976173065216879, -1.225851557852843}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.6578526766738957`, -3.089550049345285}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.4220020637789501, 1.616620743480131}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.0362603106828936`, -0.7511213642784409}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.026289979031419, 0.7646582255778182}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.976288919414587, 1.2168664963414813`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.2685012058563903`, 0.3472870856572263}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.52010398573849, 2.0900118238473078`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.3702804908797146, 1.7079384876118535`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.0961936818215627`, 0.22520040921959417`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.9571717537383361, 2.567560667399171}]}, 
   {RGBColor[0, 1, 0], PointBox[{-5.3587141654371395`, 2.51720302176808}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.9039042367547658, 3.9465748195223713`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.504699989024564, 0.6651907467667606}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-3.0940078273431846`, 0.29094998667464755`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.1381694948583436`, 4.067115432841069}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.11190524683922187`, 0.90838764945167}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.4627877822501263`, 0.1413616475276821}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.852704780493844, -1.4944092622833138`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.6478718284867826`, 0.6169689072041479}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.9168310022464485`, -0.2512239332784356}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.065975649040678, 2.8033020727351383`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.0538178255614687`, 2.96434674751334}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.7291798483181866`, 1.7052100195226214`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.5387547420573622`, 1.1524900980005885`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.2327449361500866`, 4.740649218321767}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.20859699436207, -1.4952404601170106`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.4318115215217184`, -1.2925355368344893`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.5143902803722831, -4.95788448051179}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.516774376131371, 0.0453349807295389}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.6962049194038693`, 3.407981282673912}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.8221575584133114`, 2.126587945255425}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.352177246881942, 2.435385500607845}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.3639136511273473`, 2.056363275047323}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.3257418265963605`, -1.5876319941804389`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-2.3635970122590253`, -0.47395328962112626`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.2061479424915631, -1.1893286231976798`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.4796298586848309`, 1.226312863999177}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.6571359605329552`, -1.107737466619822}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.31816089173477, 4.530703537100937}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.1567448659781485`, -1.5190180283167511`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.7961096306830613`, -1.0875327787794196`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.2852781482069386`, 1.3074909943686426`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.672440943732851, -0.5354383727510332}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.0109106101901086`, 0.6840499289962685}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.718703602727076, 5.617298640436225}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.290474815780575, 0.001387968152607777}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.622691962774701, -1.179800879482376}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.600687525710593, 0.07603506740290189}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-0.11235744361129552`, 2.0206393304498436`}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.24767571143197498`, 2.380588240108377}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.8698600396222722`, 0.21196027913886228`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.8907164725974557, 0.11456542715444118`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.6450488487012593`, -0.7112920201719888}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.6445813843175783`, -0.534623965688992}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.9662046559249844`, 2.5856023597203674`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.3652848313453716`, 0.7364483726305542}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.8443308581011084, 0.5238084441784319}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.3512199489948484`, -0.5498227111496556}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.519387398098666, 1.8241176994715183`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.6122899821926894, 1.3364995141770106`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.46583132989999, -2.049578789598539}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.4924826929712547, 3.0301725577603844`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.6600250938551084`, -3.6649620713082154`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.3514995691743925`, 0.12401987596600672`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.596520831220386, -0.4524759598288852}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.2120954746846655`, 3.1272573991489114`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.525749740173602, 0.07829390955299109}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.604382379140291, 2.320084781171425}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.6073317213416423`, 0.9012145544329646}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-2.5555315249311836`, -1.9002642980647848`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.234592301533829, 0.5407369758143743}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.442721987191608, 2.0644772027208167`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.138405447601345, 5.061404688441064}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.2239749896594705`, 2.5213213789350672`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.643134424271867, 1.4057383632447555`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.8752755810926974, 1.7089087052169787`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.06862454311042, -1.3940653569418124`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.3354632050195745`, 1.0062297275176557`}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.6460851346942689, 0.41991929481748747`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.5392647144842718, -1.2827915236715182`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{0.47829214639910433`, -1.3859521085482065`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.3573855685072225, -0.8358202116665769}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.2656609949510218, 0.5218379315237758}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.1304053863173182`, 0.6377922743297086}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.3516282379474176`, -0.9830296233065523}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.905768897059921, 0.05004488418598707}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.6224776800585883`, 0.6004274067899737}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.5218329868188492`, -0.36842892912574166`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.150812285653639, 1.0605699853816715`}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.10137238775411839`, 1.13047402102998}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.6865342531465328`, -0.2534314348388722}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.2511808707384553`, 0.8211610240263532}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.863628997289899, 0.5403708991372125}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.492232316769231, 0.8286236017707789}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.1122414978545356`, 1.4443851610010447`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.549517048704689, 4.2655984604484525`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.1107611673540538`, 1.0070528676859585`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.04436399328783924, -0.2088942810040446}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.905232479308005, -0.898408493835912}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.2122497087485433`, -2.039842384290516}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.5475540704342035, 2.1461148684875937`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.3846639811739334, 0.29982517103418005`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.8367582988723394`, 2.73580061348516}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.2697351453007535`, 2.11236509692981}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.9665350978391305`, 0.1886641090846437}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.0494036598425307, 0.22383096016344495`}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.48838889267835994`, 3.5626887690445512`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.801222007667582, 0.48058937720606454`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{0.27370747194247347`, -0.12374126901601823`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.7930397108097615`, -0.09600861807559347}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.9697036338717044, 1.3758889223262114`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.5779993033151414, -1.61535963101857}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.9025793511750846`, 3.9377776923287016`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.0090574716644831`, 1.4661667087794021`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.0090729702660473`, 1.953462796888092}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.27049000756482444`, 5.838179600350102}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.9851604364865604, 0.7734563757390631}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.795724171633842, -4.0604618163846835`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.1313528354981237`, 1.0940988484635754`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.20042903916385, 0.011639339184537523`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.033317957836917, -1.3439949468777925`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.17452295510566, -1.4658406882302115`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.3480468459273462`, 4.032262067852164}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.4115124522146774`, 2.5245794882568893`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.8555672319556393`, 2.112789005496408}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.5919011183910847, 3.7017547371349506`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.31952988016766315`, 3.749517514584859}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.4546444204094564`, 1.1516384781344153`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.9190085496456353`, 0.35970583898147546`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.0733079637827763`, 0.6242320308923498}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.87939271339491, 0.4547889250570635}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-0.17914645250486427`, 1.5791155429112504`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.6501113832473016, 3.2899971011510036`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.5652299832582868`, 2.7303017783981134`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.4812173652695637, 3.5631721612621896`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.8435213333528845, -0.8686196516777811}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.55171995494186, 1.6975379055545532`}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.2796982417110907, 3.2491208824190134`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.2232625008342555`, -2.07481907528076}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.7208002237816392, -2.1358942983286626`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.592048715278801, 6.054856531631802}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.2060461416823778`, 2.3047829604128314`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.2278751027750612`, 1.795915092474214}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.7240320789356156`, 1.8795138143132883`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.4673450559772743`, 1.9288124329062468`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.5119430066945787`, 2.603218676989684}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.2114680322138063`, 0.7536282337120588}]}, 
   {RGBColor[0, 0, 1], PointBox[{1.1036034792747718`, -0.7262764712845236}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.6077261283408116, -3.5999419477191075`}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{-1.2973477897639707`, -4.3158624537782115`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.6623114628841097, -1.968047446578856}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.3492437051096847, -3.679615181348783}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.297908241405033, -1.6893838602505789`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-3.1365527554260173`, -6.928097483022907}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{0.23421051455588773`, -1.6733764503433413`}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{-0.038593641306756216`, -2.9370762707578253`}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{-0.12294263822300473`, -0.5465975836054353}]}, 
   {RGBColor[0, 0, 1], PointBox[{1.3939676059035873`, -2.3811498987922968`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.36980107029148374`, -4.45099235784037}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.9595290253382309, -2.744703821597807}]}, 
   {RGBColor[0, 0, 1], PointBox[{-1.7457782394972876`, -4.589223401414467}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.3664462790880171, -1.2689558353878947`}]}, 
   {RGBColor[0, 0, 1], PointBox[{2.554278885854768, 0.9518694068172611}]}, 
   {RGBColor[0, 0, 1], PointBox[{-1.1166264818143166`, -4.502534419972518}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.1535235739750528, -1.8753226708054893`}]}, 
   {RGBColor[0, 0, 1], PointBox[{1.0565959698038137`, -1.854199229342059}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.9767308859167688, -3.58054828864267}]}, 
   {RGBColor[0, 0, 1], PointBox[{1.3063523810422937`, -1.428522704571062}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{-0.026981071924877316`, -2.899385708129473}]}, 
   {RGBColor[0, 0, 1], PointBox[{2.1900831306552297`, 0.41834603278190396`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-2.453754982656914, -5.6384866773948}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{-1.2927090680805988`, -5.5809359396027425`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.5777061953907638, -2.362341706326963}]}, 
   {RGBColor[0, 0, 1], PointBox[{1.2255025976918643`, -0.5432124420490139}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.5280084630054954, -3.8010744834049515`}]}, 
   {RGBColor[0, 0, 1], PointBox[{2.5185816501100042`, 2.7158426346133364`}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{-1.3834066515552355`, -3.7410203405025477`}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{-0.034704044189679546`, -2.897912808924047}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.8195456535961565, -0.5452043914588427}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{0.10471513430084028`, -1.8613103429912468`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.698773273398779, -2.2420620781000773`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.13482107447573194`, -1.186082517503981}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{0.11454452021543497`, -1.7212463512747962`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.3246936726498185, -0.7497280622985816}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{0.28364400613293533`, -2.3517764680406064`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.9363555404681173, 0.13344687885499074`}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{-0.028221650900190735`, -1.9479764311945398`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.024944317041414032`, -3.498991530020179}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.457071909671937, -1.7815753425511485`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.22342469963292455`, -3.303557341113751}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.2993712019282784, -0.23088072968075934`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.4932381956359325, -1.9972405138305431`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.42237735643502033`, -1.714932526421932}]}, 
   {RGBColor[0, 0, 1], PointBox[{2.427607471513858, 0.5050953568995649}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.42689594036264567`, -5.85923823093616}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{1.0444736694331898`, -0.10786446941776573`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.47414031227832465`, -4.831602356023549}]}, 
   {RGBColor[0, 0, 1], PointBox[{2.0729238446595266`, 1.323842684809391}]}, 
   {RGBColor[0, 0, 1], PointBox[{1.6360307916678187`, 0.7746246590616566}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{0.027044324715115062`, -1.9258888510787928`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.9254330380257518, 0.6757137992810245}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.8054512919918324, -1.618770943590819}]}, 
   {RGBColor[0, 0, 1], PointBox[{1.0095626702281142`, 1.2074057785477033`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-1.6280626534099625`, -4.292339466671931}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.05363562771239562, -2.4941705850948597`}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{0.10827946028816565`, -3.6112538074291436`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.48061890582965894`, -4.417219615148189}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.7099785973690612, -1.9623050480971849`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.09005397596382506, -4.176573201691186}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.4763486119334548, -3.458825146733023}]}, 
   {RGBColor[0, 0, 1], PointBox[{-1.4619293115058176`, -5.276759062800009}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{0.27150929247362576`, -1.7522325887647763`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-1.1387752649676108`, -4.907374480654948}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.329755261405834, -2.398703890942783}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.7538828086378733, -1.799698378166485}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.14128375450874064`, -4.085601382296152}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.9722001595233724, 0.6652163267716364}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{-0.42427706540970883`, -4.2376051828593395`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.863985466112063, -0.7109246209657025}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{-0.07624222803453393, -3.9429807663537506`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-1.6622592458345773`, -7.138575991823754}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.42564803136651463`, -2.923753902568828}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.450969528925771, -0.12368206473285737`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.5142703973312457, -3.1188635281683816`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.9794142594926201, 1.3646582859822014`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.3513195504591695, -2.033568497129972}]}, 
   {RGBColor[0, 0, 1], PointBox[{-1.2060861898594217`, -4.312097222100855}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.6548894486233097, -3.1592863372439175`}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{-1.2786501431052921`, -5.0664767298245685`}]}, 
   {RGBColor[0, 0, 1], PointBox[{1.3303256383895739`, -2.2452586830046113`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.5230936527299299, -4.334403826908374}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{-0.40986255724307485`, -3.5742125952936523`}]}, 
   {RGBColor[0, 0, 1], PointBox[{1.628793561379719, -0.4437344124361071}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.5085471775832555, -2.973164372044544}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.5259317506653802, -1.4101528973828348`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.7602892778170071, -2.3438568831891122`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.4264817622412089, -1.7479269839315426`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.46662184767031434`, -3.743429856153525}]}, 
   {RGBColor[0, 0, 1], PointBox[{1.670461739287679, 0.7198012613798235}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.09353229613478103, -0.9630269501159683}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{0.19302779769264333`, -0.024024054162987696`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.3780171182386745, -4.920381545287594}]}, 
   {RGBColor[0, 0, 1], PointBox[{1.6667415868478666`, -2.0157357505169755`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-1.4690980352355758`, -4.617429445939306}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.843952891791635, -4.470911666749336}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{-1.0594465547833312`, -6.1452476516064465`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.7280624078366544, -1.2572034059254353`}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{-0.03741145472466888, -1.9362770888518428`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.5399419422300703, -2.472672821349065}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{0.025775921486657232`, -2.2265871927343293`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.9944483659213614, -3.7471362416391676`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.9951081084791139, -1.7107234268802332`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.7139236862748304, -1.753978237569266}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.3296070641915309, -2.473369922313614}]}, 
   {RGBColor[0, 0, 1], PointBox[{1.0140513533285909`, -0.7048525939357648}]}, 
   {RGBColor[0, 0, 1], PointBox[{1.0002377465115015`, -0.6434224982469272}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.9387668695642184, -0.9346727156858119}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{-2.1459486881543746`, -3.7583029226367906`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-1.125351051985597, -5.057961558049039}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{-1.1995258147924845`, -3.2730616064411935`}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{0.26439729880812696`, -1.3717553551239219`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-1.3915494035634706`, -4.794361651840452}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.1496337303164529, -2.809928168625021}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{-0.12872810598786777`, -1.8918459385416284`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.6026684684419134, 0.026749147368715143`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.5228297968217659, -4.67758771389769}]}, 
   {RGBColor[0, 0, 1], PointBox[{1.117211606192509, -0.48219127061274936`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.5132376193961281, -1.423414277635264}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.5775122823424463, -4.039149176293073}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.9906905424453226, -2.7580911237905243`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.2957282082124193, -1.8806089932155334`}]}, 
   {RGBColor[0, 0, 1], PointBox[{1.1222947428072976`, -0.03523995128633395}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.02623335125092707, -1.390165494350038}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.9245535422864396, -5.113021803983159}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.23874753967227666`, -4.35338413255421}]}, 
   {RGBColor[0, 0, 1], PointBox[{-1.2682444935868453`, -4.777664910018538}]}, 
   {RGBColor[0, 0, 1], PointBox[{-2.418559694868698, -5.97961564245574}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.4164383385430717, -2.576682507378382}]}, 
   {RGBColor[0, 0, 1], PointBox[{1.7563133405309055`, 1.4426559554576226`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-1.7945797949256834`, -5.345999225943095}]}, 
   {RGBColor[0, 0, 1], PointBox[{1.2227786645488938`, 1.1818166387821885`}]}, 
   {RGBColor[0, 0, 1], PointBox[{1.512469930990216, -1.5373486848449915`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.6253679115994741, -2.493126888793654}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.2588671756656469, -1.326730257829711}]}, 
   {RGBColor[0, 0, 1], PointBox[{-1.644790633825812, -4.7787615741755705`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.8111115499112032, -2.6875030502880293`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.42773459965565774`, -0.4747416033826988}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.859945172677453, -2.821486568956762}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{0.20288007283516576`, -1.4478892400901422`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.6208293022648955, -3.8950859237905675`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-1.290345302342239, -5.757881921408037}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.5190024371336808, -2.7655924473602367`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.8867118982784554, -5.040163467464275}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.8423926383460919, -3.1709703376654046`}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{0.0003567271991518867, -3.6115220831616552`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.697567962208918, -4.382078628129939}]}, 
   {RGBColor[0, 0, 1], PointBox[{-1.190257229635985, -4.79856659552023}]}, 
   {RGBColor[0, 0, 1], PointBox[{-1.4094176448734008`, -6.357948114199248}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.8307397270917484, -1.351540752412243}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.19708307463205374`, -4.640595820945043}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{-0.13488423074473693`, -2.9736154246870923`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.9027044861372779, -1.357685163666886}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.3076936306982885, -1.0644141145926462`}]}, 
   {RGBColor[0, 0, 1], PointBox[{1.0242543053449435`, -1.0316821596604664`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.4940278180296474, -1.813301382972087}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.29411848352755904`, -4.079013154228218}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.36158888303716963`, -3.874311743854886}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.8026249926108967, -1.7060850536219752`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.2978971074828518, -3.663849061551246}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.3959116284201157, -5.01662665678736}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.9615104633335843, 0.6301421326135643}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.7268323639162647, -1.5231497379664747`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.7288971976839351, -2.99573112780108}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.4680537425177501, -1.0932983144123372`}]}, 
   {RGBColor[0, 0, 1], PointBox[{2.3405443044499568`, 1.0254820456085985`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.2354160507926377, -3.785465396919721}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{-0.28116181344187907`, -3.3619435442883985`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.4191630212803629, -3.0295576191294584`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.5971062317237623, -2.191940757564116}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.8478645367713504, -0.6625983555996555}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.46191202111499957`, -4.413409882055635}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.24419226370440097`, -3.442611246299666}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.5871150033248821, -2.696862711817931}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.10531546668930873`, -4.611544493215549}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{-1.1020411055288213`, -1.7977492012897518`}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{-0.21754058933819076`, -3.1821794430413735`}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{-0.051498582557455215`, -0.8009693782421445}]}, 
   {RGBColor[0, 0, 1], PointBox[{2.5606571213886107`, 1.1400050949775729`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.7293771633407174, -0.43200292649273386`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.3071921178136032, -1.7988187180707738`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.5991673744327377, 0.539837781959164}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.5217706844737516, -1.9645051126695976`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.7613359320482318, -5.8830825014296}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.5574104352040026, -0.6939505435469606}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.5046255520344044, -1.2495058811741815`}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{-0.0049636432502039845`, -3.433939901344314}]}, 
   {RGBColor[0, 0, 1], PointBox[{2.2229093065318684`, 0.20658687987109214`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.1554832902480739, -2.3824472859132233`}]}, 
   {RGBColor[0, 0, 1], PointBox[{1.3656874181713687`, -0.5999686512758284}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.2960600585828513, -3.873689198673249}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{-0.16594954041326476`, -1.4838339915598544`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.01377512170093533, -2.3482776922002633`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.886229535716801, -2.5774298491912995`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.4830401847466165, -2.405824914291314}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.5285897474394571, -2.043456406822448}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.48290033378357905`, -1.954682682288472}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.4159603962368241, -2.299125643903258}]}},
  Frame->True,
  PlotRange->5]], "Output",
 CellChangeTimes->{3.8196033189463797`*^9},
 CellLabel->
  "Out[121]=",ExpressionUUID->"07ae358f-55bd-460f-837a-f2fa8e3bb378"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["2\tsetup a network", "Subsubsection",
 CellChangeTimes->{{3.819603384388319*^9, 3.8196033919880867`*^9}, {
  3.819606277694049*^9, 
  3.819606277888071*^9}},ExpressionUUID->"4d69d429-ff65-4c40-899f-\
b7d9f7a852c2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"net", "=", 
  RowBox[{"NetInitialize", "@", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"30", ",", "Ramp", ",", "3", ",", 
       RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}], ",", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"{", "2", "}"}]}], ",", 
     RowBox[{"\"\<Output\>\"", "\[Rule]", 
      RowBox[{"NetDecoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Class\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"Red", ",", "Green", ",", "Blue"}], "}"}]}], "}"}], 
       "]"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8196033338160825`*^9, 3.8196033338180823`*^9}, {
  3.819603578604988*^9, 3.8196035931557536`*^9}, {3.819603787750866*^9, 
  3.819603790949212*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"4eedd17f-0fcc-4364-a49d-a49232d7de8d"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["4", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{30, 2}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{30}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {30}, "$OutputSize" -> 30, 
                    "$InputSize" -> 2, "$InputDimensions" -> {2}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{30}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {30}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{30}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{30}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3, 30}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{3}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {3}, "$OutputSize" -> 3, 
                    "$InputSize" -> 30, "$InputDimensions" -> {30}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{30}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`RealT], "Type" -> "Class", "Labels" -> {
                    RGBColor[1, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 0, 1]}, "InputDepth" -> 1, "Dimensions" -> 3, 
                    "$Rank" -> 0, "$Version" -> "12.0.11"]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"30\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"30\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{
  3.8196033344438653`*^9, 3.819603593943362*^9, {3.81960379153804*^9, 
   3.8196038048785763`*^9}},
 CellLabel->
  "Out[137]=",ExpressionUUID->"fb44c4db-2393-4ff9-8560-09bc524f82e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"net", "@", "#"}], ",", 
       RowBox[{"Point", "@", "#"}]}], "}"}], "&"}], "/@", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1200", ",", "2"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8196033620386524`*^9, 3.8196033620406804`*^9}},
 CellLabel->
  "In[138]:=",ExpressionUUID->"c845bf58-407b-404f-b12d-f8870f881647"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[1, 0, 0], PointBox[{1.01743732457496, 1.3420043755738362`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.14006119537054218`, 0.1482368523877895}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.326698828551681, 0.9237019469716365}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.9730614422824697, 3.8520365328059363`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-0.22632677807559531`, -1.7928897670317685`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.9545349198528488`, -3.9197047353684162`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-2.0443778944228583`, -3.8326771042166747`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.4664038036190377`, -1.0691067767418776`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.6151340604896323, 3.873137543124056}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.9137268645567005`, -2.269961697604197}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.4333505422718034`, 1.7045495700041045`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.022771185345588, -0.7778784116582766}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.1386870029731853`, -3.583532328492197}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.152515058876382, 4.518261758924062}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.8366184445751053`, -2.253205998946772}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.745141483252638, 2.772634443298415}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.0068727456641842`, 3.184367371355691}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.5946006764447134`, -2.2832869018058553`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.9089322820915733`, -0.800111196554063}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.420818991975832, 0.5038638275099778}]}, 
   {RGBColor[0, 1, 0], PointBox[{4.005779447541862, -4.2837577130433715`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.343968779596727, -4.350275902541155}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.00944320252295583, 3.1484524445332056`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.610548024626455, -0.20100896233906695`}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.4404295473645305`, 4.255522008194028}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.47478225536813, 3.928543090376607}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.8115161119682917, 0.18042706588508217`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.6446774559321291, 2.150152577051461}]}, 
   {RGBColor[1, 0, 0], PointBox[{-2.027574219990866, 3.722778387995632}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.570204551249848, -1.4111071876872536`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.356478591073989, 0.47060838822795503`}]}, 
   {RGBColor[1, 0, 0], 
    PointBox[{1.1687223581461907`, 0.024460638102590693`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.7011358009238453`, -4.355849893121837}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.243263699123162, -2.760840133854437}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.454456993182049, -2.2557650876790483`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.701132440959352, 3.8917483708235494`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.9446131933294026`, 4.353069360844977}]}, 
   {RGBColor[1, 0, 0], PointBox[{-3.24779866820521, 3.892805410394832}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.887456450606617, -0.2636848139823389}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.5690364760810684, 3.460319657189931}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.095596351088851, -3.570273177642667}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.0876382952535444`, 1.2176242110293671`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.8355330891986554`, 2.0307840987603534`}]}, 
   {RGBColor[0, 1, 0], PointBox[{2.001408461501075, -2.2733646839196844`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.109146661843729, 2.11777550573553}]}, 
   {RGBColor[1, 0, 0], PointBox[{-3.8397655544393565`, 4.784627818292986}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.6514794463277678, 2.0386034973795937`}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.8546781566311967, -1.1551757752807}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.7196568370000591`, 1.876564994247797}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.0849866937114037`, -4.6702203994214315`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.3265812419747185`, 4.310264614210158}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.5889009899797806, -4.546516705753017}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.656772208805343, -2.345368034976282}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.9567234126711845, 4.582241174400931}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.1447924214479528, 3.378724732046276}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.7988353476545988, 4.061674736158153}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.1738098799688, 1.6165631122664053`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.018984114189063, -2.4919809962232833`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-2.009635323644769, 4.0222394931997165`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.1009622517266955`, 4.132537936597242}]}, 
   {RGBColor[0, 1, 0], PointBox[{4.699072973708933, -4.447007075208781}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.898067472910338, -0.12690374971698226`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.0484039708470245`, 4.2886722696223565`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-3.4106974157677854`, -3.7598901925672745`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.8566572689530823`, -3.763920735218715}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.500545597473888, -4.650767694246413}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.317398963022951, 1.0092361728498531`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-2.251347877546026, 3.357570845547386}]}, 
   {RGBColor[1, 0, 0], PointBox[{-4.136921214669151, 4.559514043591243}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.134911135503689, -3.4682827385510784`}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.4193452652451164, -1.4300352903746205`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.4544720817684844, 2.5156928183011225`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.5263155019603225`, 2.144215013825903}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-0.00757373079307655, -0.09685816281163895}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.243249477151945, 4.044252840543017}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.3672245499121267`, -4.394261568697429}]}, 
   {RGBColor[1, 0, 0], 
    PointBox[{-0.039805742329017235`, 3.2177766758728836`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.746348855381509, -1.4864782475737464`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.199314953386807, 0.7362518204894144}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.312904084351864, -0.37542701543637236`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.349232885404529, 0.7083659866906906}]}, 
   {RGBColor[1, 0, 0], PointBox[{-4.924691843261225, 4.37391397173791}]}, 
   {RGBColor[1, 0, 0], PointBox[{-4.561959925461871, 4.866544579344502}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.2688814184876893, 2.690516080424967}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.4503936321284066`, -1.1084179245238026`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.891244892377017, 1.4852669128267735`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.122176333782413, 1.7010679067440577`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-3.938288055624346, 3.591883524838451}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.9971620473874943`, -4.575860562824738}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.556652436460226, -2.199921333412547}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.2757284079696092, 4.744140478793884}]}, 
   {RGBColor[1, 0, 0], 
    PointBox[{0.19053939862945413`, 0.44014343763189956`}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.6307875247085768`, -4.330350617545342}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.7571309607048207`, 2.2463753541246625`}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.6666315565259815`, -2.2042274626546092`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-4.961325382474957, 3.7180148417046226`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.3980488901695445`, 0.6106573484462068}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{0.004608993423286023, -1.0863014355638896`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.4928267128505794`, 2.784059346676653}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-0.47342678603184574`, -0.8147083775897919}]}, 
   {RGBColor[1, 0, 0], PointBox[{-4.497013523018891, 3.7658806429333858`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.374154305149752, -3.0180374566757706`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-2.0778775776169525`, -1.3153016523821428`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.7392032596928217`, -2.759143230654388}]}, 
   {RGBColor[1, 0, 0], PointBox[{-3.1111513887299225`, 3.5115646154270266`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.685807647433972, -4.063232976582276}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.1249738135172507`, 1.2592810211105103`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.6113359886357728`, -0.1369975893087947}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.9882306658237905, -2.1311196996323183`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-2.8656632217985827`, -2.6533663426766942`}]}, 
   {RGBColor[0, 1, 0], PointBox[{4.638024572161299, -3.208054535235224}]}, 
   {RGBColor[1, 0, 0], 
    PointBox[{3.6623461085939226`, -0.24845967793890367`}]}, 
   {RGBColor[1, 0, 0], 
    PointBox[{3.2673133295075942`, -0.10168131808228331`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.765398711102531, -0.6070717101258865}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-0.23080071417013848`, -1.4527224000756878`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.177472560537952, -4.7419991517461995`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.171696835330799, -3.4698871527743727`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.4267604714450677`, -4.638878850949279}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.3117488674765667`, 4.968085351832126}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.914289636932656, -1.0619275870757647`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.629698753966986, -1.233014474130922}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.286863379814271, -3.5883177596385725`}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.9236104879516596`, -3.0215347342935104`}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.919654679557148, 2.827569918896266}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.221496886907879, -4.720538692718003}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.42073922859981, -4.6702649351596985`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.7124083573471864, -3.6177180798555995`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.337268308589497, 4.07977146436728}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.0987927841683245`, -1.7206404802262458`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.5498925882090351, 0.5892673670995148}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.1009503131469955`, 4.545571074882815}]}, 
   {RGBColor[1, 0, 0], PointBox[{-3.8686887436459045`, 2.818474678724577}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.1262471331808612`, -3.7203558922720266`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.3927348629755336, -1.4356693730620087`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.8157950585373897`, 2.571124590655195}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.531267845591325, -2.515838094598962}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.0415625983848145`, -3.8239766785578855`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.8243262460014762`, -2.3726617164397936`}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.475696090687578, 0.9993143760364873}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.952441839309877, -4.908068330554361}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.5932025239480083`, 2.5654962310631966`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.470427392231089, 0.13160370222480822`}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.646491115360206, 0.2093390450685142}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.3501691047754747`, -3.792159026367372}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.9333907197904772`, -3.8262699545149363`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.165987606208926, -1.2032147673139075`}]}, 
   {RGBColor[0, 1, 0], PointBox[{2.8813202147734422`, -4.2401281876953085`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.999321716865058, -1.469735153964164}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-0.5682064957362964, -0.25988375695513355`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-4.1620676950486555`, 4.861550580270318}]}, 
   {RGBColor[1, 0, 0], 
    PointBox[{-0.17143883589060138`, 1.4805597540419235`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.46328857523838, 2.8360290746819175`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.4281181547265405`, 4.760534774975305}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.108165038725369, -0.23284882845801746`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.6093770784211188`, 3.1814729171065146`}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.980727238548134, -2.580095197232268}]}, 
   {RGBColor[1, 0, 0], PointBox[{-3.386022055950475, 4.811808937528387}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.2477230352378417`, -0.3863560363999703}]}, 
   {RGBColor[0, 1, 0], PointBox[{4.262881372167733, -3.1587233754261828`}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.44730769170568685`, -2.672762093002518}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.521300389412211, 4.91212498411646}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.0332581662723417`, 4.501046656762011}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.7944570162131512`, -4.896860080577188}]}, 
   {RGBColor[0, 1, 0], PointBox[{4.789208958800209, -3.854327014862884}]}, 
   {RGBColor[1, 0, 0], PointBox[{-2.1610482309113372`, 2.817698123746169}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.5570448607342833`, 4.843448561484529}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.9475373390157813`, -2.346903815522083}]}, 
   {RGBColor[0, 1, 0], PointBox[{2.250980046189394, -3.5838409070246193`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.4136524476611765`, -0.6134728964943221}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.1353008615058453`, -2.085114626948217}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.1980068628831333`, -1.4382314202558568`}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.34359854144348, 1.6637930113015926`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.6679104093289983, -4.5330936740399945`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.9208753051900977`, 1.4978776591285445`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.9126978775141996, -0.7996214251028455}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.1760552357270129`, 3.109814351606744}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.898513704492288, -3.297422633073573}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.634158197092294, 4.929808576165232}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.26430404105857974`, 0.5603979448917062}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.365145398002712, 0.5101712107549119}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.939080983586221, 2.0369169169759473`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.9009882676891685`, -2.333770020322108}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.52214442985243, -2.2838420042508325`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.2578991803625215`, 4.6365933099547405`}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.0576692160780503`, -2.357311008350848}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.788693903911664, -3.294237337437295}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.15823429851927, 1.547714279195823}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.533698355842073, -4.220163052413801}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.952625396217634, 0.1621424769492279}]}, 
   {RGBColor[0, 1, 0], PointBox[{2.1332819240923477`, -4.342696123345908}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.31294470926863127`, -2.982557336125513}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.686822516795317, 2.9030804772897696`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.5180195149836546, 3.6885020745096284`}]}, 
   {RGBColor[0, 1, 0], PointBox[{4.088504635648359, -3.611914556260622}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.3838196084435417, 4.618176562914677}]}, 
   {RGBColor[1, 0, 0], PointBox[{-3.5063492709573225`, 4.864091282347282}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.7198468877563222, -1.6448688217518423`}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.681661143704318, -0.14106449221140593`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.2120162980963123`, -3.9173753984772084`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.7024308346378945`, 3.1068860825906057`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.5919763842050756`, -2.0946633947000404`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.4497821045417698, 2.1387821629973516`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.845004695120984, -4.046737343112337}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.7113703821957689`, -1.4390787036882724`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.844173902663723, 3.459340390520115}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.873534883226023, 1.671377288093769}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.6362881009259613, 3.1064255831717134`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.8990779473805013`, -4.503917504000379}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.594017359693353, 1.9945749364300056`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.8958106065146154`, 1.3954601733633574`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.85746109762235, 1.1301118715624163`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-2.2775343263489916`, -1.1020403637842016`}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.2521098479051531`, -3.520142593389025}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.104936370459882, 0.44877657989098196`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.126853998178355, -2.4632404138396673`}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.565497668444621, 4.238580585303328}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.5645182635404815, -1.495619834082305}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.8669274297936553`, -1.4795279127662617`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.5226586039800569, 2.1134682265568685`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.329475109738974, 1.4999903255218356`}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.302809187554093, -1.8347921342228464`}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.9517916121551018`, -2.134687952133545}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.239178899574405, 0.14917382265863743`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.456983454948963, -4.009904104993344}]}, 
   {RGBColor[1, 0, 0], PointBox[{-3.644378719034796, 2.834931144510385}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.0882409541522229`, 2.871338904900366}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-2.1216782852235205`, -2.3624928293026493`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.979147429683753, 2.6846138502747543`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-2.7097210368534537`, 2.897364749301868}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.209284477514881, 0.8192303960628529}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.5379737219724774`, -2.3645856907737066`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.256026189640412, 3.7607695254768885`}]}, 
   {RGBColor[0, 1, 0], PointBox[{2.0307721164141945`, -3.1107663627330133`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.131925488890584, -4.676855106300383}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.850630757388572, -2.898647155722742}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.7380710822715333`, 0.5753099557606927}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.8401289377549332`, 4.675622379012559}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.046896546709588, 0.032891965361818265`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.8094891331141358, 3.6241376768628406`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.5397796650664066, 3.3506810363135564`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.8478597437061026`, 3.080860162908561}]}, 
   {RGBColor[0, 1, 0], PointBox[{2.1697939124689256`, -2.245661836152209}]}, 
   {RGBColor[0, 1, 0], PointBox[{2.293938220801767, -2.1999265280512255`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.514996664759394, 2.189196879281841}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.877528458450307, 0.3939233645831841}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.5199268654805351`, -2.8532222148667756`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.2244435602553168`, 3.111970967100465}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.509166756281285, 1.1697245554748505`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.05682000599879622, 3.2015418723066738`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.26351356422852135`, -1.816826122403432}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.2021470959262288`, -3.6435171955852645`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.924826761877462, -2.955163080996053}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.4946593039858662, 3.4668331760574915`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-4.509669653170793, 4.969390946908824}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.8272414428155397`, -3.179662887185369}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.8782597535588366`, 1.3940502447126804`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-3.1646989584363467`, -2.7452719277552475`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.2010114083397276`, -4.736511006061239}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.6696278102599962, -1.6862218594076452`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.0902554756175, 2.050465851071319}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.138621596324139, -2.792005612199846}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.7091161396042409, -2.289094415832496}]}, 
   {RGBColor[1, 0, 0], PointBox[{-2.2849442465480347`, 4.000971570860546}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.557738800394805, -4.346553907961098}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.673430156144175, 4.960562110494543}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.4062353704489983`, -3.758970230090826}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-0.051386604272781966`, -4.913551522596343}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.351900246845208, 0.49216688895847227`}]}, 
   {RGBColor[0, 1, 0], PointBox[{2.518208484825454, -3.284503354034264}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.0264218713059634`, 4.342517882840305}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.899107482712445, 1.790467392357968}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.7770739597635696, -3.9474854824715884`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.9995973495071944`, -4.04044280045701}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.0341940270305798`, 1.1511532252507237`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.33069238119565, 2.609930424602396}]}, 
   {RGBColor[1, 0, 0], PointBox[{-3.5640013916867392`, 4.125380364970379}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.5964854351168967, -1.8010392462141525`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.10674109120218134`, 3.679260395068397}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.0250554387844808`, 4.45790355086659}]}, 
   {RGBColor[0, 1, 0], PointBox[{2.223109111492086, -2.315997231819022}]}, 
   {RGBColor[0, 1, 0], PointBox[{4.670958426317988, -2.871815415227669}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.1575165938525025`, 4.044922813099195}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.358951361559196, 3.4565599155711233`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.0448632431027072`, 0.0555013693532036}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.470050646037903, -4.960477576154073}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.3092620676754265`, -4.152384247090325}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.3747787955728121`, -0.7512192576970289}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.2532651742148655`, -0.0386178453561552}]}, 
   {RGBColor[1, 0, 0], PointBox[{-3.125259690210136, 4.0028623152547524`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.5629319715097427`, 0.6560950612679441}]}, 
   {RGBColor[0, 1, 0], PointBox[{4.648234417056237, -4.551394785439468}]}, 
   {RGBColor[1, 0, 0], 
    PointBox[{-0.42414551171766135`, 1.7459822001943657`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.581290232861548, 4.388185290922987}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.1117347769451342`, 2.7594163096850153`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.7727872168710768`, 1.22845065644783}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.0896418918130877`, 0.43999043788664416`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.951343028356046, 1.2123190550880096`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.8669085088477253`, 1.6533760283521417`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-2.4921114734899152`, -3.4040827515030614`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.126626097001708, 0.6575250944126267}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.572382362116713, 3.013192339344055}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.9111009798669727`, 4.291989615366081}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.930480266520199, -0.0748677099183368}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-3.6446834393712653`, -4.2184542847096385`}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.6401035689310604`, -1.859834903855294}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.187488277457653, -0.8366490521158632}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.3548586371766813`, 1.5265060451328551`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.632735852960705, -2.034387242895143}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.11940063849379712`, 3.599861523353944}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.3809863824192625`, 0.6861554719403156}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-2.0466295069471467`, -1.1979318057423871`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-3.5404488138699453`, -2.9393419781524663`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-2.809165379457081, 3.567935749390056}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.34896329189197495`, -4.807230566086931}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-3.4500808645282106`, -4.5060924432449685`}]}, 
   {RGBColor[1, 0, 0], 
    PointBox[{-0.10778450621669577`, 4.9406583629839105`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.7047021090552903`, 1.1673926195571482`}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.953556614890161, -1.9023018818200388`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.3624668924739343`, -0.10771661716656311`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.923767724959607, 4.866515695771298}]}, 
   {RGBColor[0, 1, 0], PointBox[{2.872630021853592, -2.7364367832964565`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.269498824851004, -4.219330296230023}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.6762279434714138, 3.6098703348186874`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.168016432262441, 1.7113892744611157`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.8155044465800465`, -1.6142203351173112`}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.898967033561533, 3.423993819882952}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.911872057185361, -4.102363643473314}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.397564688953111, -3.9120616616935386`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.789170314865167, 2.264601643410373}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.7200281837199007`, 1.954515199684021}]}, 
   {RGBColor[1, 0, 0], PointBox[{-2.493415262782232, 2.4775980692099253`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.74585653651436, -0.9181448388748326}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-0.006732983831032158, -1.4218792884244316`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.16439862285357, -1.0024777306854933`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-2.1829349244999303`, 4.107722049908325}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.323318501741074, -0.4747838154354511}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.6031100618631733`, 2.9874920761152772`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.7446637271765493, -2.995735740026328}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.38672358417757735`, 0.5215656803721025}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.2992475370469556`, -0.8346933532956076}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.7402709507125032`, -2.373343818080505}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.792744159564899, -4.0233040624882666`}]}, 
   {RGBColor[1, 0, 0], 
    PointBox[{-0.25822170017105783`, 0.45223995316544574`}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.4455908898542233`, -3.0734570100454874`}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.093675183423731, 2.7153879019163867`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.8455078539669287`, -4.610165447166208}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.1935525468530166`, -3.934555226946685}]}, 
   {RGBColor[1, 0, 0], PointBox[{-2.5334652977294425`, 4.649172407048834}]}, 
   {RGBColor[1, 0, 0], PointBox[{-4.257207939517706, 4.02999250201162}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.86708796928195, 1.1744559674886617`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.383882283655719, 1.0666277223203657`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-4.424168939144803, 3.8288053165292766`}]}, 
   {RGBColor[0, 1, 0], PointBox[{4.866456097346639, -3.2457320773040994`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.35801218481263, -0.3152786668473251}]}, 
   {RGBColor[0, 1, 0], PointBox[{4.046118962282154, -2.4066311582242133`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.1347041067475736, 3.573990456534183}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.8130259691823731`, 1.4579316397074713`}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.756569779618406, -2.975200950608599}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.1063393912110868`, -4.825583632459352}]}, 
   {RGBColor[1, 0, 0], PointBox[{-4.90707622176914, 3.811045470708308}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.2873280812977814, -1.481843879694111}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.6676651826099267`, 0.25809868656904555`}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.481097687448784, 2.50787331936327}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.8142826233197766, -1.1537882616543698`}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.863363981591725, -4.5338937687084435`}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.7028171238445928`, -2.529704129955622}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-2.4023283622587055`, -2.2683204290452395`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.9026665585397424`, 1.5645592645636555`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.567571340863834, 4.3361260991042165`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.2132378365806726`, -0.942176125570203}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.698082247656966, -3.1014861608334794`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.553818802043347, 0.6403258215845593}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.2384494621728095`, 0.8827745988634526}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.9555200323938724, -3.7441675553368174`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.8647330581523, 3.78303939802068}]}, 
   {RGBColor[1, 0, 0], PointBox[{-3.767412112873341, 4.862393372375031}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-2.2466572913509797`, -3.0118040195973528`}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.767726372083029, -2.0767777719585983`}]}, 
   {RGBColor[0, 1, 0], PointBox[{2.825213917586076, -1.7716536147310116`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.9052467300962768`, -0.2728035517523857}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.8492032998674084`, 4.063498274012193}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.3778746121067726`, 2.337008934995467}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.999876984252019, 3.0961137840031547`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.154581572238449, 2.4248388484540975`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.0472132993182584`, 1.8183181797528185`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.7966699924630731`, 2.9143368535471588`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-3.094291783351057, 4.505240516793595}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.9676055057005435, -3.245982571360779}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.23845389228117497`, 4.723935588810029}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.933261400311512, -1.1876682271521144`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.8438553733322927`, 1.741278338338656}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.969428564937218, -4.522892172949533}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.4845922883893152`, -0.639507291134155}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.9599385274792951, -4.365650076324627}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.570642430155516, 1.342149651745494}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.539059904935657, -1.9300071144655977`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.4974613466942372`, -0.10253064475833895`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.5959304041354798`, 1.754384972764182}]}, 
   {RGBColor[1, 0, 0], PointBox[{-2.230889553439013, 1.6533051850016918`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.069243342056211, -0.36389117511592417`}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.924837352755787, -0.03954676415102831}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.8871421180847054, -3.3718357723361}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.9039751564112777`, 0.32419730390035184`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.1949319302735475`, -2.193985539114699}]}, 
   {RGBColor[0, 1, 0], PointBox[{4.791120974230708, -4.06713272406957}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.9353588858297286`, 0.8758825989767498}]}, 
   {RGBColor[1, 0, 0], PointBox[{-3.705488654352516, 4.204724772489417}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.671934667299894, -4.546364417489881}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.4741469095142303`, -2.933436901725111}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.2508168858210986`, -3.966220146569114}]}, 
   {RGBColor[1, 0, 0], PointBox[{-2.963983913793836, 3.5353964486685143`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.639398842577954, 0.16194340659709283`}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.071372995265918, -4.8170718518496685`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.8398653953381707, 3.1713497464716625`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-0.16647281855498086`, -0.8922512526909081}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.673358970576569, 1.985241353018921}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-2.1353086406114627`, 0.41424557856509026`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.1090439719330263`, 2.8201821409116548`}]}, 
   {RGBColor[0, 1, 0], PointBox[{4.72055467565821, -3.681589999204631}]}, 
   {RGBColor[1, 0, 0], PointBox[{-2.8950451645683035`, 2.3986918655562945`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.1862000916731645`, 2.1298130186487683`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-2.1581807727796036`, 4.219884564360608}]}, 
   {RGBColor[0, 1, 0], PointBox[{4.887983381058856, -2.710785946298074}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.7092813906803652, 2.945617056540943}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.333635401224868, 2.729725105964203}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.97313496752097, -4.897444511998245}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.7223087663238204, 4.233406561914389}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.069445457874444, -0.3649030158240123}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.5812805724886694, 0.2370940321009467}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.6530014896291974`, 3.609110001852038}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-0.04012649023106363, -2.1519709814075867`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.4216809764375036`, 3.280305114710657}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.606611949071862, -2.442552717712667}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.612344230036765, 0.13862632647898465`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.4051430334718695`, 4.558674208742012}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.9551888850066135`, 2.8254354086809492`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.248409747103274, -3.68303119477903}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.11167312305548, 0.8334603298178465}]}, 
   {RGBColor[1, 0, 0], PointBox[{-2.0126590748493243`, 2.656360712427727}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.312708301950698, -1.084974347423044}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.645703643577395, 0.4411565316850421}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.0446741967067865`, 3.9255023993004983`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.8049350288274759, -1.684108314195651}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.906061243856822, 0.5654213601876563}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.247299297900785, 4.829456081757414}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.81438234628607, -0.12130647013130158`}]}, 
   {RGBColor[0, 1, 0], PointBox[{4.45682454380924, -3.8536135024493916`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.0551666190674354`, 2.540263348761023}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.7331505773396358`, 1.8179654545599}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.811262555154329, 0.3046438737701411}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.492419136904328, 1.9764245354273733`}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.326510266455308, -1.3292049111366762`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.965691208580253, -2.547628770088755}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.7268626193014036`, 2.34221033180393}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.975903691774052, 2.8321119666173935`}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.156200634690123, 4.089030581670158}]}, 
   {RGBColor[1, 0, 0], PointBox[{-2.205710023309429, 3.898095820375257}]}, 
   {RGBColor[1, 0, 0], PointBox[{-4.036722395833008, 3.9536330637107824`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.6147571122397224`, 1.6517678738707922`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-3.6336581013542517`, 3.148217157466707}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.1159432635155326`, 0.6699690826375821}]}, 
   {RGBColor[0, 1, 0], PointBox[{2.514861527232476, -3.8183731712958373`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.9935994416596614, -4.388184200798662}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.4059748813546253`, 2.0705938430006086`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.6018889746865863`, 1.9278156490325173`}]}, 
   {RGBColor[0, 1, 0], PointBox[{4.496519856636571, -3.4250094959976565`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.8024142044246503`, 1.1762078652264876`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.803395474296517, -3.23814957779539}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.9026408444449316`, -3.452276144603239}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.4534904932775863`, -2.207497634751256}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.456473098626319, 2.838613655742204}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.7864309625525223`, 1.9173335246551844`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.9631030651785153`, 0.4763125157647412}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.7686357125033343, 2.097033835279092}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.6107644853313374`, -0.2559625042524889}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.488515832529135, 4.416642403456411}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.6415531461409074`, -1.790432586161474}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.445404261520096, 0.46806181837060734`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.21806385332000922`, 4.053322011543479}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.084613644051853, 1.957005903221365}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.745071366198076, 0.8901419857729937}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.138482688961089, -0.7879345732883873}]}, 
   {RGBColor[1, 0, 0], PointBox[{-2.907819687572273, 2.953371149887694}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.4107905145280526`, -4.848838997706542}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.803620997805192, 0.20948121444502021`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.0235363624548413`, -3.5928781203435545`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.1967896311017867`, 1.4980450206245344`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.37519767157213124`, 0.491352460054328}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.397524219217136, 1.2769557014778563`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-3.2100168916980074`, -1.1337610780740945`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.202053148680637, 2.7515651195665605`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.003993395019330492, -1.404921321631619}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.238794964645379, -1.9558597520881023`}]}, 
   {RGBColor[0, 1, 0], PointBox[{4.916567413036393, -3.1105337515650824`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.064513686281174, -3.1527476105926073`}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.1090990593038939`, -1.393186896346986}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.598263044424515, 2.529030682259574}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-2.6907214587783095`, -0.09522989913020474}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.5072855668110776`, -2.0046648339445454`}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.931652911998338, 4.71524119483411}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.9301066010774335`, -0.9752589770351499}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.5511514249758349, -4.255044351876865}]}, 
   {RGBColor[0, 1, 0], PointBox[{2.025923302447989, -1.1866369913460488`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.8755417345124403`, 0.38809191024192913`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.756843515151941, 1.7192518139325017`}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.6341575830158064`, -2.010997975747159}]}, 
   {RGBColor[0, 1, 0], PointBox[{2.3933267634038486`, -3.1449196635941092`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.6240048793647777`, 1.58052382601144}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.740444712535904, -1.1365385975086557`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.744010174019367, 0.16027081435728263`}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.858651410815334, -1.7527460311714638`}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.07751113126267484, -2.7297957763284373`}]}, 
   {RGBColor[0, 1, 0], PointBox[{2.338850853696812, -3.6146545792740916`}]}, 
   {RGBColor[1, 0, 0], 
    PointBox[{2.7962457694179292`, -0.27515278362828255`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.9744356628856448, 3.012027613709815}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.6557962744605916`, 0.6673658933377435}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.8486743775233112`, -1.4274630599896732`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.3426158618093496`, -0.7525483576738274}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.4833713336864935`, -4.959884433526003}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.377512300913569, -2.573814570125135}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.743618011625525, -4.20181400939736}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.04913893579494122, 3.2987872057609238`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.495349766431353, 0.7524656333644746}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-0.035371475002284214`, -3.6135970200121434`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.0574237661249413`, -1.6474699590571689`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.4987938970383539`, 2.6357816285309177`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-4.194742066234895, 4.791617545804659}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.4892996525536137`, -4.8207268612374}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.8015094029398924`, 1.172785856525529}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.8619100848028651, -3.0428268538679824`}]}, 
   {RGBColor[0, 1, 0], PointBox[{2.776314764387518, -2.196519075035553}]}, 
   {RGBColor[0, 1, 0], PointBox[{2.1410775777868167`, -4.459054582276503}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-3.0160901105377604`, -1.2346092163562776`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-3.94371948562004, 3.027172850147977}]}, 
   {RGBColor[1, 0, 0], PointBox[{-3.446462685424283, 3.3202059570826776`}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.526965716082202, 1.0615783798224712`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-3.5610202762190646`, 2.9239259473920534`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.867058543059315, -0.22924427010212156`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.3168470795365756`, 0.09295756991651416}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.166106187249973, -1.8390135171055988`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.658645631204619, -4.61531275319097}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.84380962498164, 2.0736327553343443`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.10472006417685797`, 4.223551791009946}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.05176218225721563, -3.558655645182027}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.3198298330710241, -3.63688183471152}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.6190162287284728`, -1.8979103582229548`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.9946832273338124`, 3.1427832983448667`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.9213718227285295`, -4.571410296037728}]}, 
   {RGBColor[0, 1, 0], PointBox[{2.6053582818206635`, -3.429424767460711}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.0149806427931374`, -1.7281080581256276`}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.1082799251544735`, 1.604455177610287}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.53029088579974, -3.1873708881729854`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.889986271386622, -1.8804528922703412`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-0.48293496941472114`, -1.6462334485817038`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.248939737516876, -1.578380071429093}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.469775640291182, 1.519078187043128}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.3473979481495633`, -3.0100952079671615`}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.905089940006107, -1.590921850872821}]}, 
   {RGBColor[0, 1, 0], PointBox[{2.0805147677943054`, -1.6419860621385034`}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.231151266902689, -2.520605931696407}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.96125278952106, 0.06700494611663288}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.151407620450268, 2.571200477797838}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.1607911384262195`, -1.477297364046441}]}, 
   {RGBColor[1, 0, 0], PointBox[{-4.149601680787319, 4.814369530360203}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.8777900521085336`, 4.748346624285318}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.6327137919802901, 1.0907519114014512`}]}, 
   {RGBColor[0, 1, 0], PointBox[{2.8158851861643655`, -4.233412945098433}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.3604098398663691, -3.285964059729098}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.9547432881442575`, 1.0493710899569493`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.989698593541533, 0.7413912793969235}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.977095180854732, -1.057294980828818}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.540424677946726, 2.1922049718537124`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.0467288959805323`, -4.461254986762986}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.9094533028976208, 4.109056927139285}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.587674799893769, -0.3982617668260495}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.3195913802689674, 0.6849339023485417}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.883792481121958, -1.8765068245377936`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.815299016185648, 1.1592551474202324`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-2.1417345078038643`, -3.2728796077951845`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{0.46029915438951186`, -0.48695965263828533`}]}, 
   {RGBColor[1, 0, 0], 
    PointBox[{0.25804221144634454`, 0.38727794243363256`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.1486931662243087`, 4.886830184586561}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.521952485927187, -3.416497617641559}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.124799000046552, -4.340993881044842}]}, 
   {RGBColor[1, 0, 0], PointBox[{-2.9020420190942886`, 3.4357140497989356`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.1955755290357715`, 0.5426871463709038}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.0433267387551162`, 1.6346137410801873`}]}, 
   {RGBColor[0, 1, 0], PointBox[{4.163951978983146, -2.24762536081953}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.4511412935079235`, 3.106926959553938}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.2528157268937647`, 3.856998656775122}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.402296062698152, 2.162908586919329}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.9806845813784335`, -0.9276661120686498}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.5837301818513225`, 3.207911838114523}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.007347296091261, 4.485069229251216}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.697869561405632, 4.604571092052634}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.8708984821664156`, -0.6667682363876448}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.5562086175392089, 2.948791069280997}]}, 
   {RGBColor[1, 0, 0], PointBox[{-2.696604900273062, 3.209621671318555}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.644303702564459, -4.356652175878743}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.292335508730936, -2.6703691634937563`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.8183525790119646`, 0.0728728587668197}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.166208792357363, -3.667863507939426}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.082110946712504, 0.1898318861325592}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.9530224399133758`, -0.5314573828728779}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.397693174932979, -1.9380217896002794`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.3747326713573287`, 0.44294609342124147`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.252622378713655, -2.400553043098885}]}, 
   {RGBColor[1, 0, 0], PointBox[{-3.8605752150790646`, 3.372637869175584}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.7750265989332306`, -0.651948933217195}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-3.2429040034720824`, -3.5507982819697084`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.2240691120325025`, 2.219863707613836}]}, 
   {RGBColor[1, 0, 0], PointBox[{-3.885853355348903, 3.5929156507434676`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.5654004724857273`, 0.2646232741184207}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.205180631572723, 0.15095115581305407`}]}, 
   {RGBColor[0, 1, 0], PointBox[{2.4093110257514248`, -1.9127080346891603`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.573626678577842, -0.6749610144328866}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.4808854754979457`, -4.440677770424621}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.388294250527359, -2.021488196273829}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.372728293528535, -3.9031159209328443`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.4466890890619517, 1.5003469089875345`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-3.3648995069532006`, 4.432876521786582}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-0.47693122945340605`, -1.9807304794006182`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.4582559663078474, 4.373809254580209}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.2806808997286225`, -0.898682752164639}]}, 
   {RGBColor[1, 0, 0], PointBox[{-4.995907875306674, 4.030274453744926}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.784697112362906, 4.67990287422349}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.8042012273905357`, -3.6314878041110354`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.0543161374205283`, -1.290541958838256}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.591105616395593, 0.42394357471494004`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.342808904937055, 3.20863625155274}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.5738653060311822`, -3.535475568866504}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.1382094230548923`, 1.0121368939097621`}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.586490453806416, -3.2049429393661395`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.163059830667649, -2.6617243527677807`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.275298699579203, 1.1642946443854783`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.3671661441819243`, -4.405804734459036}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.1102728312498957`, -2.051060708996763}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.01586829494980968, 3.128294164426851}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.6310624249690306`, -1.5695676678613992`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.97661021027902, 3.8392481352352235`}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.9205696862202029, -2.630323929333775}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.3206656452364598`, -2.1946374867163527`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.860111616338319, -0.04117186115781024}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.895748618809911, 4.646534183160796}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.1264246464769005`, -1.287951898382362}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.574535051848592, -2.269733250538943}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.5523090792376735`, 1.7382254317329995`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.230656514941396, -1.935590385109709}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.002795404414975, 2.1440860734642797`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.6734063314866816`, 3.246801244445283}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.4145781393459682`, -0.1387989119954991}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.053449474908287, -1.0968676977774798`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.7706011496942544`, 2.533291445553754}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.876023286016727, 2.2631750694422834`}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.5674649795083564, -4.275850147361616}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.49083919302850454`, -2.861433042435806}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.567091124586227, -0.9047585486059297}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.3974343082715759, -3.308642255260761}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.520387804288699, -3.5003309627294357`}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.5220318129372874, -4.543287875046435}]}, 
   {RGBColor[1, 0, 0], PointBox[{-3.2722449279270016`, 3.210881719174022}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.927373803197817, -0.5839474343299322}]}, 
   {RGBColor[1, 0, 0], PointBox[{-3.1080782709954846`, 2.385202009741878}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.5039322406870674, 4.366753162457176}]}, 
   {RGBColor[1, 0, 0], PointBox[{-2.5319503521870264`, 2.592608573338797}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.23442472742252107`, 1.236938547764435}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.2230198177968106`, 4.502769390573956}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.2759880934476673, -2.04106597338936}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.528975615457478, -1.7121350228502568`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.716898332727137, 0.07399454890370372}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.550701134759148, -1.9427901883376215`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.075860299919418, -3.532843128423673}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.642229402623194, 0.1167533131864289}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.3412619006230422`, 4.235701794025665}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.6123064567184002, -2.5485652039404947`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-2.066619823799954, 3.1903162530747124`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.913080201806979, 2.308213090548044}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.5659777113366573, -3.4248076399268523`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.4258536734098044, 4.156049722231007}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.3347207724780894`, 4.015456036841524}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.145668359992138, 2.653294703077517}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.403628996497719, -4.413539617100222}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.646808730956911, -0.5902136532548958}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.8834809003190323`, 2.635980621831216}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.8950117294631301`, -3.8389156190176017`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-4.211915716820858, 3.3458510294463615`}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.4657343380309555`, -4.898245246000602}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.0424603779331871`, 0.7814818982065184}]}, 
   {RGBColor[1, 0, 0], PointBox[{-4.389010658160043, 4.2622727260845}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.7623681825027475`, 3.9237278560802515`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.302340789428708, -3.095517479747457}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-2.2279366122618676`, -1.4014767337794947`}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.445153604270132, 1.8278976517224486`}]}, 
   {RGBColor[0, 1, 0], PointBox[{2.233097732041955, -3.1250548419478523`}]}, 
   {RGBColor[0, 1, 0], PointBox[{4.582399896061794, -2.7989731950010857`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.920996250592978, 4.173600812036991}]}, 
   {RGBColor[1, 0, 0], PointBox[{-3.31781346699157, 3.1247250213052595`}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.382160985301027, -0.9539493166723609}]}, 
   {RGBColor[0, 1, 0], PointBox[{4.751245702851609, -2.8739116770676887`}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.1936909654093242`, -1.950430752411009}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.42139064552194583`, -3.910044263042}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.785377002664664, -4.233322764373032}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.88011760519338, -1.5988402654650091`}]}, 
   {RGBColor[1, 0, 0], 
    PointBox[{-0.32552150236428545`, 3.7987371062878204`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.420180930850691, 3.588900858785486}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.55334524542571, 0.7038966759564236}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.416153941032427, -1.5959365960347718`}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.4714627890004781, -0.22075982645587366`}]}, 
   {RGBColor[0, 1, 0], PointBox[{4.140294907641088, -3.4288122460604065`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-3.425809704577274, 4.12603537294304}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.4099367374609244`, -3.677503200211527}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.7320915423458754`, 1.7890121648724673`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.173214519742217, 1.0310628556336319`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.42528120925759794`, 1.9420026682043172`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.1587329809652402`, 1.7805267914706597`}]}, 
   {RGBColor[1, 0, 0], 
    PointBox[{1.6422090279009751`, -0.47547292508027894`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.4492846690868753`, 0.5564641258075653}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.831004655851288, 4.399843740402108}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.492758838486765, 2.3938191957287174`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.1773697638006624`, 4.505480548203753}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.9813212338441026`, -3.1821071614888154`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.5722888401159807`, 3.5270527163322853`}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.7295202002326455`, -1.908249186460889}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.155734948636951, -2.6054099202891496`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-2.9022783659202904`, -1.1308146123090967`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.196608734621126, 3.2161457221962237`}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.4399606413794714`, -2.077770640351666}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.23872254691731953`, 1.016673035992845}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.628767437301146, -1.4134449291749878`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.294637439303404, -4.357862795948957}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.105337337532083, -3.8388620013332293`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.743588599002599, -4.827289353551944}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.235655128823451, -3.2959064460658656`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.830139357190479, 0.47457734662844864`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.561124667594445, -3.137905401368471}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.640616448506586, 1.8815697686966644`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-0.18077580333806864`, -2.0064888586821343`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.9142389958706723`, -0.4850296401109855}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.7498979810291466, 3.1979256583400932`}]}, 
   {RGBColor[1, 0, 0], 
    PointBox[{-0.11442121597640309`, 1.0402571740202902`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.2934193950270654`, -4.430793728661122}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.780505721792032, 0.8321689567627466}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.1642880367639776`, -0.3161857744525918}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.0442015750685485`, 2.2704121996142526`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.7527620908851596`, 0.16513270149167703`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.9584565686901563, 3.437368461407207}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.729834177360395, -0.7451058761361917}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.8059918776371582`, 4.238425766595412}]}, 
   {RGBColor[0, 1, 0], PointBox[{2.5139283711055285`, -1.5001014419797087`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.2851995325462866, -2.274016755972589}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.450595937649329, -4.178947220499218}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.1784198610005205`, -0.6024658339901343}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.3805376027348153`, 4.014632837997183}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.02095238562854, -2.6961627312275596`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.6233583912633431`, 4.833711092683025}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.1534431417242175`, 1.9192210943566366`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.2167567633321035`, -2.088662624412514}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-4.5887616549906785`, -2.3930068903795068`}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.7792645598215486`, -1.177440531861226}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.424976231277798, -1.4350621026077661`}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.736031318821354, -4.5131149972802085`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.740659534919903, 2.7758832769389663`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.6494878665920787`, 0.18098260855477832`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-3.2149684198260164`, 3.7763136367155425`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.5169484115472365, 4.0472904683912105`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.404858813411604, 0.04321841770886792}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.1604534556551904`, 0.4907325206605755}]}, 
   {RGBColor[1, 0, 0], 
    PointBox[{-0.22282265486573571`, 3.1451230708281983`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.13254061984799037`, 0.5937267564516375}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-3.4222320589045765`, -3.4104415215242128`}]}, 
   {RGBColor[1, 0, 0], 
    PointBox[{-0.002774751471042336, 2.9976208902488253`}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.650526081655908, -4.187619452438696}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.9668874799274825`, -0.6717393883751157}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.3706438386716933`, -3.8934686248116}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.022831075399985, -2.4008702322707975`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.2705148951690575`, 0.8975639789766277}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.678162289207252, -2.5564307470550247`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.466286337529365, 3.208181948491813}]}, 
   {RGBColor[1, 0, 0], PointBox[{-4.678120763161846, 3.603571593730173}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.001376087089083, -4.793185184486857}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.837927048981861, 2.0671140510246957`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.7922853444025328, 2.0435230950306433`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.3639211286081299`, 4.924397655574992}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.8079258849925, -0.6226764140550607}]}, 
   {RGBColor[0, 1, 0], PointBox[{2.942792715043968, -3.2091936467031807`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-4.836808811586025, 3.731788003878652}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.7589207783269902, 0.7244112452119378}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.23596729839503006`, 0.5780860038829445}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.8211183543467655`, -2.636748427200571}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.821368921431212, 1.316250323664967}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.771915602287873, 1.8797407936549746`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.65199829025126, 4.884999783286791}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.603792883797313, 2.7278762052549084`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-2.1669318224806045`, 3.1914467333778624`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.8724480994013124, 2.8038967427189547`}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.3759258173616082`, -3.0755167533934546`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.0623019884171363, 1.1531701852386753`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.368669018741784, -3.3931147721194463`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.9388067130453095, 4.896038303098461}]}, 
   {RGBColor[1, 0, 0], 
    PointBox[{1.9373833092676698`, -0.23627413393797703`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.80367575655454, -1.186142303975421}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.052698599677555, -1.1708213720598}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.5327212391622425`, 4.754131185032392}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.4728477339087078`, -1.3381595699306086`}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.2945507303647155`, -1.9551822734040805`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.445342775545555, 3.261343131122395}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.5794959960371955`, 3.626896460824465}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.70125641881193, -1.535043229689304}]}, 
   {RGBColor[1, 0, 0], PointBox[{-2.6939719704660128`, 3.935182195902396}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.6945105444524202`, 4.8681183051444705`}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.8445518097342593`, -3.817328986533603}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.962034489386248, 1.9093004193305454`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.568546684185261, -4.8262901106803024`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.8580107977263403, 3.794391428563312}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.8037359035509297, 4.212853198317873}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.9607693858905186, 0.58834349890871}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.294690523738414, -3.736966071965087}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.1662325676001757`, -0.3679359667550166}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.7141610149613982, 0.7093407161639576}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.6047580833091803`, 1.414996264394528}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.144140411862171, 3.1124373802486502`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-4.916550544900705, 4.570790770411929}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.02546269861433, 0.23573697804931193`}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.9179111283396715`, 1.1064287653096585`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-2.0324562539059734`, -2.7876989604282905`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-3.3932735022117306`, -3.6124399035698893`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.612249466616243, -2.286886886922721}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.0623453500562583`, 0.8995236842709602}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.597074745772808, 3.702472491402723}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.8190632395673862, -3.925853534421046}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.999493417119309, -1.458854032555779}]}, 
   {RGBColor[1, 0, 0], PointBox[{-3.9526873249796495`, 3.9320167965211503`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.23877722284384, 4.152445222141257}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.851839075691082, 2.1469401042119713`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.564034690397545, -1.7780081876678882`}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.048970582199409, -1.597328134128917}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.698163007445242, -1.2526563044970267`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.9937880149249256, 3.276872464957563}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.122431102139892, -2.0558768758292096`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.994955887707629, -1.7573207546887204`}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.291111576994979, -4.244178747959442}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.9294348712533917`, 0.9747598715898107}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.532654087860049, -1.123216046581037}]}, 
   {RGBColor[0, 1, 0], PointBox[{2.763534764063632, -1.2641298058043748`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.4272147913961568, 4.05664841775269}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.450401936413863, -2.9293593618160223`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.07697655624642863, 2.7535009280882683`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-2.2060619872542393`, 4.319357384062382}]}, 
   {RGBColor[1, 0, 0], PointBox[{-3.401205255294675, 2.942741397398432}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.9282307421147493`, 4.245444769370998}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.2136584562245751`, 4.48624309294004}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.902560644868595, -1.569756038830839}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.3242232060484582, -4.8410965187143695`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.9860869375207741`, -0.4796218551500093}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.474996513609632, 2.6948837298504635`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-3.857579014800688, 2.961284844725416}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.13784188479141, 1.0539499643166153`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-3.8262036003849165`, 4.779535993201261}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.46181782747265, 4.5818082358378085`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.226116846572838, -2.924665956378492}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.5178106735118284`, 1.4806709902220945`}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.156247334978456, -2.625986317264852}]}, 
   {RGBColor[0, 1, 0], PointBox[{4.374335804657552, -3.6590978427963723`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.8635135136854881, 0.744653281332063}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.967165281224986, 3.6447311351761584`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-0.48901217133247243`, -1.8656048919891628`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-2.8947174667668936`, 0.11493647934434392`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-2.397018932738442, 4.779784047211869}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.7955280392653474, 0.13986180116924096`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.3983301247118334`, -0.4813945548676202}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.001493755979375, 2.4046894714630582`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.6313107775782427, 3.805019751476202}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-3.0790877610297827`, 0.029706537522169896`}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.5314562627135437`, -2.7533013057649764`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.4975745911872522`, -0.822249342205426}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.3483381956891662`, -3.60385916896443}]}, 
   {RGBColor[0, 1, 0], PointBox[{4.714542081248364, -4.675052681161143}]}, 
   {RGBColor[1, 0, 0], 
    PointBox[{3.8200201712990633`, -0.39314773865426744`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.216077200544035, 1.9642941611816767`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-3.6203293863452917`, 3.4310586316364287`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.6780257005530395`, 2.291522750343308}]}, 
   {RGBColor[1, 0, 0], PointBox[{-2.9263555095802367`, 3.2129466352424707`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.899235783522446, 1.4438766507268888`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.158436857619014, -2.2920687227465724`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.5126494602446776`, -0.9776729413201597}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.6560857186910294`, 2.410503776879686}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.8071770751269192, 0.8721442324804478}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.053344828424094715`, 4.573023772191199}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.2710119417549155, -4.710900020737192}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.5425539091200982`, 0.2505453083449716}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.756116475411318, 3.424618513982402}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.6502545526760883`, -0.9967846401959655}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.8038619290531805`, -2.446049984238737}]}, 
   {RGBColor[1, 0, 0], PointBox[{-2.6481573128011267`, 2.6325591818352976`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.849957270600502, -0.15416711981693965`}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.9314585895460841, -3.098333509736431}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.4722597561211757`, -0.9942361966315296}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.191595254228801, 2.9757355627665945`}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.12827636371555862`, -1.69718071842299}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.241706310125249, 4.075953375061609}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.92158628546178, -2.6023834536916723`}]}, 
   {RGBColor[0, 1, 0], PointBox[{4.6806046903779475`, -4.529431416713564}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.297749802581098, -1.0623686157150019`}]}, 
   {RGBColor[1, 0, 0], 
    PointBox[{-0.31828741395018056`, 3.2186080375264474`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.9628909038997904`, 0.17511438595944284`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.29824915881483, 4.426313287065103}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.1520897318982364`, -2.5803764951504338`}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.40300159000779, 1.7064589342758403`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.7642291060416397`, 3.6035785340229864`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.0129671651865184`, 0.1874064415706158}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.11916983764489508`, -3.546537203537767}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.3065423657309196`, -2.499638101704795}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.067940843933762, -2.39260505167473}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.779631022394792, 2.267144023399588}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.097360492920103, 1.6418049410947155`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.605606548880747, -0.012612465311171661`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.993208326457161, 1.3326017463726245`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.9736274049626026`, 4.327340721353295}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.587015370103469, 4.85248050665524}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.824991291006711, 2.805235384242085}]}, 
   {RGBColor[0, 1, 0], PointBox[{2.8922992795635984`, -2.990819741879168}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.644128781613869, -2.676243058722312}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{0.29051184609534886`, -1.5292076358824787`}]}, 
   {RGBColor[0, 1, 0], PointBox[{2.072669276240177, -1.7745489279656734`}]}, 
   {RGBColor[0, 1, 0], PointBox[{2.6956764027909266`, -1.5884048385606562`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.5308025866234605`, 2.841724699700041}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.5777691443611683, 4.670040270010883}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.4348580758688172`, -0.7057644463903952}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.398223561326869, -4.306610431913828}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.4108239619210874, -0.551662547909606}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-4.1199771815025485`, -1.9391813284974457`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-0.38146525652294194`, -0.5006863281485252}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.560072331003973, 4.194648587179437}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.3262446198659958`, 1.8819719728423472`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.8706247310304747`, 4.894480696969097}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.8844596100907083`, 0.20916120450266718`}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.0628265502358687, -2.069670180639136}]}, 
   {RGBColor[0, 1, 0], PointBox[{2.011076854529666, -3.7518020373601946`}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.399767994418372, -0.9018070639432736}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.1895435031739225`, 1.533260708443784}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.1317265740802576`, 4.5395298814722445`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.463810831005201, 1.6449662448937161`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.1905096681429583`, 4.818423864057312}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.2593290326581545`, -4.943313227738937}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.5836017356587213, 2.5111360569344114`}]}, 
   {RGBColor[0, 1, 0], PointBox[{4.642187842667369, -3.3937034220718267`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.1281010667823939`, -2.190740155335453}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.924505553691235, -4.296319881742466}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.9762741164633475`, 3.773828670753673}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.5341209085024126`, 2.085433807712228}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.170419625914761, -1.4656042594432463`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.8755835249454123, 4.777060905102289}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.5445040865813855, 2.535920560048467}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.0795299698365426`, 2.345755690053597}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.2563078322714176`, 4.380325512577549}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-4.0786261525867005`, -1.0313578099159475`}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.037187977737453, -3.7271124591796774`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-3.7174522788816144`, 3.4062418246697312`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-3.4408190568794694`, -1.7065212686802482`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.978956913365479, 2.224930649188593}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.3593762027674643, 1.6946008995120572`}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.032563081792745, 1.7214650250044414`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.4273624672683347`, 0.8915542968889678}]}, 
   {RGBColor[0, 1, 0], PointBox[{4.29810701762764, -2.1353411048810838`}]}, 
   {RGBColor[0, 1, 0], PointBox[{2.6241327165363373`, -1.168556408380656}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.7692539532400566`, 1.9297683154353322`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.205926172067304, -0.39150564723866843`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.3249951492706096`, -0.01794288233630148}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.804157622450301, 3.468675882866531}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.1487311922800103`, -0.9439603870071789}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.9207123854381365`, 1.2493979212596855`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.172408085224159, -0.41793539783682654`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-2.6018708248170377`, 3.664392773360234}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.08686355251283473, 0.9846119135335947}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.4458494119018965`, -0.9974393747144994}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-2.3597499390859777`, -1.7648077621241587`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.6439065865991722`, -0.3210887126825597}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.875102469422199, 1.3508048567204582`}]}, 
   {RGBColor[0, 1, 0], PointBox[{2.3819749877252683`, -4.028636243243543}]}, 
   {RGBColor[0, 1, 0], PointBox[{2.2037410307497574`, -1.141749490609719}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{0.24926385429498055`, -3.6857681083505014`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.8683402952295864`, 2.308445251561494}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.105843977315317, -0.859864493034479}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.07422756399080299, 4.17765544139861}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.474992237894609, -1.4197305488845835`}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.3133202405572995`, -2.3814331751342266`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.478430907060611, -2.9795133498051065`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.4695410691965094`, 1.2656151449687592`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-2.6142661984788713`, -3.3335920768747727`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.079756134923322, 2.7322741584925474`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.647715951952122, 0.6128134859259617}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.2921345660640995`, -3.7693485659416552`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-4.4860110997406455`, -2.9360785847183237`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-2.3268893293341737`, 2.90215194121928}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-0.15813594268183628`, -1.4189753999818873`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.866912083685584, 2.4776222154329304`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.182245407077204, 2.4547570683352724`}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.3407766700088466`, -4.580959451654989}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.9004574298748871, 2.5032574295962746`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.757816569003271, 2.5616984078888123`}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.0276157259332095`, -2.8651087111524163`}]}, 
   {RGBColor[1, 0, 0], 
    PointBox[{2.9782237022864315`, -0.12800378387017908`}]}, 
   {RGBColor[0, 1, 0], PointBox[{4.827733117288496, -2.2267978628449985`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.4874444671459806`, 4.1961631083987925`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-0.23269194648571911`, -1.2070441475156795`}]}, 
   {RGBColor[0, 1, 0], PointBox[{2.7345230897720114`, -3.7965706727937025`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.793179097498907, 2.400893171672813}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.2918362870785352`, -4.786585197642307}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.7862153906697493`, -2.1220757506897527`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.6459803694134436, 4.983196518734378}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.159966147306072, -3.4135565436941917`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.9395693084752921, -2.6947074746395003`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-4.493584520234258, 4.733227642175073}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.557072306340636, 2.1232576250199173`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.483842253618487, -0.6809113105343272}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.2111070087843654, 1.5173875579373828`}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.0864119767677636`, -1.4631646068796318`}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.44963559423385213`, -4.700645006491609}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.8827553419048755`, -3.4901009558565974`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.323149719502954, 0.31772255850816045`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.32275582363285, -0.18596396969396523`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.6134226153320412, 2.591654814398712}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.949775227862613, -3.6357456464872016`}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.2692384247059039`, -0.9495190441873405}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.9590649711675603`, -1.202525318824133}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.2598354345466927`, -2.466246841231026}]}, 
   {RGBColor[0, 1, 0], PointBox[{2.6217900449148033`, -3.282772364082966}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.3313382524150015, -2.133449935473781}]}, 
   {RGBColor[1, 0, 0], PointBox[{-4.39670106877543, 4.093261737958002}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.830392656645003, -3.5042324939236575`}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.6398853963166786`, -3.382894559690577}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-2.1342679559169593`, -0.17193037233787933`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-3.351503073922588, 2.853276173348501}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.3415706039635289, 0.8226977329216183}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.1185198335722646`, -4.532837614129017}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.584881144028788, -4.00191596577816}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.1561578105380725`, 4.768363518281415}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.410547559371249, -0.047262914296617}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.8505584344435224, 3.0186475599387457`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-2.9905496227542816`, 3.3921310694235203`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-3.5196338493111163`, -1.8294150207406474`}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.649337842167405, 0.20194329490522378`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.182324335912053, 0.017586530379979592`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.7244202800687845`, -1.5610437676639854`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.06383687229802959, 4.784593283357228}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.27693891184541286`, -4.753467445363546}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.328922581382109, -4.711069731227921}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.718738099306037, 4.686836507978057}]}, 
   {RGBColor[1, 0, 0], PointBox[{-2.0885878775104096`, 3.511523133120967}]}, 
   {RGBColor[0, 1, 0], PointBox[{2.0616328890891253`, -3.8496662341804395`}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.2488333298795808`, -3.50379817935503}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.5332053532162355`, 3.866806491755913}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.5335763440433148`, 4.021644504576756}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.851745059628632, -0.5584841912247818}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.798010476996772, -2.9508394989065394`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.1693516144737188`, 2.968657298499757}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.2144915350513958`, -1.2708059381695591`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.08940725118958426, 2.848217370200228}]}, 
   {RGBColor[0, 1, 0], PointBox[{4.850139082647644, -4.9788205258236715`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.879475672002254, 3.091267591929295}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.93321476663278, 2.0015096997361255`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.5580901822334177`, 0.5666078242001298}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.101766743778537, -4.844810883069588}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.3292728189987173, -2.018722944629337}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.4407943722652874, -4.29439472779576}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.4029335417696114`, 4.823690536482296}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.828660287492493, -0.3805654071738189}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.5069252066415189, -0.6088867371695361}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.482843948703941, -3.4664947907341883`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.45335972477735, 3.6975737758629244`}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.789364099087141, -3.8596237547890837`}]}, 
   {RGBColor[0, 1, 0], PointBox[{2.809861735733225, -4.157331161286574}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.2908876859001843`, -0.7461467992130153}]}, 
   {RGBColor[0, 1, 0], PointBox[{4.338909481735357, -3.8916401204164295`}]}, 
   {RGBColor[1, 0, 0], 
    PointBox[{-0.43202723601945614`, 2.4718196076395103`}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.03961663941088389, -2.4660702159583288`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.7417284054001776`, 2.7797280643320796`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.3235439792087078, 1.9799769458078735`}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.737342768279291, 0.5445753751237543}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.77285547820939, -0.2083920924079905}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.738903036671836, 1.8792820840568893`}]}, 
   {RGBColor[0, 1, 0], PointBox[{2.1212044303231288`, -2.9073874372155633`}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.1991361104402678, -0.5198818951406992}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.9941915485626929, -1.0319372567645644`}]}, 
   {RGBColor[0, 1, 0], PointBox[{2.521607717740469, -4.532683212352367}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.344035294952757, 1.5755668795098607`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-4.7575446876550505`, -2.8866287409213456`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-3.4605663493529626`, 4.697041842015054}]}, 
   {RGBColor[0, 1, 0], PointBox[{4.883086187755417, -2.338886288426341}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.1384022762138493`, 3.607032816006349}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.669438196059431, 1.5850134432829144`}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.3938523998299566`, -3.5271514812980307`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-2.638793715373531, 4.123491683697665}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.535505108965079, 2.0465774122326437`}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.6548525682786916`, -1.0118827459605413`}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.754115208721149, -0.10369996730318576`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-2.6391020137244396`, -3.8230274860411395`}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.469407913416802, -1.2998258178021977`}]}, 
   {RGBColor[0, 1, 0], PointBox[{4.471297429835332, -2.8975839055461865`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.2962416939191055`, 0.8396912807884256}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.1877931081558124`, -0.956617939818905}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.5724211887916333, 1.2542209231006431`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.523197610938334, 2.023722381569442}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.741511920801475, -2.0740452903454827`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.511210640095463, -1.4743627164843982`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.75823423581768, -3.966381006476576}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.020674897182596, -4.948047875116439}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.345802375017822, -4.485994500446706}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-2.4943565936667014`, -2.8761023586515773`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.6669793605649499, -0.256958699086379}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.355664179098559, -2.668905845733791}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.6799659358453347`, 4.681648612160949}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.827757192130324, 2.1348980822925476`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.9798055563014412, -2.7125354327125546`}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.325338487084835, -1.77520855855985}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.4501344831418947`, 2.8246750901760294`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.5382707530853885`, -3.840281336228383}]}, 
   {RGBColor[0, 1, 0], PointBox[{2.134905658296617, -1.0104404430637093`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-3.10085974671342, 4.0879225320681805`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.4571998449896384, -3.109304826851032}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.6390228104483864`, 1.8024248152794122`}]}, 
   {RGBColor[0, 1, 0], PointBox[{2.4018797925227773`, -4.788209384555632}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.8977480232714186`, -0.04227309699980353}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.0626916575938097`, 1.7183169045480504`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-4.899716062763817, 3.961261890661195}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.5584230880904801, 1.122268302404251}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.142066004199986, 2.6804321478677338`}]}, 
   {RGBColor[0, 1, 0], PointBox[{2.9353070968433705`, -2.926242030280404}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.0312420378664164`, 0.8592301869752212}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.803672512861148, -0.44038762140489496`}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.9446166710172896`, -2.442189283539273}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.7452483283155793`, -3.460037957984758}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.5577781761877745`, 2.907530053472126}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.5069482320431646`, -4.330638315182497}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.05030890255324, 2.1491625543224266`}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.391272296165475, -1.6860498973760016`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.0783464819197413`, 3.0487599226279407`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.17876031447382, 2.468857893928625}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.8309090253469655`, 3.958370840608751}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.03891671500909233, 2.8228951369309527`}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.382126810210707, -1.91388840465466}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.3262734725509162`, -4.745541150229318}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.3110884119031034`, 1.3679388821242142`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.6850520714768678`, -2.814829216896422}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.045851422438975, -3.2391415945769975`}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.289885228245446, 0.5163992986379746}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.7060683765627793`, -2.289966486234224}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.4071272269081962`, -2.7481291237217587`}]}, 
   {RGBColor[1, 0, 0], 
    PointBox[{-0.17981754705815156`, 1.5247199324799965`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.8839977707434237`, 1.4952705224620217`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-2.1521937438549905`, 4.923104141298303}]}, 
   {RGBColor[1, 0, 0], PointBox[{-3.6243114397083342`, 3.7526471114481517`}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.521612567984171, -1.1659079138847055`}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.767081632816815, -4.367060275582164}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.5806486849132728`, -1.3017582417162625`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.8937991019306537`, -3.009350267645697}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-0.0019045132481458893`, -2.707776131165696}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.3111100082105285`, -3.630130548047523}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.492407610282932, 4.7486731228687695`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.186177685601816, 1.7479157439307187`}]}, 
   {RGBColor[0, 1, 0], PointBox[{2.540891363641279, -3.5845365843335752`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.9064620512744987`, 0.5302044571229629}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.6186310202661431, 0.7621685409896166}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.6838663441696795`, 2.8115173342929083`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.0855530652077547`, 3.5632740954794215`}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.1563223223031152`, -4.702305589733433}]}, 
   {RGBColor[0, 1, 0], PointBox[{1.0755614351439746`, -4.727703197322306}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.193809001988573, 4.58118777606515}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.358634432934938, -3.0900907708922976`}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.488522336071593, 3.0353474000317853`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.6362839727551464`, 0.6137428896415038}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.0289973405506885`, -1.5512750659639192`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.4043656720796331`, -4.001300367170446}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.817638764807766, -2.8388870757213454`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.452867289874014, 2.8848389964581536`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.0755068298895125`, 3.922049082125291}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.988398676801138, 3.619697204042737}]}, 
   {RGBColor[1, 0, 0], PointBox[{-3.7424448747172416`, 3.727479609169368}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.946512777909389, -1.6945516133598453`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-1.7974698752293161`, 3.6554229738912625`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.996825049085654, 3.511656592420888}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.8045347828654705, 3.4621920654778258`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.0655058577593195`, 0.5265121467125677}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.840358848411146, 0.5762698949141871}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.7108275163754456`, 1.4075780745877928`}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.248307866634786, 0.043658518356613385`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.23290705347187313`, 3.741519867085124}]}, 
   {RGBColor[1, 0, 0], PointBox[{-2.0444038068010144`, 3.0039520539707993`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.192541422008031, -0.8720659607320851}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.8602240067060904`, -4.838658949635079}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.404486679332859, 4.632964724246463}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.110926096896602, 0.12445090460936115`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.344564312721559, 0.6661308950597817}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.806812316997828, 4.870307900568701}]}, 
   {RGBColor[0, 1, 0], PointBox[{2.524972145131187, -1.9875860293423404`}]}, 
   {RGBColor[0, 1, 0], PointBox[{3.048985905215563, -2.3289652016605196`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-0.11222636522377627`, -2.3125012288950195`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.19484495584058337`, 1.3733722722852484`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.4654515844706033`, -3.130816759704924}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.003819447450869262, -4.246428402375971}]}},
  Frame->True]], "Output",
 CellChangeTimes->{
  3.8196033635688095`*^9, 3.8196035977120886`*^9, {3.819603800568798*^9, 
   3.819603808053231*^9}},
 CellLabel->
  "Out[138]=",ExpressionUUID->"8016cc5b-0e90-45eb-a1f2-18a18c89a738"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["3\ttrain and validate", "Subsubsection",
 CellChangeTimes->{{3.819604109882535*^9, 3.8196041141588125`*^9}, {
  3.81960627918165*^9, 
  3.8196062797127285`*^9}},ExpressionUUID->"be8853a3-ce1c-48e4-b94a-\
40da0cfd248e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"netT", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"net", ",", "dataT", ",", "All", ",", 
     RowBox[{"ValidationSet", "\[Rule]", "dataV"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.819603397701165*^9, 3.8196033977051687`*^9}, {
  3.819603816005948*^9, 3.8196038196412716`*^9}, {3.8196039649835725`*^9, 
  3.819603965355438*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"92498d61-0ff0-4ac4-ae1a-573d6fe148a2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"netT", "[", "\"\<LossPlot\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"netT", "[", "\"\<RoundMeasurements\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"netF", "=", 
  RowBox[{"netT", "[", "\"\<TrainedNet\>\"", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"NetMeasurements", "[", 
  RowBox[{"netF", ",", "dataV", ",", "\"\<Accuracy\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"NetMeasurements", "[", 
  RowBox[{"netF", ",", "dataV", ",", "\"\<ConfusionMatrixPlot\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.819603403255774*^9, 3.819603403259776*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"b396cb67-1d08-4b07-afe0-d102f915bf66"],

Cell[BoxData[
 TemplateBox[{GridBox[{{"", 
      ItemBox["\"rounds\"", DefaultBaseStyle -> "LabeledLabel"]}, {
      RotationBox[
       ItemBox["\"loss\"", DefaultBaseStyle -> "LabeledLabel"], BoxRotation -> 
       1.5708], 
      GraphicsBox[{
        AbsoluteThickness[1.25], {{
          Hue[0.083, 1., 1.], 
          LineBox[CompressedData["
1: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
PA==
           "]]}, {}}, {{
          Hue[0.59, 0.7, 0.75], 
          LineBox[CompressedData["
1:eJw12Ak4lGsbB3AtUiktlDbtJ1ki1VGH0r8sLaROWjitlKJEEomIQkSyZxtm
MMYwlr6kVVMpKqWU2dsOnU5KWjk6Wj6n935d73W55nrmfZ7n99zvPf9hkpvP
avfeampqxr3U1P77zf7kFhyutdRqFFue1u65jJBT+9LHIaiJXlvClbNl9Utd
qbjthmPPZYPeR+q4maEyGrfHHd21bbuz5OKb/w23rYLHlUt7jb0U9P41MJ9f
MOT9D4VY5+cN6+HtGlP0fYuS7t+AsGjhHovTSrGbfkDPtRkVr19m6v2jpPm2
YsWSu+FvZ6rEihiOPIbjhuXWS9JXuKho/u0YvKzf2U97VGJGswMhHb5R0WEq
Wm8nfptYOHfdcZX45/RunvjYtOj6iCQVrb8bNydWeC85qRKv/DmhF+xP8Na5
94wz+/HG07dhvvah7Pv3YltBjF/CYRXtby9s49bPPh3I3u8LzyV9xpq7svvd
h+xzCZevObPz+UHz/ECXGSvZ/e/HUMGXoKvWKvHP7en7Y+QCzggXM9YTAM/h
jV4TpqjEx/+bTh4At4r6dcXDWN8BzI5suVzZWyX+ORwTiJbUcYM5H5XkPYgS
3TezkuRKMVPOIEimyloW3WTPPxj5uVLe4zL2vIOxpn7ylrpTSvIcwou3ug7W
J5XkCYHv2RG2If5svUKxsnxT1BRPJXkOY2FEnpOaGzt/GEIf9Bky3EHJeMLC
cN5X4+C6hex6YTjXNDj4hpmS8TmH493Rj337m7Prh6N11Cu7o/pKxmt2BKKZ
fe2nj2L3cwTSBVMvhgxWMv4BRzHjiruhc292f0ex6Wjn9/g2BXMezUexNuXe
VIsH7PMZgcQiw3OyRgVzPpciIP6sbsS7oaB6REL7y66H96oVjCc5EsLe5lz9
8wqqTxRaVdc48aUKxuMVhW3R6uobeAqqVxScPgiqV+UoGI/NMUS+xJr+8Ww/
HINrfUyse4yC8ehF4ytns/faUAXVMxqS4RLf2mAF4+mMhkmvulDxbvK4xeBc
yK8OV3eSpyEGJ7WuNga5k8fyOIL6fAyf70IewXEYz7+zKMKJPNqxWBVYO9t7
OXnCYvH3C3Wd/8aZ+sRixqi+ht025HGOw7713Obpi8lzIw55i2fz8+eSx+wE
DN9FWwaYkodzAm+7Jj/ONyfPgHi0TXd3DjcmT0A8dGZ/nTbcgK1PPFyH/Vn8
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
           "]]}, {}}}, Prolog -> {{
          InsetBox[
           FormBox["1000", TraditionalForm], 
           Offset[{-2, -2}, {1000., 0.21100000000000002`}], {1., 1.}], 
          InsetBox[
           FormBox["2000", TraditionalForm], 
           Offset[{-2, -2}, {2000., 0.21100000000000002`}], {1., 1.}], 
          InsetBox[
           FormBox["3000", TraditionalForm], 
           Offset[{-2, -2}, {3000., 0.21100000000000002`}], {1., 1.}], 
          InsetBox[
           FormBox["4000", TraditionalForm], 
           Offset[{-2, -2}, {4000., 0.21100000000000002`}], {1., 1.}], 
          InsetBox[
           FormBox["5000", TraditionalForm], 
           Offset[{-2, -2}, {5000., 0.21100000000000002`}], {1., 1.}]}, {
          InsetBox[
           FormBox["\"1\"", TraditionalForm], 
           Offset[{3, 0}, {0, 0.}], {-1, -1.}]}}, 
       PlotRange -> {{0, 4048.05}, {-0.911, 0.21100000000000002`}}, 
       ImageSize -> {302, 182.}, 
       GridLines -> {{1000., 2000., 3000., 4000., 5000.}, {{-1., 
           GrayLevel[0.3001]}, {0., 
           GrayLevel[0.3001]}, {-0.6989700043360187, 
           GrayLevel[0.8501]}, {-0.5228787452803375, 
           GrayLevel[0.8501]}, {-0.39794000867203755`, 
           GrayLevel[0.8501]}, {-0.30102999566398114`, 
           GrayLevel[0.8501]}, {-0.22184874961635626`, 
           GrayLevel[0.8501]}, {-0.1549019599857432, 
           GrayLevel[0.8501]}, {-0.09691001300805638, 
           GrayLevel[0.8501]}, {-0.04575749056067506, 
           GrayLevel[0.8501]}, {0.30102999566398114`, 
           GrayLevel[0.8501]}, {0.47712125471966244`, 
           GrayLevel[0.8501]}, {0.6020599913279623, 
           GrayLevel[0.8501]}, {0.6989700043360187, 
           GrayLevel[0.8501]}, {0.7781512503836435, 
           GrayLevel[0.8501]}, {0.8450980400142567, 
           GrayLevel[0.8501]}, {0.9030899869919434, 
           GrayLevel[0.8501]}, {0.9542425094393249, 
           GrayLevel[0.8501]}}}, Frame -> True, Axes -> None, AspectRatio -> 
       Full, BaseStyle -> {
        FontFamily -> "Verdana", FontSize -> 8, FontColor -> GrayLevel[0.5], 
         ScriptSizeMultipliers -> 0.2, ScriptMinSize -> 6}, PlotRangePadding -> 
       None, PlotRangeClipping -> True, Background -> GrayLevel[1], 
       FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, FrameTicks -> None]}},
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    GridBoxSpacings -> {"Columns" -> {{0.5}}}, 
    BaseStyle -> {
     FontFamily -> "Verdana", FontSize -> 8, FontColor -> GrayLevel[0.4]}],
   FormBox[
    TemplateBox[{"\"validation\"", "\"training\""}, "LineLegend", 
     DisplayFunction -> (FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.59, 0.7, 0.75]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.59, 0.7, 0.75]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.083, 1., 1.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.083, 1., 1.]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}],
                "Grid"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
           "Grid"], Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
        Background -> Automatic, StripOnInput -> False], TraditionalForm]& ), 
     InterpretationFunction :> (RowBox[{"LineLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.59, 0.7, 0.75], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> Hue[0.59, 0.7, 0.5], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 StyleBox[
                  RowBox[{"Hue", "[", 
                    RowBox[{"0.59`", ",", "0.7`", ",", "0.75`"}], "]"}], 
                  NumberMarks -> False]], Appearance -> None, BaseStyle -> {},
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.59, 0.7, 0.75]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Hue[0.59, 0.7, 0.75], Editable -> False, Selectable -> False], 
              ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.083, 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> Hue[0.083, 1., 0.6666666666666667], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 StyleBox[
                  RowBox[{"Hue", "[", 
                    RowBox[{"0.083`", ",", "1.`", ",", "1.`"}], "]"}], 
                  NumberMarks -> False]], Appearance -> None, BaseStyle -> {},
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.083, 1., 1.]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Hue[0.083, 1., 1.], Editable -> False, Selectable -> False]}], 
            "}"}], ",", 
          RowBox[{"{", 
            RowBox[{#, ",", #2}], "}"}]}], "]"}]& ), Editable -> True], 
    TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8196034484697533`*^9},
 CellLabel->
  "Out[125]=",ExpressionUUID->"b9fc06de-5139-4971-bfc4-f1fd331e3e59"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Loss\"\>", "\[Rule]", "0.2881846867926955`"}], ",", 
   RowBox[{"\<\"ErrorRate\"\>", "\[Rule]", "0.1296875`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.819603448484992*^9},
 CellLabel->
  "Out[126]=",ExpressionUUID->"86dcc67a-83cb-4fa0-8910-62e655bf496e"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["4", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{30, 2}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{30}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {30}, "$OutputSize" -> 30, 
                    "$InputSize" -> 2, "$InputDimensions" -> {2}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{30}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {30}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{30}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{30}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{3, 30}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{3}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {3}, "$OutputSize" -> 3, 
                    "$InputSize" -> 30, "$InputDimensions" -> {30}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{30}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{3}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3}, 
                    NeuralNetworks`RealT], "Type" -> "Class", "Labels" -> {
                    RGBColor[1, 0, 0], 
                    RGBColor[0, 1, 0], 
                    RGBColor[0, 0, 1]}, "InputDepth" -> 1, "Dimensions" -> 3, 
                    "$Rank" -> 0, "$Version" -> "12.0.11"]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"30\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"30\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8196034485114703`*^9},
 CellLabel->
  "Out[127]=",ExpressionUUID->"64e1dbba-b286-4223-a3ba-218e1b7ae318"],

Cell[BoxData["0.8833333333333333`"], "Output",
 CellChangeTimes->{3.8196034485458026`*^9},
 CellLabel->
  "Out[128]=",ExpressionUUID->"b1e4fd9a-e5a6-4e18-969f-212542061864"],

Cell[BoxData[GridBox[{
   {
    RotationBox[
     ItemBox["\<\"actual class\"\>",
      DefaultBaseStyle->"LabeledLabel"],
     BoxRotation->1.5708], 
    GraphicsBox[
     RasterBox[{{{0.748125, 0.8266125, 0.91875}, {1., 1., 1.}, {
      0.47687500000000005`, 0.6398874999999999, 0.83125}}, {{1., 1., 1.}, {
      0.22500000000000003`, 0.4665, 0.75}, {1., 1., 1.}}, {{
      0.34125000000000005`, 0.5465249999999999, 0.7875}, {0.88375, 
      0.9199750000000001, 0.9625}, {1., 1., 1.}}}, {{0, 0}, {3, 3}}, {0, 1}],
     Background->GrayLevel[1],
     BaseStyle->Directive[
      FontSize -> 7, FontFamily -> "Verdana", FontWeight -> "Thin", 
       FontTracking -> "Condensed"],
     Epilog->{{
        InsetBox[
         FormBox["18", TraditionalForm], {0.5, 2.5}, {0, 0}], 
        InsetBox[
         FormBox["2", TraditionalForm], {1.5, 2.5}, {0, 0}]}, {
        InsetBox[
         FormBox["20", TraditionalForm], {1.5, 1.5}, {0, 0}]}, {
        InsetBox[
         FormBox["5", TraditionalForm], {0.5, 0.5}, {0, 0}], 
        InsetBox[
         FormBox["15", TraditionalForm], {2.5, 0.5}, {0, 0}]}},
     Frame->True,
     FrameLabel->{None, None},
     FrameTicks->{{{{2.5, 
          FormBox[
           RotationBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[1, 0, 0], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                False]], Appearance -> None, BaseStyle -> {}, 
              BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
              ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[1, 0, 0]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
            BoxRotation -> 0.], TraditionalForm]}, {1.5, 
          FormBox[
           RotationBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[0, 1, 0], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                False]], Appearance -> None, BaseStyle -> {}, 
              BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
              ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0, 1, 0]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[0, 1, 0], Editable -> False, Selectable -> False], 
            BoxRotation -> 0.], TraditionalForm]}, {0.5, 
          FormBox[
           RotationBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[0, 0, 1], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                False]], Appearance -> None, BaseStyle -> {}, 
              BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
              ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0, 0, 1]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
            BoxRotation -> 0.], TraditionalForm]}}, {{2.5, 
          FormBox["20", TraditionalForm]}, {1.5, 
          FormBox["20", TraditionalForm]}, {0.5, 
          FormBox["20", TraditionalForm]}}}, {{{0.5, 
          FormBox[
           RotationBox["23", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {1.5, 
          FormBox[
           RotationBox["22", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}, {2.5, 
          FormBox[
           RotationBox["15", BoxRotation -> 1.5707963267948966`], 
           TraditionalForm]}}, {{0.5, 
          FormBox[
           RotationBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[1, 0, 0], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                False]], Appearance -> None, BaseStyle -> {}, 
              BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
              ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[1, 0, 0]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
            BoxRotation -> 1.5707963267948966`], TraditionalForm]}, {1.5, 
          FormBox[
           RotationBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[0, 1, 0], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                False]], Appearance -> None, BaseStyle -> {}, 
              BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
              ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0, 1, 0]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[0, 1, 0], Editable -> False, Selectable -> False], 
            BoxRotation -> 1.5707963267948966`], TraditionalForm]}, {2.5, 
          FormBox[
           RotationBox[
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{{
                  GrayLevel[0], 
                  RectangleBox[{0, 0}]}, {
                  GrayLevel[0], 
                  RectangleBox[{1, -1}]}, {
                  RGBColor[0, 0, 1], 
                  RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                Dynamic[{
                  Automatic, 1.35 CurrentValue["FontCapHeight"]/
                   AbsoluteCurrentValue[Magnification]}]], 
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                False]], Appearance -> None, BaseStyle -> {}, 
              BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
              ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0, 0, 1]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
              Automatic, Method -> "Preemptive"], 
             RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
            BoxRotation -> 1.5707963267948966`], TraditionalForm]}}}},
     GridLinesStyle->Directive[
       GrayLevel[0.5, 0.4]],
     ImagePadding->{{All, 18.}, {18., All}},
     ImageSize->300,
     Method->{
      "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
       "RangePadding" -> Scaled[0.05]}]},
   {"", 
    ItemBox["\<\"predicted class\"\>",
     DefaultBaseStyle->"LabeledLabel"]}
  },
  BaseStyle->{
   FontFamily -> "Verdana", FontSize -> 8, FontColor -> GrayLevel[0.4]},
  GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
  GridBoxSpacings->{"Columns" -> {{0.5}}}]], "Output",
 CellChangeTimes->{3.8196034487055407`*^9},
 CellLabel->
  "Out[129]=",ExpressionUUID->"a47e9689-934e-442e-8525-5d8e6abf3a53"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Graphics", "[", 
  RowBox[{
   RowBox[{"Cases", "[", 
    RowBox[{"dataT", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"a_", "\[Rule]", "b_"}], ")"}], "\[RuleDelayed]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"netF", "@", "a"}], ",", 
        RowBox[{"Point", "@", "a"}]}], "}"}]}], ",", "1"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "5"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.819603462380799*^9, 3.819603462384798*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"3d2d0944-039c-4986-9af5-41be3a51a2da"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[1, 0, 0], PointBox[{1.868324138380431, -0.8710717400492429}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.1658312337309553`, 0.06689790219674108}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.1883930413478305`, 2.316502703009889}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.182207731772651, -0.3487900615816064}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.312419004939234, 2.4793881913877556`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.3520087379566887`, 4.00004800460389}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.547998335529225, -0.5765035382714432}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.8854852382957792`, 1.1640455994032806`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.63708351579931, -1.2554162157126387`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.7149793811213803`, 1.025433786829585}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.4910588730322891, 3.976339162038973}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.5849611466342366`, 0.620891682872383}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.8234457471012542, 2.2115423735790314`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.7892197991222621, 1.8291174095452656`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.5952945990497174`, 0.7138940552262559}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.0358793386041218`, 4.785822193485297}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.7995441306181981, 1.7037873931363177`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.06908286234292094, 2.8493181462750767`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.832521260350409, 2.1792713490782836`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.2842811779842065`, 2.344565796583827}]}, 
   {RGBColor[1, 0, 0], 
    PointBox[{2.2162429788499436`, -0.27334202802749585`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.3869192546156779, 5.587020576180378}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.4141167822610279, 1.3282784629660684`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.9365724121558485`, 0.7090918848049406}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.3926555338359563`, 0.2096461095071196}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.264592482414371, 1.9816920047450486`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.23036282664690177`, 0.6309203893948083}]}, 
   {RGBColor[1, 0, 0], PointBox[{4.652223439873495, 0.9761814473544658}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.3516448493696114`, 3.525062547652266}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.9438996170620657`, 1.6478337702776062`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.3677909029420505`, 1.6417830823362412`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.3350042600337697`, -0.4247512851855637}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.5773128781368433`, 0.8949942854672212}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.043844095601368, 3.9131413097669308`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.4912537551662217, 0.5892576317639838}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.0538995248686542`, -0.5486745167858555}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.7051994828534456, 1.0153540212065835`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.686642815584235, 2.1277232114853977`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.404127061750891, 1.9104887113927855`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.8045952575514255`, 5.497221113678569}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.5537274872029463`, -2.431680985144585}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.7796793057343967`, 2.5346443585037326`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.1385217185640908`, 0.2691372396287346}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.0964581256749595`, 3.1034901598119915`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.759820607762243, 1.4378705748735072`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.443903013969135, 2.6152292020055397`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.4530856123215024`, -0.3198418707303303}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.1403390381143934, -0.6759813494768507}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.4229152833293406, 1.0928236265600286`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.8801848986776672`, 1.0844620178445563`}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{0.17008299857274323`, -0.08256849021971635}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.3746022446969146`, 0.13053970860504616`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.5011257663121427`, -0.9307791442467597}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.1591183728140084`, 0.46193662563936866`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.548297835385104, 1.7060916211061294`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.7065467146590843`, -1.6194369449740518`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.2059648136020225`, 2.1505908216309084`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.391788131636586, 1.8154991979987236`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.1963272678118444`, 0.19237045685152587`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.3848120091401954`, 1.0553079307578404`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.4481109241467294, 3.358622835966207}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.19401658446182313`, 2.481276664239563}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.05552195410889538, 2.5223648401560177`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.6530220511970777`, 1.7494684120882495`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.0377309233131324`, -0.6914250060237102}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.2728712506663387`, 2.052293279329856}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.802924602446986, -1.3367804182197873`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.023816009548145, -0.15229434864208424`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.4896227560303454`, 2.2517662569089594`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.8317086290481606`, -0.07411494487763126}]}, 
   {RGBColor[0, 0, 1], PointBox[{1.0316742513427593`, -0.6022433962042899}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.2541532135422715`, -0.8444767265247579}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.7558560380228645`, 4.9684798114465085`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.7080641157902375, 1.3294063087237153`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.009383404498062, -2.3124236922511736`}]}, 
   {RGBColor[1, 0, 0], 
    PointBox[{2.3203453738072755`, -0.15017009193336994`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.876356863187047, 2.483207606346013}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.5042468016289313, 6.08246636693954}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.1084823928924274`, 3.8645040543872127`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.9045645714550516`, 0.6828899825293367}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.0584739934624396`, 0.07108098820361475}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.5732332471560228, 2.6758166332132767`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.8564510245956143`, 5.854265630156134}]}, 
   {RGBColor[1, 0, 0], 
    PointBox[{1.4754621627074753`, -0.14978284084777793`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.7353800647764503`, 3.1371528826331634`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.8367418012412259, 6.215664656583694}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.002883915964756, 1.6182774117677239`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.3357299657385315`, 1.925312343943867}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.8131069611017473, 3.2099851831195556`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.274956898930776, 3.855900684125385}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.063377973938012, 4.150834731386751}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.5214585964708032`, 0.5344069419258572}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.5254588464133093, 2.902914783546938}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.4484722496913762, 1.8903392515829576`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.7577361349924496`, 0.97184392351392}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.063497692672719, 4.635743194435103}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-0.28953781691849767`, 1.2966886671089601`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.0818054937956245`, 1.2925795313137165`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.0844691041553649, 2.6021215030758524`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.898954469604976, -0.34160322539975185`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.3093880196475094, 2.6027741927416104`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.8654953466345665, 1.8678802340922425`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.2438421621528286`, 2.352238095091768}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.5137413079122513`, -1.925373939736081}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.6661165574429382, 4.013104134428309}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.41902341830238177`, -0.7983504797069245}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.219202209041367, 3.006000294847608}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.6354404565438634`, -1.7578915863620672`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.243202128672693, 0.48350334464205424`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.125243449220418, 3.632330909152237}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.585698639501565, -2.1648647128714176`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.264719945494974, 0.9517928533464747}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.0407215432542527`, 2.3485052738337986`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.9021282704705685, 5.166421801312822}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.33100530537247397`, 1.7662537322600718`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.44593049292840914`, 2.1401817645770906`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.7130987067465643, 4.759326397166753}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.8518401306241893, 1.1210749418407582`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.10242550195516964`, 2.171545014662481}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.2143458055647067`, -0.5718703457928842}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.9540376898701597`, 0.7884153752276611}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.8182206105526092, 0.4739235275453286}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.537039758126826, 1.3241742927689597`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.93730521010938, 3.0240889791917756`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.818165041998044, -0.1978850252455433}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.9687414989595591, -0.36317384892682747`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.688616088247105, 1.69745525021537}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.09526150653792942, 0.8539859919381009}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.5197223225105014`, 4.4872840426662215`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.9465960815924217`, 1.0575157804844029`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.833420549006721, 2.056126230743046}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.310790718174684, 0.34436906857408034`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.508019362208805, 0.1883974466859295}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.038864023447712004`, 2.844412226184623}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.9536857786088644`, 3.21603644280036}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.1014385087821532`, 1.9859792403094714`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.4059336532810396`, 1.5617134766862797`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.92105860910629, -0.6493558098871759}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.1115785790688844`, 3.6266000170072754`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.7625352772844293, -1.6920475868497697`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.5939649257070467`, 4.632175616935808}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.8408784647878041, 2.4380948119590036`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.2845355332861963, 2.112872690905811}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.7576064736663515, 3.0514825651113497`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.19805641929651463`, 3.210779575892258}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.3669581235453465`, -0.0635883621510196}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.2900405775858035`, 1.685424875846664}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.3484163911949956`, 1.3268392408670648`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.7559202463406116`, -2.5447173126774354`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.5057832783753821, 5.653444466737039}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.7966266589760135, -2.8412028041947677`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.4024080003788875`, 1.3879874505877334`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.9250228410459589, 0.6618673803900811}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.5266189430068065`, -1.6366245606391354`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.790774074859664, 0.8699862487970663}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.6355404999979, 4.967699191908598}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.5000978489286774`, -0.2320243307330765}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.23498691410290617`, -0.0606273264008681}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.4630957877491544`, 1.4748941785355936`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.688700188955134, 1.0226556026841749`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.08569902024665654, 2.2391743029742335`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.6693999910570674`, 4.4055328984591045`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.7052166377284577, 2.763647066929587}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.39781695351536417`, 1.46291105663504}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.979591008531715, 4.7993084236736605`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.2808644717491964`, 1.183116414233745}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.3407575700337206`, 2.5774249630458996`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.5946731340162101`, -0.8278151294178802}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.5635122663107319, -1.3747332422113088`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.0638423091001008`, 2.245961272265627}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.45308500229454074`, 4.345026674740483}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.9735231103764015, 6.144690020070647}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.020300806295501683`, 4.95919688089743}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.1205453343762657`, -2.1162605634815503`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.7037018825778905`, -0.09463063006879513}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.262317909787019, 1.6926053634026703`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.35761868465090707`, 1.7828623932216936`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.8278543707883177`, 3.437844674300094}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.5700654519200827`, 2.8988544481353706`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.6405666374266827`, 1.6075022569404016`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.03023122816542, 2.0005673747976727`}]}, 
   {RGBColor[0, 0, 1], PointBox[{1.8163472310281357`, -3.6312117691330377`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.3049589950913283`, 6.190050666664035}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{0.6429364245354497, -0.019761839215256094`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.8010730810175398, -1.289048176236339}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.8622841849099228, -0.28479251230672764`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.4646705939325537`, 4.121694113476206}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.4388901564296936`, 6.427033263517999}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.6367399708223163`, -0.608887488532694}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.704880277227995, 0.3867492452500938}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.4248482711320163`, 4.292230269932917}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.4558426396746813`, 4.519375948209799}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.289411868794752, 2.0691777685657344`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.7424914808755063`, 1.9382769837240887`}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.956006836165142, -0.9259557342988902}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.391387989473878, 2.6132583261563442`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.3461278712796574`, 1.6944410670097902`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.15482891172513202`, 4.467090978711779}]}, 
   {RGBColor[1, 0, 0], PointBox[{3.5692342056429975`, 0.5542763824831322}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.161839600701687, 6.040504176357629}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.4175029563239654, -0.0363021969147348}]}, 
   {RGBColor[0, 0, 1], PointBox[{-1.2232008043594833`, -2.646107149219467}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.7783900179627359`, -2.770395444639722}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.0438685853618836`, 1.954722402922728}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.0335762874454177`, 1.4679915661818057`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.57545847053934, 1.242864474823334}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.4808835747577898`, 2.997655083072971}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.3620057801583845`, -1.0215112921772147`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.2186716563297173`, -0.34918019152339497`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.762777628024981, 2.8289105373591084`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.712337882375809, 1.3626577660380146`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.2851201304117623`, -1.47432089884306}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.034635340362876965`, 5.226206575624735}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.5420901655031738`, -0.18474790909430827`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.9919367882378375, -0.3550214147703339}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.3038181974678418`, 4.12466220151539}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.698124412390265, 5.084342126703064}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.0718103501048333`, 0.4042470944784654}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.614525042532352, 2.3338393728958042`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.9600816008521965, 3.2367623639413137`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.179697182516727, 2.588825707984917}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.35998910720280985`, 3.128187126229356}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.3021909143854373`, -1.3746497136522118`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.17308729164603642`, 3.6378113186822527`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.356278716495662, 2.7165155975916617`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.342598510121583, 2.253635159350429}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-0.0006361825410601263, 1.4381112831689682`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.8081481783818836`, 0.5252467824311955}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.44163333446018, 3.1244088430739145`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.7369431040328712, 1.3229199716238775`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.821236571958091, 1.1941405896141908`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.8932057110775705, 1.2299045973778582`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.1305306909759283`, 3.150506524130247}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.7868313130545346, 0.460176798027342}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.374609864754211, 1.8906375453751498`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.331272245961439, 2.7020318151279445`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.7489453729288917, 3.59068111048315}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.4470427557982, -0.6247160781016645}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.9590357889543406`, 0.3905968572813756}]}, 
   {RGBColor[0, 1, 0], PointBox[{-4.382498603856304, 4.307621466559091}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.8139479587334473`, 1.0155871805624845`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.037617193480422, -1.224773554383027}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.7435958924633255`, 0.9708234763293134}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.362633969782755, -0.2668035538256932}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{0.053939686496691897`, -1.7320220256377867`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.9795035488473823, 0.46652289662137725`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.3277569374617864`, 2.186159953029538}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.5930046964749915`, 2.6375685298337572`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.0409719689228796`, 3.2155487238995444`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{0.10768276207870597`, 0.15802893296852294`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.9983217006641119`, 0.7877791415363016}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.2784047703095822, -3.2565911439473556`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.3976173065216879, -1.225851557852843}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.6578526766738957`, -3.089550049345285}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.4220020637789501, 1.616620743480131}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.0362603106828936`, -0.7511213642784409}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.026289979031419, 0.7646582255778182}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.976288919414587, 1.2168664963414813`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.2685012058563903`, 0.3472870856572263}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.52010398573849, 2.0900118238473078`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.3702804908797146, 1.7079384876118535`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.0961936818215627`, 0.22520040921959417`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.9571717537383361, 2.567560667399171}]}, 
   {RGBColor[0, 1, 0], PointBox[{-5.3587141654371395`, 2.51720302176808}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.9039042367547658, 3.9465748195223713`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.504699989024564, 0.6651907467667606}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-3.0940078273431846`, 0.29094998667464755`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.1381694948583436`, 4.067115432841069}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.11190524683922187`, 0.90838764945167}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.4627877822501263`, 0.1413616475276821}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.852704780493844, -1.4944092622833138`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.6478718284867826`, 0.6169689072041479}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.9168310022464485`, -0.2512239332784356}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.065975649040678, 2.8033020727351383`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.0538178255614687`, 2.96434674751334}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.7291798483181866`, 1.7052100195226214`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.5387547420573622`, 1.1524900980005885`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.2327449361500866`, 4.740649218321767}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.20859699436207, -1.4952404601170106`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.4318115215217184`, -1.2925355368344893`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.5143902803722831, -4.95788448051179}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.516774376131371, 0.0453349807295389}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.6962049194038693`, 3.407981282673912}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.8221575584133114`, 2.126587945255425}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.352177246881942, 2.435385500607845}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.3639136511273473`, 2.056363275047323}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.3257418265963605`, -1.5876319941804389`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-2.3635970122590253`, -0.47395328962112626`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.2061479424915631, -1.1893286231976798`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.4796298586848309`, 1.226312863999177}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.6571359605329552`, -1.107737466619822}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.31816089173477, 4.530703537100937}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.1567448659781485`, -1.5190180283167511`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.7961096306830613`, -1.0875327787794196`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.2852781482069386`, 1.3074909943686426`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.672440943732851, -0.5354383727510332}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.0109106101901086`, 0.6840499289962685}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.718703602727076, 5.617298640436225}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.290474815780575, 0.001387968152607777}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.622691962774701, -1.179800879482376}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.600687525710593, 0.07603506740290189}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-0.11235744361129552`, 2.0206393304498436`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.24767571143197498`, 2.380588240108377}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.8698600396222722`, 0.21196027913886228`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.8907164725974557, 0.11456542715444118`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.6450488487012593`, -0.7112920201719888}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.6445813843175783`, -0.534623965688992}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.9662046559249844`, 2.5856023597203674`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.3652848313453716`, 0.7364483726305542}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.8443308581011084, 0.5238084441784319}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.3512199489948484`, -0.5498227111496556}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.519387398098666, 1.8241176994715183`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.6122899821926894, 1.3364995141770106`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.46583132989999, -2.049578789598539}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.4924826929712547, 3.0301725577603844`}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{-1.6600250938551084`, -3.6649620713082154`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.3514995691743925`, 0.12401987596600672`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.596520831220386, -0.4524759598288852}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.2120954746846655`, 3.1272573991489114`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.525749740173602, 0.07829390955299109}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.604382379140291, 2.320084781171425}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.6073317213416423`, 0.9012145544329646}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-2.5555315249311836`, -1.9002642980647848`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.234592301533829, 0.5407369758143743}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.442721987191608, 2.0644772027208167`}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.138405447601345, 5.061404688441064}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.2239749896594705`, 2.5213213789350672`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.643134424271867, 1.4057383632447555`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.8752755810926974, 1.7089087052169787`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.06862454311042, -1.3940653569418124`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.3354632050195745`, 1.0062297275176557`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.6460851346942689, 0.41991929481748747`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.5392647144842718, -1.2827915236715182`}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{0.47829214639910433`, -1.3859521085482065`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.3573855685072225, -0.8358202116665769}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.2656609949510218, 0.5218379315237758}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.1304053863173182`, 0.6377922743297086}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.3516282379474176`, -0.9830296233065523}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.905768897059921, 0.05004488418598707}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.6224776800585883`, 0.6004274067899737}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.5218329868188492`, -0.36842892912574166`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.150812285653639, 1.0605699853816715`}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.10137238775411839`, 1.13047402102998}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.6865342531465328`, -0.2534314348388722}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.2511808707384553`, 0.8211610240263532}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.863628997289899, 0.5403708991372125}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.492232316769231, 0.8286236017707789}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.1122414978545356`, 1.4443851610010447`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.549517048704689, 4.2655984604484525`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.1107611673540538`, 1.0070528676859585`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.04436399328783924, -0.2088942810040446}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.905232479308005, -0.898408493835912}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.2122497087485433`, -2.039842384290516}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.5475540704342035, 2.1461148684875937`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.3846639811739334, 0.29982517103418005`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-3.8367582988723394`, 2.73580061348516}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.2697351453007535`, 2.11236509692981}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.9665350978391305`, 0.1886641090846437}]}, 
   {RGBColor[0, 1, 0], PointBox[{0.0494036598425307, 0.22383096016344495`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.48838889267835994`, 3.5626887690445512`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.801222007667582, 0.48058937720606454`}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{0.27370747194247347`, -0.12374126901601823`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.7930397108097615`, -0.09600861807559347}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.9697036338717044, 1.3758889223262114`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.5779993033151414, -1.61535963101857}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.9025793511750846`, 3.9377776923287016`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.0090574716644831`, 1.4661667087794021`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.0090729702660473`, 1.953462796888092}]}, 
   {RGBColor[1, 0, 0], PointBox[{-0.27049000756482444`, 5.838179600350102}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.9851604364865604, 0.7734563757390631}]}, 
   {RGBColor[0, 0, 1], PointBox[{-1.795724171633842, -4.0604618163846835`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.1313528354981237`, 1.0940988484635754`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.20042903916385, 0.011639339184537523`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.033317957836917, -1.3439949468777925`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.17452295510566, -1.4658406882302115`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.3480468459273462`, 4.032262067852164}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.4115124522146774`, 2.5245794882568893`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.8555672319556393`, 2.112789005496408}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.5919011183910847, 3.7017547371349506`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.31952988016766315`, 3.749517514584859}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.4546444204094564`, 1.1516384781344153`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.9190085496456353`, 0.35970583898147546`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.0733079637827763`, 0.6242320308923498}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.87939271339491, 0.4547889250570635}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-0.17914645250486427`, 1.5791155429112504`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.6501113832473016, 3.2899971011510036`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.5652299832582868`, 2.7303017783981134`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.4812173652695637, 3.5631721612621896`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.8435213333528845, -0.8686196516777811}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.55171995494186, 1.6975379055545532`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.2796982417110907, 3.2491208824190134`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.2232625008342555`, -2.07481907528076}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.7208002237816392, -2.1358942983286626`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.592048715278801, 6.054856531631802}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.2060461416823778`, 2.3047829604128314`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.2278751027750612`, 1.795915092474214}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.7240320789356156`, 1.8795138143132883`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.4673450559772743`, 1.9288124329062468`}]}, 
   {RGBColor[0, 1, 0], PointBox[{-1.5119430066945787`, 2.603218676989684}]}, 
   {RGBColor[0, 1, 0], PointBox[{-2.2114680322138063`, 0.7536282337120588}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.1036034792747718`, -0.7262764712845236}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.6077261283408116, -3.5999419477191075`}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{-1.2973477897639707`, -4.3158624537782115`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.6623114628841097, -1.968047446578856}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.3492437051096847, -3.679615181348783}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.297908241405033, -1.6893838602505789`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-3.1365527554260173`, -6.928097483022907}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{0.23421051455588773`, -1.6733764503433413`}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{-0.038593641306756216`, -2.9370762707578253`}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-0.12294263822300473`, -0.5465975836054353}]}, 
   {RGBColor[0, 0, 1], PointBox[{1.3939676059035873`, -2.3811498987922968`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.36980107029148374`, -4.45099235784037}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.9595290253382309, -2.744703821597807}]}, 
   {RGBColor[0, 0, 1], PointBox[{-1.7457782394972876`, -4.589223401414467}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.3664462790880171, -1.2689558353878947`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.554278885854768, 0.9518694068172611}]}, 
   {RGBColor[0, 0, 1], PointBox[{-1.1166264818143166`, -4.502534419972518}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.1535235739750528, -1.8753226708054893`}]}, 
   {RGBColor[0, 0, 1], PointBox[{1.0565959698038137`, -1.854199229342059}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.9767308859167688, -3.58054828864267}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.3063523810422937`, -1.428522704571062}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{-0.026981071924877316`, -2.899385708129473}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.1900831306552297`, 0.41834603278190396`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-2.453754982656914, -5.6384866773948}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{-1.2927090680805988`, -5.5809359396027425`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.5777061953907638, -2.362341706326963}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.2255025976918643`, -0.5432124420490139}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.5280084630054954, -3.8010744834049515`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.5185816501100042`, 2.7158426346133364`}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{-1.3834066515552355`, -3.7410203405025477`}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{-0.034704044189679546`, -2.897912808924047}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.8195456535961565, -0.5452043914588427}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{0.10471513430084028`, -1.8613103429912468`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.698773273398779, -2.2420620781000773`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.13482107447573194`, -1.186082517503981}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{0.11454452021543497`, -1.7212463512747962`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.3246936726498185, -0.7497280622985816}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{0.28364400613293533`, -2.3517764680406064`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.9363555404681173, 0.13344687885499074`}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{-0.028221650900190735`, -1.9479764311945398`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.024944317041414032`, -3.498991530020179}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.457071909671937, -1.7815753425511485`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.22342469963292455`, -3.303557341113751}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.2993712019282784, -0.23088072968075934`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.4932381956359325, -1.9972405138305431`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.42237735643502033`, -1.714932526421932}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.427607471513858, 0.5050953568995649}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.42689594036264567`, -5.85923823093616}]}, 
   {RGBColor[1, 0, 0], 
    PointBox[{1.0444736694331898`, -0.10786446941776573`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.47414031227832465`, -4.831602356023549}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.0729238446595266`, 1.323842684809391}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.6360307916678187`, 0.7746246590616566}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{0.027044324715115062`, -1.9258888510787928`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.9254330380257518, 0.6757137992810245}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.8054512919918324, -1.618770943590819}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.0095626702281142`, 1.2074057785477033`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-1.6280626534099625`, -4.292339466671931}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.05363562771239562, -2.4941705850948597`}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{0.10827946028816565`, -3.6112538074291436`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.48061890582965894`, -4.417219615148189}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.7099785973690612, -1.9623050480971849`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.09005397596382506, -4.176573201691186}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.4763486119334548, -3.458825146733023}]}, 
   {RGBColor[0, 0, 1], PointBox[{-1.4619293115058176`, -5.276759062800009}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{0.27150929247362576`, -1.7522325887647763`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-1.1387752649676108`, -4.907374480654948}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.329755261405834, -2.398703890942783}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.7538828086378733, -1.799698378166485}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.14128375450874064`, -4.085601382296152}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.9722001595233724, 0.6652163267716364}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{-0.42427706540970883`, -4.2376051828593395`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.863985466112063, -0.7109246209657025}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{-0.07624222803453393, -3.9429807663537506`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-1.6622592458345773`, -7.138575991823754}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.42564803136651463`, -2.923753902568828}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.450969528925771, -0.12368206473285737`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.5142703973312457, -3.1188635281683816`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.9794142594926201, 1.3646582859822014`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.3513195504591695, -2.033568497129972}]}, 
   {RGBColor[0, 0, 1], PointBox[{-1.2060861898594217`, -4.312097222100855}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.6548894486233097, -3.1592863372439175`}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{-1.2786501431052921`, -5.0664767298245685`}]}, 
   {RGBColor[0, 0, 1], PointBox[{1.3303256383895739`, -2.2452586830046113`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.5230936527299299, -4.334403826908374}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{-0.40986255724307485`, -3.5742125952936523`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.628793561379719, -0.4437344124361071}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.5085471775832555, -2.973164372044544}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.5259317506653802, -1.4101528973828348`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.7602892778170071, -2.3438568831891122`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.4264817622412089, -1.7479269839315426`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.46662184767031434`, -3.743429856153525}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.670461739287679, 0.7198012613798235}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.09353229613478103, -0.9630269501159683}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{0.19302779769264333`, -0.024024054162987696`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.3780171182386745, -4.920381545287594}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.6667415868478666`, -2.0157357505169755`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-1.4690980352355758`, -4.617429445939306}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.843952891791635, -4.470911666749336}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{-1.0594465547833312`, -6.1452476516064465`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.7280624078366544, -1.2572034059254353`}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{-0.03741145472466888, -1.9362770888518428`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.5399419422300703, -2.472672821349065}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{0.025775921486657232`, -2.2265871927343293`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.9944483659213614, -3.7471362416391676`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.9951081084791139, -1.7107234268802332`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.7139236862748304, -1.753978237569266}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.3296070641915309, -2.473369922313614}]}, 
   {RGBColor[0, 0, 1], PointBox[{1.0140513533285909`, -0.7048525939357648}]}, 
   {RGBColor[0, 0, 1], PointBox[{1.0002377465115015`, -0.6434224982469272}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.9387668695642184, -0.9346727156858119}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-2.1459486881543746`, -3.7583029226367906`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-1.125351051985597, -5.057961558049039}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{-1.1995258147924845`, -3.2730616064411935`}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{0.26439729880812696`, -1.3717553551239219`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-1.3915494035634706`, -4.794361651840452}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.1496337303164529, -2.809928168625021}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{-0.12872810598786777`, -1.8918459385416284`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.6026684684419134, 0.026749147368715143`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.5228297968217659, -4.67758771389769}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.117211606192509, -0.48219127061274936`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.5132376193961281, -1.423414277635264}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.5775122823424463, -4.039149176293073}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.9906905424453226, -2.7580911237905243`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.2957282082124193, -1.8806089932155334`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.1222947428072976`, -0.03523995128633395}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.02623335125092707, -1.390165494350038}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.9245535422864396, -5.113021803983159}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.23874753967227666`, -4.35338413255421}]}, 
   {RGBColor[0, 0, 1], PointBox[{-1.2682444935868453`, -4.777664910018538}]}, 
   {RGBColor[0, 0, 1], PointBox[{-2.418559694868698, -5.97961564245574}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.4164383385430717, -2.576682507378382}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.7563133405309055`, 1.4426559554576226`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-1.7945797949256834`, -5.345999225943095}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.2227786645488938`, 1.1818166387821885`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.512469930990216, -1.5373486848449915`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.6253679115994741, -2.493126888793654}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.2588671756656469, -1.326730257829711}]}, 
   {RGBColor[0, 0, 1], PointBox[{-1.644790633825812, -4.7787615741755705`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.8111115499112032, -2.6875030502880293`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.42773459965565774`, -0.4747416033826988}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.859945172677453, -2.821486568956762}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{0.20288007283516576`, -1.4478892400901422`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.6208293022648955, -3.8950859237905675`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-1.290345302342239, -5.757881921408037}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.5190024371336808, -2.7655924473602367`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.8867118982784554, -5.040163467464275}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.8423926383460919, -3.1709703376654046`}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{0.0003567271991518867, -3.6115220831616552`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.697567962208918, -4.382078628129939}]}, 
   {RGBColor[0, 0, 1], PointBox[{-1.190257229635985, -4.79856659552023}]}, 
   {RGBColor[0, 0, 1], PointBox[{-1.4094176448734008`, -6.357948114199248}]}, 
   {RGBColor[0, 1, 0], PointBox[{-0.8307397270917484, -1.351540752412243}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.19708307463205374`, -4.640595820945043}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{-0.13488423074473693`, -2.9736154246870923`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.9027044861372779, -1.357685163666886}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.3076936306982885, -1.0644141145926462`}]}, 
   {RGBColor[0, 0, 1], PointBox[{1.0242543053449435`, -1.0316821596604664`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.4940278180296474, -1.813301382972087}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.29411848352755904`, -4.079013154228218}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.36158888303716963`, -3.874311743854886}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.8026249926108967, -1.7060850536219752`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.2978971074828518, -3.663849061551246}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.3959116284201157, -5.01662665678736}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.9615104633335843, 0.6301421326135643}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.7268323639162647, -1.5231497379664747`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.7288971976839351, -2.99573112780108}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.4680537425177501, -1.0932983144123372`}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.3405443044499568`, 1.0254820456085985`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.2354160507926377, -3.785465396919721}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{-0.28116181344187907`, -3.3619435442883985`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.4191630212803629, -3.0295576191294584`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.5971062317237623, -2.191940757564116}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.8478645367713504, -0.6625983555996555}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.46191202111499957`, -4.413409882055635}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.24419226370440097`, -3.442611246299666}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.5871150033248821, -2.696862711817931}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.10531546668930873`, -4.611544493215549}]}, 
   {RGBColor[0, 1, 0], 
    PointBox[{-1.1020411055288213`, -1.7977492012897518`}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{-0.21754058933819076`, -3.1821794430413735`}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{-0.051498582557455215`, -0.8009693782421445}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.5606571213886107`, 1.1400050949775729`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.7293771633407174, -0.43200292649273386`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.3071921178136032, -1.7988187180707738`}]}, 
   {RGBColor[1, 0, 0], PointBox[{0.5991673744327377, 0.539837781959164}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.5217706844737516, -1.9645051126695976`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.7613359320482318, -5.8830825014296}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.5574104352040026, -0.6939505435469606}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.5046255520344044, -1.2495058811741815`}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{-0.0049636432502039845`, -3.433939901344314}]}, 
   {RGBColor[1, 0, 0], PointBox[{2.2229093065318684`, 0.20658687987109214`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.1554832902480739, -2.3824472859132233`}]}, 
   {RGBColor[1, 0, 0], PointBox[{1.3656874181713687`, -0.5999686512758284}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.2960600585828513, -3.873689198673249}]}, 
   {RGBColor[0, 0, 1], 
    PointBox[{-0.16594954041326476`, -1.4838339915598544`}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.01377512170093533, -2.3482776922002633`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.886229535716801, -2.5774298491912995`}]}, 
   {RGBColor[0, 0, 1], PointBox[{-0.4830401847466165, -2.405824914291314}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.5285897474394571, -2.043456406822448}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.48290033378357905`, -1.954682682288472}]}, 
   {RGBColor[0, 0, 1], PointBox[{0.4159603962368241, -2.299125643903258}]}},
  Frame->True,
  PlotRange->5]], "Output",
 CellChangeTimes->{3.819603463539672*^9, 3.8196040477740774`*^9},
 CellLabel->
  "Out[141]=",ExpressionUUID->"f7339d2c-2647-42e2-b7e9-7375042aa20b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"probability", "=", "0.5"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"gr", ",", 
   RowBox[{"Quiet", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"ContourPlot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"netF", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", "y"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Probability\>\"", ",", "color"}], "}"}]}], "]"}], 
         "\[Equal]", "probability"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
        RowBox[{"ContourStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", 
           RowBox[{"Darker", "[", 
            RowBox[{"color", ",", ".3"}], "]"}]}], "}"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"color", ",", 
        RowBox[{"{", 
         RowBox[{"Red", ",", "Green", ",", "Blue"}], "}"}]}], "}"}]}], 
     "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8196034717072964`*^9, 3.819603471709277*^9}, {
  3.819604056310077*^9, 3.8196040884244723`*^9}},
 CellLabel->
  "In[144]:=",ExpressionUUID->"12e88a87-f2af-4d15-bc4a-fd318122efce"],

Cell[BoxData["0.5`"], "Output",
 CellChangeTimes->{
  3.819603473591076*^9, {3.819604051892147*^9, 3.819604057761427*^9}, 
   3.8196040893602886`*^9},
 CellLabel->
  "Out[144]=",ExpressionUUID->"8d4a5387-b7d5-4f17-b609-080902f3a99c"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[1, 0, 0], PointBox[{1.868324138380431, -0.8710717400492429}]}, 
    {RGBColor[1, 0, 0], PointBox[{2.1658312337309553`, 0.06689790219674108}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.1883930413478305`, 2.316502703009889}]}, 
    {RGBColor[1, 0, 0], PointBox[{2.182207731772651, -0.3487900615816064}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.312419004939234, 2.4793881913877556`}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.3520087379566887`, 4.00004800460389}]}, 
    {RGBColor[1, 0, 0], PointBox[{2.547998335529225, -0.5765035382714432}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.8854852382957792`, 1.1640455994032806`}]}, 
    {RGBColor[1, 0, 0], PointBox[{0.63708351579931, -1.2554162157126387`}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.7149793811213803`, 1.025433786829585}]}, 
    {RGBColor[1, 0, 0], PointBox[{0.4910588730322891, 3.976339162038973}]}, 
    {RGBColor[1, 0, 0], PointBox[{2.5849611466342366`, 0.620891682872383}]}, 
    {RGBColor[1, 0, 0], PointBox[{0.8234457471012542, 2.2115423735790314`}]}, 
    {RGBColor[1, 0, 0], PointBox[{0.7892197991222621, 1.8291174095452656`}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.5952945990497174`, 0.7138940552262559}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.0358793386041218`, 4.785822193485297}]}, 
    {RGBColor[1, 0, 0], PointBox[{0.7995441306181981, 1.7037873931363177`}]}, 
    {RGBColor[1, 0, 0], PointBox[{0.06908286234292094, 2.8493181462750767`}]}, 
    {RGBColor[1, 0, 0], PointBox[{3.832521260350409, 2.1792713490782836`}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.2842811779842065`, 2.344565796583827}]}, 
    {RGBColor[1, 0, 0], 
     PointBox[{2.2162429788499436`, -0.27334202802749585`}]}, 
    {RGBColor[1, 0, 0], PointBox[{0.3869192546156779, 5.587020576180378}]}, 
    {RGBColor[1, 0, 0], PointBox[{0.4141167822610279, 1.3282784629660684`}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.9365724121558485`, 0.7090918848049406}]}, 
    {RGBColor[1, 0, 0], PointBox[{2.3926555338359563`, 0.2096461095071196}]}, 
    {RGBColor[1, 0, 0], PointBox[{2.264592482414371, 1.9816920047450486`}]}, 
    {RGBColor[1, 0, 0], 
     PointBox[{-0.23036282664690177`, 0.6309203893948083}]}, 
    {RGBColor[1, 0, 0], PointBox[{4.652223439873495, 0.9761814473544658}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.3516448493696114`, 3.525062547652266}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.9438996170620657`, 1.6478337702776062`}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.3677909029420505`, 1.6417830823362412`}]}, 
    {RGBColor[1, 0, 0], PointBox[{2.3350042600337697`, -0.4247512851855637}]}, 
    {RGBColor[1, 0, 0], PointBox[{2.5773128781368433`, 0.8949942854672212}]}, 
    {RGBColor[1, 0, 0], PointBox[{2.043844095601368, 3.9131413097669308`}]}, 
    {RGBColor[1, 0, 0], PointBox[{0.4912537551662217, 0.5892576317639838}]}, 
    {RGBColor[1, 0, 0], PointBox[{2.0538995248686542`, -0.5486745167858555}]}, 
    {RGBColor[1, 0, 0], PointBox[{0.7051994828534456, 1.0153540212065835`}]}, 
    {RGBColor[1, 0, 0], PointBox[{3.686642815584235, 2.1277232114853977`}]}, 
    {RGBColor[1, 0, 0], PointBox[{3.404127061750891, 1.9104887113927855`}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.8045952575514255`, 5.497221113678569}]}, 
    {RGBColor[1, 0, 0], PointBox[{2.5537274872029463`, -2.431680985144585}]}, 
    {RGBColor[1, 0, 0], PointBox[{2.7796793057343967`, 2.5346443585037326`}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.1385217185640908`, 0.2691372396287346}]}, 
    {RGBColor[1, 0, 0], PointBox[{3.0964581256749595`, 3.1034901598119915`}]}, 
    {RGBColor[1, 0, 0], PointBox[{3.759820607762243, 1.4378705748735072`}]}, 
    {RGBColor[1, 0, 0], PointBox[{3.443903013969135, 2.6152292020055397`}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.4530856123215024`, -0.3198418707303303}]}, 
    {RGBColor[1, 0, 0], PointBox[{-0.1403390381143934, -0.6759813494768507}]}, 
    {RGBColor[1, 0, 0], PointBox[{0.4229152833293406, 1.0928236265600286`}]}, 
    {RGBColor[1, 0, 0], PointBox[{2.8801848986776672`, 1.0844620178445563`}]}, 
    {RGBColor[1, 0, 0], 
     PointBox[{0.17008299857274323`, -0.08256849021971635}]}, 
    {RGBColor[1, 0, 0], 
     PointBox[{3.3746022446969146`, 0.13053970860504616`}]}, 
    {RGBColor[1, 0, 0], PointBox[{2.5011257663121427`, -0.9307791442467597}]}, 
    {RGBColor[1, 0, 0], 
     PointBox[{2.1591183728140084`, 0.46193662563936866`}]}, 
    {RGBColor[1, 0, 0], PointBox[{2.548297835385104, 1.7060916211061294`}]}, 
    {RGBColor[1, 0, 0], 
     PointBox[{2.7065467146590843`, -1.6194369449740518`}]}, 
    {RGBColor[1, 0, 0], PointBox[{3.2059648136020225`, 2.1505908216309084`}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.391788131636586, 1.8154991979987236`}]}, 
    {RGBColor[1, 0, 0], 
     PointBox[{1.1963272678118444`, 0.19237045685152587`}]}, 
    {RGBColor[1, 0, 0], PointBox[{2.3848120091401954`, 1.0553079307578404`}]}, 
    {RGBColor[1, 0, 0], PointBox[{0.4481109241467294, 3.358622835966207}]}, 
    {RGBColor[1, 0, 0], PointBox[{0.19401658446182313`, 2.481276664239563}]}, 
    {RGBColor[1, 0, 0], PointBox[{0.05552195410889538, 2.5223648401560177`}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.6530220511970777`, 1.7494684120882495`}]}, 
    {RGBColor[1, 0, 0], PointBox[{3.0377309233131324`, -0.6914250060237102}]}, 
    {RGBColor[1, 0, 0], PointBox[{2.2728712506663387`, 2.052293279329856}]}, 
    {RGBColor[1, 0, 0], PointBox[{2.802924602446986, -1.3367804182197873`}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.023816009548145, -0.15229434864208424`}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.4896227560303454`, 2.2517662569089594`}]}, 
    {RGBColor[1, 0, 0], 
     PointBox[{1.8317086290481606`, -0.07411494487763126}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.0316742513427593`, -0.6022433962042899}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.2541532135422715`, -0.8444767265247579}]}, 
    {RGBColor[1, 0, 0], PointBox[{2.7558560380228645`, 4.9684798114465085`}]}, 
    {RGBColor[1, 0, 0], PointBox[{0.7080641157902375, 1.3294063087237153`}]}, 
    {RGBColor[1, 0, 0], PointBox[{2.009383404498062, -2.3124236922511736`}]}, 
    {RGBColor[1, 0, 0], 
     PointBox[{2.3203453738072755`, -0.15017009193336994`}]}, 
    {RGBColor[1, 0, 0], PointBox[{0.876356863187047, 2.483207606346013}]}, 
    {RGBColor[1, 0, 0], PointBox[{0.5042468016289313, 6.08246636693954}]}, 
    {RGBColor[1, 0, 0], PointBox[{2.1084823928924274`, 3.8645040543872127`}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.9045645714550516`, 0.6828899825293367}]}, 
    {RGBColor[1, 0, 0], PointBox[{3.0584739934624396`, 0.07108098820361475}]}, 
    {RGBColor[1, 0, 0], PointBox[{0.5732332471560228, 2.6758166332132767`}]}, 
    {RGBColor[1, 0, 0], PointBox[{2.8564510245956143`, 5.854265630156134}]}, 
    {RGBColor[1, 0, 0], 
     PointBox[{1.4754621627074753`, -0.14978284084777793`}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.7353800647764503`, 3.1371528826331634`}]}, 
    {RGBColor[1, 0, 0], PointBox[{0.8367418012412259, 6.215664656583694}]}, 
    {RGBColor[1, 0, 0], PointBox[{3.002883915964756, 1.6182774117677239`}]}, 
    {RGBColor[1, 0, 0], PointBox[{2.3357299657385315`, 1.925312343943867}]}, 
    {RGBColor[1, 0, 0], PointBox[{0.8131069611017473, 3.2099851831195556`}]}, 
    {RGBColor[1, 0, 0], PointBox[{2.274956898930776, 3.855900684125385}]}, 
    {RGBColor[1, 0, 0], PointBox[{3.063377973938012, 4.150834731386751}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.5214585964708032`, 0.5344069419258572}]}, 
    {RGBColor[1, 0, 0], PointBox[{0.5254588464133093, 2.902914783546938}]}, 
    {RGBColor[1, 0, 0], PointBox[{0.4484722496913762, 1.8903392515829576`}]}, 
    {RGBColor[1, 0, 0], PointBox[{2.7577361349924496`, 0.97184392351392}]}, 
    {RGBColor[1, 0, 0], PointBox[{2.063497692672719, 4.635743194435103}]}, 
    {RGBColor[1, 0, 0], 
     PointBox[{-0.28953781691849767`, 1.2966886671089601`}]}, 
    {RGBColor[1, 0, 0], PointBox[{2.0818054937956245`, 1.2925795313137165`}]}, 
    {RGBColor[1, 0, 0], PointBox[{0.0844691041553649, 2.6021215030758524`}]}, 
    {RGBColor[1, 0, 0], PointBox[{2.898954469604976, -0.34160322539975185`}]}, 
    {RGBColor[1, 0, 0], PointBox[{-0.3093880196475094, 2.6027741927416104`}]}, 
    {RGBColor[1, 0, 0], PointBox[{0.8654953466345665, 1.8678802340922425`}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.2438421621528286`, 2.352238095091768}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.5137413079122513`, -1.925373939736081}]}, 
    {RGBColor[1, 0, 0], PointBox[{0.6661165574429382, 4.013104134428309}]}, 
    {RGBColor[1, 0, 0], 
     PointBox[{0.41902341830238177`, -0.7983504797069245}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.219202209041367, 3.006000294847608}]}, 
    {RGBColor[1, 0, 0], 
     PointBox[{1.6354404565438634`, -1.7578915863620672`}]}, 
    {RGBColor[1, 0, 0], PointBox[{2.243202128672693, 0.48350334464205424`}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.125243449220418, 3.632330909152237}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.585698639501565, -2.1648647128714176`}]}, 
    {RGBColor[1, 0, 0], PointBox[{0.264719945494974, 0.9517928533464747}]}, 
    {RGBColor[1, 0, 0], PointBox[{2.0407215432542527`, 2.3485052738337986`}]}, 
    {RGBColor[1, 0, 0], PointBox[{0.9021282704705685, 5.166421801312822}]}, 
    {RGBColor[1, 0, 0], 
     PointBox[{0.33100530537247397`, 1.7662537322600718`}]}, 
    {RGBColor[1, 0, 0], 
     PointBox[{0.44593049292840914`, 2.1401817645770906`}]}, 
    {RGBColor[1, 0, 0], PointBox[{0.7130987067465643, 4.759326397166753}]}, 
    {RGBColor[1, 0, 0], PointBox[{0.8518401306241893, 1.1210749418407582`}]}, 
    {RGBColor[1, 0, 0], PointBox[{0.10242550195516964`, 2.171545014662481}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.2143458055647067`, -0.5718703457928842}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.9540376898701597`, 0.7884153752276611}]}, 
    {RGBColor[1, 0, 0], PointBox[{0.8182206105526092, 0.4739235275453286}]}, 
    {RGBColor[1, 0, 0], PointBox[{3.537039758126826, 1.3241742927689597`}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.93730521010938, 3.0240889791917756`}]}, 
    {RGBColor[1, 0, 0], PointBox[{2.818165041998044, -0.1978850252455433}]}, 
    {RGBColor[1, 0, 0], 
     PointBox[{0.9687414989595591, -0.36317384892682747`}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.688616088247105, 1.69745525021537}]}, 
    {RGBColor[1, 0, 0], PointBox[{0.09526150653792942, 0.8539859919381009}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.5197223225105014`, 4.4872840426662215`}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.9465960815924217`, 1.0575157804844029`}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.833420549006721, 2.056126230743046}]}, 
    {RGBColor[1, 0, 0], PointBox[{2.310790718174684, 0.34436906857408034`}]}, 
    {RGBColor[1, 0, 0], PointBox[{2.508019362208805, 0.1883974466859295}]}, 
    {RGBColor[1, 0, 0], 
     PointBox[{-0.038864023447712004`, 2.844412226184623}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.9536857786088644`, 3.21603644280036}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.1014385087821532`, 1.9859792403094714`}]}, 
    {RGBColor[1, 0, 0], PointBox[{2.4059336532810396`, 1.5617134766862797`}]}, 
    {RGBColor[1, 0, 0], PointBox[{0.92105860910629, -0.6493558098871759}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.1115785790688844`, 3.6266000170072754`}]}, 
    {RGBColor[1, 0, 0], PointBox[{0.7625352772844293, -1.6920475868497697`}]}, 
    {RGBColor[1, 0, 0], PointBox[{-1.5939649257070467`, 4.632175616935808}]}, 
    {RGBColor[1, 0, 0], PointBox[{0.8408784647878041, 2.4380948119590036`}]}, 
    {RGBColor[1, 0, 0], PointBox[{-0.2845355332861963, 2.112872690905811}]}, 
    {RGBColor[1, 0, 0], PointBox[{0.7576064736663515, 3.0514825651113497`}]}, 
    {RGBColor[1, 0, 0], PointBox[{-0.19805641929651463`, 3.210779575892258}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.3669581235453465`, -0.0635883621510196}]}, 
    {RGBColor[1, 0, 0], PointBox[{2.2900405775858035`, 1.685424875846664}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.3484163911949956`, 1.3268392408670648`}]}, 
    {RGBColor[1, 0, 0], 
     PointBox[{2.7559202463406116`, -2.5447173126774354`}]}, 
    {RGBColor[1, 0, 0], PointBox[{0.5057832783753821, 5.653444466737039}]}, 
    {RGBColor[1, 0, 0], PointBox[{0.7966266589760135, -2.8412028041947677`}]}, 
    {RGBColor[1, 0, 0], PointBox[{3.4024080003788875`, 1.3879874505877334`}]}, 
    {RGBColor[1, 0, 0], PointBox[{0.9250228410459589, 0.6618673803900811}]}, 
    {RGBColor[1, 0, 0], 
     PointBox[{2.5266189430068065`, -1.6366245606391354`}]}, 
    {RGBColor[1, 0, 0], PointBox[{2.790774074859664, 0.8699862487970663}]}, 
    {RGBColor[1, 0, 0], PointBox[{0.6355404999979, 4.967699191908598}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.5000978489286774`, -0.2320243307330765}]}, 
    {RGBColor[1, 0, 0], 
     PointBox[{0.23498691410290617`, -0.0606273264008681}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.4630957877491544`, 1.4748941785355936`}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.688700188955134, 1.0226556026841749`}]}, 
    {RGBColor[1, 0, 0], PointBox[{0.08569902024665654, 2.2391743029742335`}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.6693999910570674`, 4.4055328984591045`}]}, 
    {RGBColor[1, 0, 0], PointBox[{0.7052166377284577, 2.763647066929587}]}, 
    {RGBColor[1, 0, 0], PointBox[{0.39781695351536417`, 1.46291105663504}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.979591008531715, 4.7993084236736605`}]}, 
    {RGBColor[1, 0, 0], PointBox[{2.2808644717491964`, 1.183116414233745}]}, 
    {RGBColor[1, 0, 0], PointBox[{2.3407575700337206`, 2.5774249630458996`}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.5946731340162101`, -0.8278151294178802}]}, 
    {RGBColor[1, 0, 0], 
     PointBox[{-0.5635122663107319, -1.3747332422113088`}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.0638423091001008`, 2.245961272265627}]}, 
    {RGBColor[1, 0, 0], PointBox[{0.45308500229454074`, 4.345026674740483}]}, 
    {RGBColor[1, 0, 0], PointBox[{-0.9735231103764015, 6.144690020070647}]}, 
    {RGBColor[1, 0, 0], PointBox[{0.020300806295501683`, 4.95919688089743}]}, 
    {RGBColor[1, 0, 0], 
     PointBox[{2.1205453343762657`, -2.1162605634815503`}]}, 
    {RGBColor[1, 0, 0], 
     PointBox[{1.7037018825778905`, -0.09463063006879513}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.262317909787019, 1.6926053634026703`}]}, 
    {RGBColor[1, 0, 0], 
     PointBox[{0.35761868465090707`, 1.7828623932216936`}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.8278543707883177`, 3.437844674300094}]}, 
    {RGBColor[1, 0, 0], PointBox[{2.5700654519200827`, 2.8988544481353706`}]}, 
    {RGBColor[1, 0, 0], PointBox[{2.6405666374266827`, 1.6075022569404016`}]}, 
    {RGBColor[1, 0, 0], PointBox[{2.03023122816542, 2.0005673747976727`}]}, 
    {RGBColor[1, 0, 0], 
     PointBox[{1.8163472310281357`, -3.6312117691330377`}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.3049589950913283`, 6.190050666664035}]}, 
    {RGBColor[1, 0, 0], 
     PointBox[{0.6429364245354497, -0.019761839215256094`}]}, 
    {RGBColor[1, 0, 0], PointBox[{0.8010730810175398, -1.289048176236339}]}, 
    {RGBColor[1, 0, 0], 
     PointBox[{0.8622841849099228, -0.28479251230672764`}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.4646705939325537`, 4.121694113476206}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.4388901564296936`, 6.427033263517999}]}, 
    {RGBColor[1, 0, 0], PointBox[{2.6367399708223163`, -0.608887488532694}]}, 
    {RGBColor[1, 0, 0], PointBox[{3.704880277227995, 0.3867492452500938}]}, 
    {RGBColor[1, 0, 0], PointBox[{2.4248482711320163`, 4.292230269932917}]}, 
    {RGBColor[1, 0, 0], PointBox[{-1.4558426396746813`, 4.519375948209799}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.289411868794752, 2.0691777685657344`}]}, 
    {RGBColor[1, 0, 0], PointBox[{2.7424914808755063`, 1.9382769837240887`}]}, 
    {RGBColor[1, 0, 0], PointBox[{3.956006836165142, -0.9259557342988902}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.391387989473878, 2.6132583261563442`}]}, 
    {RGBColor[1, 0, 0], PointBox[{1.3461278712796574`, 1.6944410670097902`}]}, 
    {RGBColor[1, 0, 0], PointBox[{-0.15482891172513202`, 4.467090978711779}]}, 
    {RGBColor[1, 0, 0], PointBox[{3.5692342056429975`, 0.5542763824831322}]}, 
    {RGBColor[1, 0, 0], PointBox[{2.161839600701687, 6.040504176357629}]}, 
    {RGBColor[0, 1, 0], PointBox[{-0.4175029563239654, -0.0363021969147348}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.2232008043594833`, -2.646107149219467}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.7783900179627359`, -2.770395444639722}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.0438685853618836`, 1.954722402922728}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-1.0335762874454177`, 1.4679915661818057`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-2.57545847053934, 1.242864474823334}]}, 
    {RGBColor[0, 1, 0], PointBox[{-2.4808835747577898`, 2.997655083072971}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-1.3620057801583845`, -1.0215112921772147`}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-1.2186716563297173`, -0.34918019152339497`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-0.762777628024981, 2.8289105373591084`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.712337882375809, 1.3626577660380146`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-2.2851201304117623`, -1.47432089884306}]}, 
    {RGBColor[0, 1, 0], PointBox[{0.034635340362876965`, 5.226206575624735}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-1.5420901655031738`, -0.18474790909430827`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-0.9919367882378375, -0.3550214147703339}]}, 
    {RGBColor[0, 1, 0], PointBox[{-2.3038181974678418`, 4.12466220151539}]}, 
    {RGBColor[0, 1, 0], PointBox[{-2.698124412390265, 5.084342126703064}]}, 
    {RGBColor[0, 1, 0], PointBox[{-3.0718103501048333`, 0.4042470944784654}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.614525042532352, 2.3338393728958042`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-0.9600816008521965, 3.2367623639413137`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-2.179697182516727, 2.588825707984917}]}, 
    {RGBColor[0, 1, 0], PointBox[{-0.35998910720280985`, 3.128187126229356}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-1.3021909143854373`, -1.3746497136522118`}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{0.17308729164603642`, 3.6378113186822527`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-2.356278716495662, 2.7165155975916617`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-4.342598510121583, 2.253635159350429}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-0.0006361825410601263, 1.4381112831689682`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.8081481783818836`, 0.5252467824311955}]}, 
    {RGBColor[0, 1, 0], PointBox[{-3.44163333446018, 3.1244088430739145`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-0.7369431040328712, 1.3229199716238775`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-0.821236571958091, 1.1941405896141908`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-0.8932057110775705, 1.2299045973778582`}]}, 
    {RGBColor[0, 1, 0], PointBox[{1.1305306909759283`, 3.150506524130247}]}, 
    {RGBColor[0, 1, 0], PointBox[{-0.7868313130545346, 0.460176798027342}]}, 
    {RGBColor[0, 1, 0], PointBox[{-2.374609864754211, 1.8906375453751498`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-0.331272245961439, 2.7020318151279445`}]}, 
    {RGBColor[0, 1, 0], PointBox[{0.7489453729288917, 3.59068111048315}]}, 
    {RGBColor[0, 1, 0], PointBox[{-2.4470427557982, -0.6247160781016645}]}, 
    {RGBColor[0, 1, 0], PointBox[{-2.9590357889543406`, 0.3905968572813756}]}, 
    {RGBColor[0, 1, 0], PointBox[{-4.382498603856304, 4.307621466559091}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-1.8139479587334473`, 1.0155871805624845`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.037617193480422, -1.224773554383027}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.7435958924633255`, 0.9708234763293134}]}, 
    {RGBColor[0, 1, 0], PointBox[{-0.362633969782755, -0.2668035538256932}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{0.053939686496691897`, -1.7320220256377867`}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-0.9795035488473823, 0.46652289662137725`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-3.3277569374617864`, 2.186159953029538}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-1.5930046964749915`, 2.6375685298337572`}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-2.0409719689228796`, 3.2155487238995444`}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{0.10768276207870597`, 0.15802893296852294`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.9983217006641119`, 0.7877791415363016}]}, 
    {RGBColor[0, 1, 0], PointBox[{0.2784047703095822, -3.2565911439473556`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-0.3976173065216879, -1.225851557852843}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.6578526766738957`, -3.089550049345285}]}, 
    {RGBColor[0, 1, 0], PointBox[{-0.4220020637789501, 1.616620743480131}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-1.0362603106828936`, -0.7511213642784409}]}, 
    {RGBColor[0, 1, 0], PointBox[{-2.026289979031419, 0.7646582255778182}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.976288919414587, 1.2168664963414813`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-2.2685012058563903`, 0.3472870856572263}]}, 
    {RGBColor[0, 1, 0], PointBox[{-0.52010398573849, 2.0900118238473078`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-0.3702804908797146, 1.7079384876118535`}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-1.0961936818215627`, 0.22520040921959417`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-0.9571717537383361, 2.567560667399171}]}, 
    {RGBColor[0, 1, 0], PointBox[{-5.3587141654371395`, 2.51720302176808}]}, 
    {RGBColor[0, 1, 0], PointBox[{-0.9039042367547658, 3.9465748195223713`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-2.504699989024564, 0.6651907467667606}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-3.0940078273431846`, 0.29094998667464755`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-2.1381694948583436`, 4.067115432841069}]}, 
    {RGBColor[0, 1, 0], PointBox[{0.11190524683922187`, 0.90838764945167}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.4627877822501263`, 0.1413616475276821}]}, 
    {RGBColor[0, 1, 0], PointBox[{-3.852704780493844, -1.4944092622833138`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.6478718284867826`, 0.6169689072041479}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-2.9168310022464485`, -0.2512239332784356}]}, 
    {RGBColor[0, 1, 0], PointBox[{-2.065975649040678, 2.8033020727351383`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.0538178255614687`, 2.96434674751334}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-2.7291798483181866`, 1.7052100195226214`}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-1.5387547420573622`, 1.1524900980005885`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-2.2327449361500866`, 4.740649218321767}]}, 
    {RGBColor[0, 1, 0], PointBox[{-2.20859699436207, -1.4952404601170106`}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-1.4318115215217184`, -1.2925355368344893`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-0.5143902803722831, -4.95788448051179}]}, 
    {RGBColor[0, 1, 0], PointBox[{-2.516774376131371, 0.0453349807295389}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.6962049194038693`, 3.407981282673912}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.8221575584133114`, 2.126587945255425}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.352177246881942, 2.435385500607845}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.3639136511273473`, 2.056363275047323}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-1.3257418265963605`, -1.5876319941804389`}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-2.3635970122590253`, -0.47395328962112626`}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-0.2061479424915631, -1.1893286231976798`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.4796298586848309`, 1.226312863999177}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.6571359605329552`, -1.107737466619822}]}, 
    {RGBColor[0, 1, 0], PointBox[{-3.31816089173477, 4.530703537100937}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-1.1567448659781485`, -1.5190180283167511`}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-1.7961096306830613`, -1.0875327787794196`}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-1.2852781482069386`, 1.3074909943686426`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-3.672440943732851, -0.5354383727510332}]}, 
    {RGBColor[0, 1, 0], PointBox[{-2.0109106101901086`, 0.6840499289962685}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.718703602727076, 5.617298640436225}]}, 
    {RGBColor[0, 1, 0], PointBox[{-3.290474815780575, 0.001387968152607777}]}, 
    {RGBColor[0, 1, 0], PointBox[{-2.622691962774701, -1.179800879482376}]}, 
    {RGBColor[0, 1, 0], PointBox[{-2.600687525710593, 0.07603506740290189}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-0.11235744361129552`, 2.0206393304498436`}]}, 
    {RGBColor[0, 1, 0], PointBox[{0.24767571143197498`, 2.380588240108377}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-1.8698600396222722`, 0.21196027913886228`}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-0.8907164725974557, 0.11456542715444118`}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-1.6450488487012593`, -0.7112920201719888}]}, 
    {RGBColor[0, 1, 0], PointBox[{-2.6445813843175783`, -0.534623965688992}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-2.9662046559249844`, 2.5856023597203674`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.3652848313453716`, 0.7364483726305542}]}, 
    {RGBColor[0, 1, 0], PointBox[{-0.8443308581011084, 0.5238084441784319}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-2.3512199489948484`, -0.5498227111496556}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.519387398098666, 1.8241176994715183`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-0.6122899821926894, 1.3364995141770106`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.46583132989999, -2.049578789598539}]}, 
    {RGBColor[0, 1, 0], PointBox[{-0.4924826929712547, 3.0301725577603844`}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-1.6600250938551084`, -3.6649620713082154`}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-1.3514995691743925`, 0.12401987596600672`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-2.596520831220386, -0.4524759598288852}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-2.2120954746846655`, 3.1272573991489114`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.525749740173602, 0.07829390955299109}]}, 
    {RGBColor[0, 1, 0], PointBox[{-3.604382379140291, 2.320084781171425}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.6073317213416423`, 0.9012145544329646}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-2.5555315249311836`, -1.9002642980647848`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-2.234592301533829, 0.5407369758143743}]}, 
    {RGBColor[0, 1, 0], PointBox[{-2.442721987191608, 2.0644772027208167`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-0.138405447601345, 5.061404688441064}]}, 
    {RGBColor[0, 1, 0], PointBox[{1.2239749896594705`, 2.5213213789350672`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.643134424271867, 1.4057383632447555`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-0.8752755810926974, 1.7089087052169787`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.06862454311042, -1.3940653569418124`}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-2.3354632050195745`, 1.0062297275176557`}]}, 
    {RGBColor[0, 1, 0], PointBox[{0.6460851346942689, 0.41991929481748747`}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-0.5392647144842718, -1.2827915236715182`}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{0.47829214639910433`, -1.3859521085482065`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-0.3573855685072225, -0.8358202116665769}]}, 
    {RGBColor[0, 1, 0], PointBox[{-0.2656609949510218, 0.5218379315237758}]}, 
    {RGBColor[0, 1, 0], PointBox[{-2.1304053863173182`, 0.6377922743297086}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-3.3516282379474176`, -0.9830296233065523}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.905768897059921, 0.05004488418598707}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.6224776800585883`, 0.6004274067899737}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-1.5218329868188492`, -0.36842892912574166`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.150812285653639, 1.0605699853816715`}]}, 
    {RGBColor[0, 1, 0], PointBox[{0.10137238775411839`, 1.13047402102998}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-1.6865342531465328`, -0.2534314348388722}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.2511808707384553`, 0.8211610240263532}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.863628997289899, 0.5403708991372125}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.492232316769231, 0.8286236017707789}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-1.1122414978545356`, 1.4443851610010447`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-2.549517048704689, 4.2655984604484525`}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-1.1107611673540538`, 1.0070528676859585`}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-0.04436399328783924, -0.2088942810040446}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.905232479308005, -0.898408493835912}]}, 
    {RGBColor[0, 1, 0], PointBox[{-2.2122497087485433`, -2.039842384290516}]}, 
    {RGBColor[0, 1, 0], PointBox[{-0.5475540704342035, 2.1461148684875937`}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-0.3846639811739334, 0.29982517103418005`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-3.8367582988723394`, 2.73580061348516}]}, 
    {RGBColor[0, 1, 0], PointBox[{-2.2697351453007535`, 2.11236509692981}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.9665350978391305`, 0.1886641090846437}]}, 
    {RGBColor[0, 1, 0], PointBox[{0.0494036598425307, 0.22383096016344495`}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{0.48838889267835994`, 3.5626887690445512`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-0.801222007667582, 0.48058937720606454`}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{0.27370747194247347`, -0.12374126901601823`}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-1.7930397108097615`, -0.09600861807559347}]}, 
    {RGBColor[0, 1, 0], PointBox[{0.9697036338717044, 1.3758889223262114`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-0.5779993033151414, -1.61535963101857}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-1.9025793511750846`, 3.9377776923287016`}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-1.0090574716644831`, 1.4661667087794021`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-2.0090729702660473`, 1.953462796888092}]}, 
    {RGBColor[0, 1, 0], PointBox[{-0.27049000756482444`, 5.838179600350102}]}, 
    {RGBColor[0, 1, 0], PointBox[{-0.9851604364865604, 0.7734563757390631}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.795724171633842, -4.0604618163846835`}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-2.1313528354981237`, 1.0940988484635754`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-2.20042903916385, 0.011639339184537523`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-2.033317957836917, -1.3439949468777925`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.17452295510566, -1.4658406882302115`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.3480468459273462`, 4.032262067852164}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-1.4115124522146774`, 2.5245794882568893`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.8555672319556393`, 2.112789005496408}]}, 
    {RGBColor[0, 1, 0], PointBox[{-0.5919011183910847, 3.7017547371349506`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-0.31952988016766315`, 3.749517514584859}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-1.4546444204094564`, 1.1516384781344153`}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-1.9190085496456353`, 0.35970583898147546`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.0733079637827763`, 0.6242320308923498}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.87939271339491, 0.4547889250570635}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-0.17914645250486427`, 1.5791155429112504`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-0.6501113832473016, 3.2899971011510036`}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-2.5652299832582868`, 2.7303017783981134`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-0.4812173652695637, 3.5631721612621896`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-0.8435213333528845, -0.8686196516777811}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.55171995494186, 1.6975379055545532`}]}, 
    {RGBColor[0, 1, 0], PointBox[{0.2796982417110907, 3.2491208824190134`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.2232625008342555`, -2.07481907528076}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-0.7208002237816392, -2.1358942983286626`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.592048715278801, 6.054856531631802}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-1.2060461416823778`, 2.3047829604128314`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.2278751027750612`, 1.795915092474214}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-1.7240320789356156`, 1.8795138143132883`}]}, 
    {RGBColor[0, 1, 0], 
     PointBox[{-2.4673450559772743`, 1.9288124329062468`}]}, 
    {RGBColor[0, 1, 0], PointBox[{-1.5119430066945787`, 2.603218676989684}]}, 
    {RGBColor[0, 1, 0], PointBox[{-2.2114680322138063`, 0.7536282337120588}]}, 
    {RGBColor[0, 0, 1], PointBox[{1.1036034792747718`, -0.7262764712845236}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.6077261283408116, -3.5999419477191075`}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{-1.2973477897639707`, -4.3158624537782115`}]}, 
    {RGBColor[0, 0, 1], PointBox[{-0.6623114628841097, -1.968047446578856}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.3492437051096847, -3.679615181348783}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.297908241405033, -1.6893838602505789`}]}, 
    {RGBColor[0, 0, 1], PointBox[{-3.1365527554260173`, -6.928097483022907}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{0.23421051455588773`, -1.6733764503433413`}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{-0.038593641306756216`, -2.9370762707578253`}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{-0.12294263822300473`, -0.5465975836054353}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{1.3939676059035873`, -2.3811498987922968`}]}, 
    {RGBColor[0, 0, 1], PointBox[{-0.36980107029148374`, -4.45099235784037}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.9595290253382309, -2.744703821597807}]}, 
    {RGBColor[0, 0, 1], PointBox[{-1.7457782394972876`, -4.589223401414467}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.3664462790880171, -1.2689558353878947`}]}, 
    {RGBColor[0, 0, 1], PointBox[{2.554278885854768, 0.9518694068172611}]}, 
    {RGBColor[0, 0, 1], PointBox[{-1.1166264818143166`, -4.502534419972518}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{-0.1535235739750528, -1.8753226708054893`}]}, 
    {RGBColor[0, 0, 1], PointBox[{1.0565959698038137`, -1.854199229342059}]}, 
    {RGBColor[0, 0, 1], PointBox[{-0.9767308859167688, -3.58054828864267}]}, 
    {RGBColor[0, 0, 1], PointBox[{1.3063523810422937`, -1.428522704571062}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{-0.026981071924877316`, -2.899385708129473}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{2.1900831306552297`, 0.41834603278190396`}]}, 
    {RGBColor[0, 0, 1], PointBox[{-2.453754982656914, -5.6384866773948}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{-1.2927090680805988`, -5.5809359396027425`}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.5777061953907638, -2.362341706326963}]}, 
    {RGBColor[0, 0, 1], PointBox[{1.2255025976918643`, -0.5432124420490139}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{-0.5280084630054954, -3.8010744834049515`}]}, 
    {RGBColor[0, 0, 1], PointBox[{2.5185816501100042`, 2.7158426346133364`}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{-1.3834066515552355`, -3.7410203405025477`}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{-0.034704044189679546`, -2.897912808924047}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.8195456535961565, -0.5452043914588427}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{0.10471513430084028`, -1.8613103429912468`}]}, 
    {RGBColor[0, 0, 1], PointBox[{-0.698773273398779, -2.2420620781000773`}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{-0.13482107447573194`, -1.186082517503981}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{0.11454452021543497`, -1.7212463512747962`}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.3246936726498185, -0.7497280622985816}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{0.28364400613293533`, -2.3517764680406064`}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.9363555404681173, 0.13344687885499074`}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{-0.028221650900190735`, -1.9479764311945398`}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{0.024944317041414032`, -3.498991530020179}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.457071909671937, -1.7815753425511485`}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{-0.22342469963292455`, -3.303557341113751}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{0.2993712019282784, -0.23088072968075934`}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.4932381956359325, -1.9972405138305431`}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.42237735643502033`, -1.714932526421932}]}, 
    {RGBColor[0, 0, 1], PointBox[{2.427607471513858, 0.5050953568995649}]}, 
    {RGBColor[0, 0, 1], PointBox[{-0.42689594036264567`, -5.85923823093616}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{1.0444736694331898`, -0.10786446941776573`}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{-0.47414031227832465`, -4.831602356023549}]}, 
    {RGBColor[0, 0, 1], PointBox[{2.0729238446595266`, 1.323842684809391}]}, 
    {RGBColor[0, 0, 1], PointBox[{1.6360307916678187`, 0.7746246590616566}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{0.027044324715115062`, -1.9258888510787928`}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.9254330380257518, 0.6757137992810245}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.8054512919918324, -1.618770943590819}]}, 
    {RGBColor[0, 0, 1], PointBox[{1.0095626702281142`, 1.2074057785477033`}]}, 
    {RGBColor[0, 0, 1], PointBox[{-1.6280626534099625`, -4.292339466671931}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{0.05363562771239562, -2.4941705850948597`}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{0.10827946028816565`, -3.6112538074291436`}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{-0.48061890582965894`, -4.417219615148189}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.7099785973690612, -1.9623050480971849`}]}, 
    {RGBColor[0, 0, 1], PointBox[{-0.09005397596382506, -4.176573201691186}]}, 
    {RGBColor[0, 0, 1], PointBox[{-0.4763486119334548, -3.458825146733023}]}, 
    {RGBColor[0, 0, 1], PointBox[{-1.4619293115058176`, -5.276759062800009}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{0.27150929247362576`, -1.7522325887647763`}]}, 
    {RGBColor[0, 0, 1], PointBox[{-1.1387752649676108`, -4.907374480654948}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.329755261405834, -2.398703890942783}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.7538828086378733, -1.799698378166485}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{-0.14128375450874064`, -4.085601382296152}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.9722001595233724, 0.6652163267716364}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{-0.42427706540970883`, -4.2376051828593395`}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.863985466112063, -0.7109246209657025}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{-0.07624222803453393, -3.9429807663537506`}]}, 
    {RGBColor[0, 0, 1], PointBox[{-1.6622592458345773`, -7.138575991823754}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.42564803136651463`, -2.923753902568828}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.450969528925771, -0.12368206473285737`}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{-0.5142703973312457, -3.1188635281683816`}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.9794142594926201, 1.3646582859822014`}]}, 
    {RGBColor[0, 0, 1], PointBox[{-0.3513195504591695, -2.033568497129972}]}, 
    {RGBColor[0, 0, 1], PointBox[{-1.2060861898594217`, -4.312097222100855}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.6548894486233097, -3.1592863372439175`}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{-1.2786501431052921`, -5.0664767298245685`}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{1.3303256383895739`, -2.2452586830046113`}]}, 
    {RGBColor[0, 0, 1], PointBox[{-0.5230936527299299, -4.334403826908374}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{-0.40986255724307485`, -3.5742125952936523`}]}, 
    {RGBColor[0, 0, 1], PointBox[{1.628793561379719, -0.4437344124361071}]}, 
    {RGBColor[0, 0, 1], PointBox[{-0.5085471775832555, -2.973164372044544}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.5259317506653802, -1.4101528973828348`}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.7602892778170071, -2.3438568831891122`}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.4264817622412089, -1.7479269839315426`}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{-0.46662184767031434`, -3.743429856153525}]}, 
    {RGBColor[0, 0, 1], PointBox[{1.670461739287679, 0.7198012613798235}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.09353229613478103, -0.9630269501159683}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{0.19302779769264333`, -0.024024054162987696`}]}, 
    {RGBColor[0, 0, 1], PointBox[{-0.3780171182386745, -4.920381545287594}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{1.6667415868478666`, -2.0157357505169755`}]}, 
    {RGBColor[0, 0, 1], PointBox[{-1.4690980352355758`, -4.617429445939306}]}, 
    {RGBColor[0, 0, 1], PointBox[{-0.843952891791635, -4.470911666749336}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{-1.0594465547833312`, -6.1452476516064465`}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.7280624078366544, -1.2572034059254353`}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{-0.03741145472466888, -1.9362770888518428`}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.5399419422300703, -2.472672821349065}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{0.025775921486657232`, -2.2265871927343293`}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{-0.9944483659213614, -3.7471362416391676`}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.9951081084791139, -1.7107234268802332`}]}, 
    {RGBColor[0, 0, 1], PointBox[{-0.7139236862748304, -1.753978237569266}]}, 
    {RGBColor[0, 0, 1], PointBox[{-0.3296070641915309, -2.473369922313614}]}, 
    {RGBColor[0, 0, 1], PointBox[{1.0140513533285909`, -0.7048525939357648}]}, 
    {RGBColor[0, 0, 1], PointBox[{1.0002377465115015`, -0.6434224982469272}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.9387668695642184, -0.9346727156858119}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{-2.1459486881543746`, -3.7583029226367906`}]}, 
    {RGBColor[0, 0, 1], PointBox[{-1.125351051985597, -5.057961558049039}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{-1.1995258147924845`, -3.2730616064411935`}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{0.26439729880812696`, -1.3717553551239219`}]}, 
    {RGBColor[0, 0, 1], PointBox[{-1.3915494035634706`, -4.794361651840452}]}, 
    {RGBColor[0, 0, 1], PointBox[{-0.1496337303164529, -2.809928168625021}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{-0.12872810598786777`, -1.8918459385416284`}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{0.6026684684419134, 0.026749147368715143`}]}, 
    {RGBColor[0, 0, 1], PointBox[{-0.5228297968217659, -4.67758771389769}]}, 
    {RGBColor[0, 0, 1], PointBox[{1.117211606192509, -0.48219127061274936`}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.5132376193961281, -1.423414277635264}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.5775122823424463, -4.039149176293073}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.9906905424453226, -2.7580911237905243`}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.2957282082124193, -1.8806089932155334`}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{1.1222947428072976`, -0.03523995128633395}]}, 
    {RGBColor[0, 0, 1], PointBox[{-0.02623335125092707, -1.390165494350038}]}, 
    {RGBColor[0, 0, 1], PointBox[{-0.9245535422864396, -5.113021803983159}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.23874753967227666`, -4.35338413255421}]}, 
    {RGBColor[0, 0, 1], PointBox[{-1.2682444935868453`, -4.777664910018538}]}, 
    {RGBColor[0, 0, 1], PointBox[{-2.418559694868698, -5.97961564245574}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.4164383385430717, -2.576682507378382}]}, 
    {RGBColor[0, 0, 1], PointBox[{1.7563133405309055`, 1.4426559554576226`}]}, 
    {RGBColor[0, 0, 1], PointBox[{-1.7945797949256834`, -5.345999225943095}]}, 
    {RGBColor[0, 0, 1], PointBox[{1.2227786645488938`, 1.1818166387821885`}]}, 
    {RGBColor[0, 0, 1], PointBox[{1.512469930990216, -1.5373486848449915`}]}, 
    {RGBColor[0, 0, 1], PointBox[{-0.6253679115994741, -2.493126888793654}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.2588671756656469, -1.326730257829711}]}, 
    {RGBColor[0, 0, 1], PointBox[{-1.644790633825812, -4.7787615741755705`}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{-0.8111115499112032, -2.6875030502880293`}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{0.42773459965565774`, -0.4747416033826988}]}, 
    {RGBColor[0, 0, 1], PointBox[{-0.859945172677453, -2.821486568956762}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{0.20288007283516576`, -1.4478892400901422`}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{-0.6208293022648955, -3.8950859237905675`}]}, 
    {RGBColor[0, 0, 1], PointBox[{-1.290345302342239, -5.757881921408037}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{-0.5190024371336808, -2.7655924473602367`}]}, 
    {RGBColor[0, 0, 1], PointBox[{-0.8867118982784554, -5.040163467464275}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{-0.8423926383460919, -3.1709703376654046`}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{0.0003567271991518867, -3.6115220831616552`}]}, 
    {RGBColor[0, 0, 1], PointBox[{-0.697567962208918, -4.382078628129939}]}, 
    {RGBColor[0, 0, 1], PointBox[{-1.190257229635985, -4.79856659552023}]}, 
    {RGBColor[0, 0, 1], PointBox[{-1.4094176448734008`, -6.357948114199248}]}, 
    {RGBColor[0, 0, 1], PointBox[{-0.8307397270917484, -1.351540752412243}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{-0.19708307463205374`, -4.640595820945043}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{-0.13488423074473693`, -2.9736154246870923`}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.9027044861372779, -1.357685163666886}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.3076936306982885, -1.0644141145926462`}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{1.0242543053449435`, -1.0316821596604664`}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.4940278180296474, -1.813301382972087}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{-0.29411848352755904`, -4.079013154228218}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{-0.36158888303716963`, -3.874311743854886}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.8026249926108967, -1.7060850536219752`}]}, 
    {RGBColor[0, 0, 1], PointBox[{-0.2978971074828518, -3.663849061551246}]}, 
    {RGBColor[0, 0, 1], PointBox[{-0.3959116284201157, -5.01662665678736}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.9615104633335843, 0.6301421326135643}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.7268323639162647, -1.5231497379664747`}]}, 
    {RGBColor[0, 0, 1], PointBox[{-0.7288971976839351, -2.99573112780108}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.4680537425177501, -1.0932983144123372`}]}, 
    {RGBColor[0, 0, 1], PointBox[{2.3405443044499568`, 1.0254820456085985`}]}, 
    {RGBColor[0, 0, 1], PointBox[{-0.2354160507926377, -3.785465396919721}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{-0.28116181344187907`, -3.3619435442883985`}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{-0.4191630212803629, -3.0295576191294584`}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.5971062317237623, -2.191940757564116}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.8478645367713504, -0.6625983555996555}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{-0.46191202111499957`, -4.413409882055635}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.24419226370440097`, -3.442611246299666}]}, 
    {RGBColor[0, 0, 1], PointBox[{-0.5871150033248821, -2.696862711817931}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.10531546668930873`, -4.611544493215549}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{-1.1020411055288213`, -1.7977492012897518`}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{-0.21754058933819076`, -3.1821794430413735`}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{-0.051498582557455215`, -0.8009693782421445}]}, 
    {RGBColor[0, 0, 1], PointBox[{2.5606571213886107`, 1.1400050949775729`}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{0.7293771633407174, -0.43200292649273386`}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{-0.3071921178136032, -1.7988187180707738`}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.5991673744327377, 0.539837781959164}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.5217706844737516, -1.9645051126695976`}]}, 
    {RGBColor[0, 0, 1], PointBox[{-0.7613359320482318, -5.8830825014296}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.5574104352040026, -0.6939505435469606}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.5046255520344044, -1.2495058811741815`}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{-0.0049636432502039845`, -3.433939901344314}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{2.2229093065318684`, 0.20658687987109214`}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{-0.1554832902480739, -2.3824472859132233`}]}, 
    {RGBColor[0, 0, 1], PointBox[{1.3656874181713687`, -0.5999686512758284}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.2960600585828513, -3.873689198673249}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{-0.16594954041326476`, -1.4838339915598544`}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{0.01377512170093533, -2.3482776922002633`}]}, 
    {RGBColor[0, 0, 1], PointBox[{-0.886229535716801, -2.5774298491912995`}]}, 
    {RGBColor[0, 0, 1], PointBox[{-0.4830401847466165, -2.405824914291314}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.5285897474394571, -2.043456406822448}]}, 
    {RGBColor[0, 0, 1], PointBox[{0.48290033378357905`, -1.954682682288472}]}, 
    {RGBColor[0, 0, 1], 
     PointBox[{0.4159603962368241, -2.299125643903258}]}}, {
    GraphicsComplexBox[CompressedData["
1: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
Oa5L/gcxUomG
     "], {{}, {}, 
      TagBox[
       TooltipBox[
        {RGBColor[0.7, 0., 0.], Thickness[Large], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
          35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
          52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
          69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 
          86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 
          102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 
          115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 
          128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 
          141, 142, 143, 144, 145, 146, 147, 148}]},
        RowBox[{"$Failed", "\[Equal]", "0.5`"}]],
       Annotation[#, $Failed == 0.5, "Tooltip"]& ]}], {}}, {
    GraphicsComplexBox[CompressedData["
1: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
     "], {{}, {}, 
      TagBox[
       TooltipBox[
        {RGBColor[0., 0.7, 0.], Thickness[Large], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
          35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
          52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
          69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 
          86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 
          102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 
          115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 
          128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 
          141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 
          154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 
          167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 
          180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 
          193}]},
        RowBox[{"$Failed", "\[Equal]", "0.5`"}]],
       Annotation[#, $Failed == 0.5, "Tooltip"]& ]}], {}}, {
    GraphicsComplexBox[CompressedData["
1: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
     "], {{}, {}, 
      TagBox[
       TooltipBox[
        {RGBColor[0., 0., 0.7], Thickness[Large], 
         LineBox[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 
          18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 
          35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 
          52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 
          69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 
          86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 
          102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 
          115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 
          128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 
          141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 
          154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 
          167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 
          180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 
          193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 
          206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 
          219, 220, 221, 222, 223, 224, 225}]},
        RowBox[{"$Failed", "\[Equal]", "0.5`"}]],
       Annotation[#, $Failed == 0.5, "Tooltip"]& ]}], {}}},
  Frame->True,
  PlotRange->5]], "Output",
 CellChangeTimes->{
  3.819603473591076*^9, {3.819604051892147*^9, 3.819604057761427*^9}, 
   3.8196040904602165`*^9},
 CellLabel->
  "Out[145]=",ExpressionUUID->"d69c3a7e-9d48-40fe-b207-9f6e5a79a5cd"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["predict an image from image", "Subsection",
 CellChangeTimes->{{3.8196041481977386`*^9, 
  3.819604155650032*^9}},ExpressionUUID->"45222b72-819b-4dd6-bbff-\
14e983e43792"],

Cell[CellGroupData[{

Cell["1\tprepare datasets", "Subsubsection",
 CellChangeTimes->{{3.81960415877365*^9, 3.819604163959477*^9}, {
  3.8196062809523697`*^9, 
  3.81960628111663*^9}},ExpressionUUID->"2d766b3d-40c8-488f-be5e-\
50cc3fc951bf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "imageCreate", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<Color\>\"", "\[Rule]", "Black"}], ",", 
     RowBox[{"\"\<Size\>\"", "\[Rule]", ".1"}], ",", 
     RowBox[{"\"\<Shape\>\"", "\[Rule]", "\"\<Point\>\""}], ",", 
     RowBox[{"\"\<Filter\>\"", "\[Rule]", "0"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"imageCreate", "[", 
   RowBox[{"pt_", ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"size", "=", 
       RowBox[{"OptionValue", "@", "\"\<Size\>\""}]}], ",", 
      RowBox[{"color", "=", 
       RowBox[{"OptionValue", "@", "\"\<Color\>\""}]}]}], "}"}], ",", 
    RowBox[{"GaussianFilter", "[", 
     RowBox[{
      RowBox[{"ColorConvert", "[", 
       RowBox[{
        RowBox[{"Rasterize", "[", 
         RowBox[{"Graphics", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"LightGray", ",", 
               RowBox[{"Rectangle", "[", "]"}]}], "}"}], ",", 
             RowBox[{"Switch", "[", 
              RowBox[{
               RowBox[{"OptionValue", "@", "\"\<Shape\>\""}], ",", 
               "\"\<Rect\>\"", ",", 
               RowBox[{"{", 
                RowBox[{"color", ",", 
                 RowBox[{"Rectangle", "[", 
                  RowBox[{
                   RowBox[{"pt", "-", 
                    RowBox[{"{", 
                    RowBox[{"size", ",", "size"}], "}"}]}], ",", 
                   RowBox[{"pt", "+", 
                    RowBox[{"{", 
                    RowBox[{"size", ",", "size"}], "}"}]}]}], "]"}]}], "}"}], 
               ",", "\"\<Disk\>\"", ",", 
               RowBox[{"{", 
                RowBox[{"color", ",", 
                 RowBox[{"Disk", "[", 
                  RowBox[{"pt", ",", "size"}], "]"}]}], "}"}], ",", "_", ",", 
               RowBox[{"{", 
                RowBox[{"color", ",", 
                 RowBox[{"PointSize", "@", "size"}], ",", 
                 RowBox[{"Point", "[", "pt", "]"}]}], "}"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"Frame", "\[Rule]", "False"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "32"}]}], "]"}], "]"}], ",", 
        "\"\<RGB\>\""}], "]"}], ",", 
      RowBox[{"OptionValue", "@", "\"\<Filter\>\""}]}], "]"}]}], 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8196041657143183`*^9, 3.8196041657186975`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"1964a4f3-4ec1-4ba9-a4e7-62cf9ced6eb8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$status", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Batch", "[", "n_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"imageCreate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"$status", "++"}], ";", "\[IndentingNewLine]", 
          RowBox[{"RandomReal", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{".2", ",", ".8"}], "}"}], ",", "2"}], "]"}]}], ",", 
         RowBox[{"\"\<Size\>\"", "\[Rule]", ".15"}], ",", 
         RowBox[{"\"\<Shape\>\"", "\[Rule]", "#"}]}], "]"}], "\[Rule]", 
       RowBox[{"imageCreate", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{".5", ",", ".5"}], "}"}], ",", 
         RowBox[{"\"\<Size\>\"", "\[Rule]", 
          RowBox[{"Switch", "[", 
           RowBox[{
           "#", ",", "\"\<Rect\>\"", ",", ".1", ",", "\"\<Disk\>\"", ",", 
            ".2"}], "]"}]}], ",", 
         RowBox[{"\"\<Shape\>\"", "\[Rule]", "#"}]}], "]"}]}], "&"}], "/@", 
     RowBox[{"RandomChoice", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Rect\>\"", ",", "\"\<Disk\>\""}], "}"}], ",", "n"}], 
      "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.819604172602541*^9, 3.819604200102744*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"207e8b19-bd82-434d-a8df-19e37ff9760f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Batch", "@", "3"}]], "Input",
 CellChangeTimes->{{3.819604208576726*^9, 3.8196042107874966`*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"7f11731e-c331-4ca1-a445-28dc0a83c7b5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1zEKg0AQRuFBQTxGvIIeQLzCprLcQKwEQQuxyzWT06hgaye7wf8tvGGm
/botXoPrEjOb8m04Pzfj6Jdnth9v31dln27r42jfzT41/Ue/b0sBwh9/5fDH
Xzn88VcOf/yVwx9/5fDHX7mr/C3gi22Gf3w3/O8R/vjjjz/++OOPP/78f/HX
CX/8lcMff+Xwx1+5M38K3wpW0yD9
       "], {{0, 32}, {32, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> False],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{32, 32},
     PlotRange->{{0, 32}, {0, 32}}], "\[Rule]", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt0EEKwjAQRuGhgvQYegU9gHiFuOoyBV0FhLiQ7npNPU0T6AG6KE3o/wIv
THaZ79y/3asxs0+bLue/9xj98Djmx9OH6yUc0niay7PZeKM6+v862iD88VcO
f/yVwx9/5fDHXzn88VcOf/yX/XOdU3oP/Mvvgn894V96L/zxx792/72GP/7K
4Y+/cvjjrxz++CuHP/7K4V+nP23fBFYbVpk=
       "], {{0, 32}, {32, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> False],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{32, 32},
     PlotRange->{{0, 32}, {0, 32}}]}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1jFLw0AYxvGjgvULuDkourhJHVz0Tgcnt3TRMQWdCkIVxK1O+gXsVKFi
O7STTjrWQZc66WKd6lK/QLrbEt/jhRhQzJXa9zn4hQsk4fjDkZvL7Xt7KaXU
wVT/4vlHG4WCf5ydHNzs+vnlTH6iP539MpgrVTQwGt7aOzAE6I/+kqE/+kuG
/ugvGfqjvwuN+qLVft3WRMWM++a6JhflGUPQ/+dK59NWXOffjpOiMgT9o55a
W9ZlpbJGkur/3umskseHTUPQP1S9mreSah43+P5C/9DZadpy3b8XBJqgf+jm
esly3Z/vNfSP4meYpJrXqguavDx7hqB/1N3tivWXfzF/l3/TxZrHqT/Hz0Uf
3a4mveDwW/wZ/q7rdY5r//8C/dFfMvRHf8nQH/0lQ3/0lwz90V8y9Ed/yeL6
w/B9Ap0g7/E=
       "], {{0, 32}, {32, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> False],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{32, 32},
     PlotRange->{{0, 32}, {0, 32}}], "\[Rule]", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt16FPw0AUx/ELJGQKh0NAgsEREBh4FzSuGHCUBNQSkkFCcMjOgKIYcJ0A
BQrU+AMoBkyL6sz4B8CzJbzumTraW3m/Sz7NNanpt+21nd879A4mjDFHjcHG
8082Wi3/dGtquLPvN1eWm5OD6dyv4dyYMwvj4SPdgQqgP/prhv7orxn6o79m
6I/+mtWl/93tYi5NEmLfX8e5NNkWRsfcXM9a5vo86tRfNjR/NDpRRCx+2bQM
/ctrXjSuwpCY5v4P90u5XpatsbL7y3FxPm2Ztv6vcUysyuZytIOAmLb+8r3p
qn8v211n2vp3ogVi7vqP1j1t/Z+7XWKu+stnUFv/8HIm56r/Z79PTFt/SX4T
lt1crnvvb55lmvvLf6Iy3svtoEHs6XHVMlfnO279i8j1QV6Xov8FeYz8vnV1
n9e9/3+F/uivGfqjv2boj/6aoT/6a1bUH6r3A6an7As=
       "], {{0, 32}, {32, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> False],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{32, 32},
     PlotRange->{{0, 32}, {0, 32}}]}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1j9PwkAYx/GLJMjEa9B3QHRwkTsdmNzKohsl0YnEBE2Mm5uw6AYrJLgr
DDD5Z9DFsujSOpX3ALsQfC6XkEtqoKTJ83uST3Pdmm8u19sunztnG0KIi8z0
4bhXh9Wqe11Mz15O3cruTiU1XW79ma2FuFGQDD/BCawB+qM/Z+iP/pyhP/pz
hv7ozxn6oz9n6I/+nKE/+ifNoL+n9bpdSQL/WJuMLw1j7fvLUQT9o7u/y2qj
MNwn4p9Tr2Uk+XgvKIL+i16epbZMc9s0Gw1J0H+ReW6sqrltbOcS5/4PnY4k
cfd/eswpgv5zge9LEnd/7/NIEfSfM/dkHM3NO5LtGzj3Nw09T5Jlmo/CUp6Y
/3f0j652u6m9vR5IYnZut1p5Yt5zotw50T850B/9OUN/9OcM/dGfM1t/WL9f
4LEDmw==
       "], {{0, 32}, {32, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> False],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{32, 32},
     PlotRange->{{0, 32}, {0, 32}}], "\[Rule]", 
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt16FPw0AUx/ELJGQKh0NAgsEREBh4FzSuGHCUBNQSkkFCcMjOgKIYcJ0A
BQrU+AMoBkyL6sz4B8CzJbzumTraW3m/Sz7NNanpt+21nd879A4mjDFHjcHG
8082Wi3/dGtquLPvN1eWm5OD6dyv4dyYMwvj4SPdgQqgP/prhv7orxn6o79m
6I/+mtWl/93tYi5NEmLfX8e5NNkWRsfcXM9a5vo86tRfNjR/NDpRRCx+2bQM
/ctrXjSuwpCY5v4P90u5XpatsbL7y3FxPm2Ztv6vcUysyuZytIOAmLb+8r3p
qn8v211n2vp3ogVi7vqP1j1t/Z+7XWKu+stnUFv/8HIm56r/Z79PTFt/SX4T
lt1crnvvb55lmvvLf6Iy3svtoEHs6XHVMlfnO279i8j1QV6Xov8FeYz8vnV1
n9e9/3+F/uivGfqjv2boj/6aoT/6a1bUH6r3A6an7As=
       "], {{0, 32}, {32, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> False],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{32, 32},
     PlotRange->{{0, 32}, {0, 32}}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.8196042119735413`*^9, 3.8196890700496497`*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"b80f4447-b827-4e2a-ba15-9ce0488f68fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"$status", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dynamic", "@", "$status"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataT", "=", 
   RowBox[{"Batch", "@", "100"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataV", "=", 
   RowBox[{"Batch", "@", "10"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.819604218356241*^9, 3.819604218358241*^9}, {
  3.8196890732700033`*^9, 
  3.819689081112975*^9}},ExpressionUUID->"deaf3864-48da-42cc-be77-\
bd0724bfd79f"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.81960421915482*^9, 3.8196890773560343`*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"8fd45498-e2ce-4cd4-826b-84bc22d2701b"],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`$status, StandardForm],
  ImageSizeCache->{33., {0., 13.}}]], "Output",
 CellChangeTimes->{3.81960421915482*^9, 3.819689077361034*^9},
 CellLabel->"Out[30]=",ExpressionUUID->"3de6eade-267f-472f-9759-b66fc79cd343"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2\tsetup a network", "Subsubsection",
 CellChangeTimes->{{3.8196043700665092`*^9, 3.8196043790211625`*^9}, {
  3.8196062824272976`*^9, 
  3.8196062826010485`*^9}},ExpressionUUID->"685eb834-09da-4fa7-a1fd-\
a1f349217fac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"net", "=", 
  RowBox[{"NetInitialize", "@", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"FlattenLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"LinearLayer", "[", "784", "]"}], ",", "\[IndentingNewLine]", 
       "Tanh", ",", "\[IndentingNewLine]", 
       RowBox[{"ReshapeLayer", "[", 
        RowBox[{"{", 
         RowBox[{"1", ",", "28", ",", "28"}], "}"}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"NetEncoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Image\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"28", ",", "28"}], "}"}], ",", "\"\<Grayscale\>\""}], "}"}],
        "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Output\>\"", "\[Rule]", 
      RowBox[{"NetDecoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Image\>\"", ",", "\"\<Grayscale\>\""}], "}"}], "]"}]}]}],
     "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8196043807334757`*^9, 3.819604380737071*^9}, {
  3.819604477935198*^9, 3.8196044896340055`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"83525914-4106-41d3-b0fd-fee3ddcea81a"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["4", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{784, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{784}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {784}, "$OutputSize" -> 784, 
                    "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]]], 
                    "4" -> Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{1, 28, 28}]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {28, 28}, "ColorSpace" -> "Grayscale", 
                    "ColorChannels" -> 1, "Interleaving" -> False, 
                    "MeanImage" -> None, "VarianceImage" -> None, "$Version" -> 
                    "12.0.11"]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT], "Type" -> "Image", "ColorSpace" -> 
                    "Grayscale", "Interleaving" -> False, "MeanImage" -> None,
                     "VarianceImage" -> None, "$Dimensions" -> {28, 28}, 
                    "$Channels" -> 1, "$Version" -> "12.0.11"]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"784\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"784\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Tanh", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"784\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ReshapeLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"image\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.819604382442546*^9, 3.8196891042895527`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"09cec849-e03d-4c36-bc80-e4687f890839"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"nec", "=", 
  RowBox[{"NetEncoder", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<Image\>\"", ",", 
     RowBox[{"{", 
      RowBox[{"28", ",", "28"}], "}"}], ",", "\"\<Grayscale\>\""}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8196045146716776`*^9, 3.8196045182451806`*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"8f353d8a-d209-4e7e-80f2-a610875a8189"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetEncoder", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {18., {0., 18.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"Image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}}, BaselinePosition -> Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {18., {0., 18.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{"\"Type\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"Image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Image size\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  RowBox[{"{", 
                    RowBox[{"28", ",", "28"}], "}"}], "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Color space\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"Grayscale\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Color channels\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["1", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Interleaving\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["False", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Mean image\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["None", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Variance image\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["None", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{"\"Output\"", "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{
                    "\[Times]", "\"\[Times]\"", "\"1\"", "\"28\"", "\"28\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetEncoder[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.819604518942213*^9},
 CellLabel->
  "Out[156]=",ExpressionUUID->"feae0142-446f-4a2c-8ee0-182bf64c3c45"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ArrayReshape", "[", 
   RowBox[{
    RowBox[{"nec", "@", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1: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
7jcIBzDwuqXGepGxS9Ad3kwOr6Ox1Exj3CKYCKPDyFXW0jQxmDXfQZtmGayN
dpdmTDmMhfx8lGYsrc+iEjSeJJllG2ZBY8wsxzDLIa8xYDiOa6SxcUlITOd0
6KARk9gH1EuZZhpTs2W6yXiDDx26UKIZcp+FxsQqz8zhSUvmp9pVUx3rs+EJ
YWst1yxpP6kxz5q6Vk3GumJvCfqoC7OhBHJYTGpsEEIZhhymNBYNIo0xC2s0
NjsIsVmNwWG6xgw8i8DjCGMNNrcXgUTFizViNotNJg42GPcdPqGx8ufAXZ5F
LFmHszTLXpol0xg0XsT2WocwGZRWTBnRg8kzkzo5MhlrzCJ3tGk712rJuNFk
VDOMu9W8YSWevBF705TGreLRFqSxmcNr8hY0ZnesQ+fnacxdHysarxO/65ls
qXE/XWPovYTGoC4dXIkJhwmZBw3IcNo5dsSa8zyb0xg7jDRekgJkDgPLMuYS
MG2WwMb+YGWXgRrw0qS1wCyEV5TcL4MQeHluXbDGwBTBJzSmhbMeBKahsxgv
r90ioSAzGaoyOj40PMsdUrAH5CiQ8UKP0SFG02M0dvtEf/j30dg4SYAG2785
mdE7kbd8DKWxHr1ODIcxQgy6RjmMV3kgMAl6Eb4KfUM0tCAeNkhMyzRiQGHt
rPvGUTy6SDo8Ts6ECYexxkasaGwxEyMFtl5u6Qm8guCuzn4GKxRGh5fWsEZm
yGQ2qfEc97M1nrHcJTEeyTAeKFIjGCoJY57c4xtFp+B4QwqyV2CNJzrFsMob
bxONtfySGq8/mvgsjY05/Lka47kZspS4Nn6v8XXCZBS8YC8aUGDIVR4xuOjT
I5OHDJLhJekoYTKxv0y3l0ra9Uw21gkqimWMpekJuroEy3LWkpy1aH6ubK2x
Jo0V6yzQjBp/jsB0jTdw2MJkKpMxc9xFzMaZbKExMpncvLbc+0MmQybLJtQy
pDE2eXxePDYnQr1CSWjM7p+e6pVOdklwr0DVYvxTq7lNaPw5O3F/OY37NtaY
+BJVJwaQw2hi3Kvj9wB6QS84rOP3ang9Gl6vht+nhe8VDOiEgypunxY6iZC4
8wgpSpgJiq7NZFxCholGsWTMYRkADpNNmLDXyBJikkjgjUcKRGfYIIq/WGN6
lyCkXTRnyWrHsPZOOhaxbGYybd1HLP3oGqspVFLGvGR8Dmk8NicYVfKGjRrL
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
gMZ7nfbtO71//6l9e53373W33e93/FCy28mqkEv3Ynyexvu+SvB7k+jfkhzQ
nuLfmeLfnRrYmxbUlx4ykBE2mBlBaDyaGYMdjgNA4/EsrHE2OJwMsHJTJvPT
pgrSAXZhBqcILAVpM3lIXRTCcM0pzOIUZQNsMBlfI43LivgVpcJrV0U3KsS3
KqW11bK6Gvnj23MND5e7mr4f6Vkd7FJ3vtX1diwM9i2OjbybnFyYYA08rk/1
94/x9Ij38U4LDMiNDCuMiyxJjr1blt9w70bnq0fjXW9goaeVcDRitn4a1npi
MBkyGRoydhUHLHUCzWInDnlL+IMEBhRY4w3z1kDYu9ZhrLFBYeSjOR82wKix
nva/1uJkPr4NirzvSSUBlrHDi/OSxXmpYU68MCtaUIoWFEL9jEAn52l+psZc
at4rGCJNpn57lxnkLwAdXLCEfqZikNJ4QCsYVHNh9TdgEI9Ntj+/lhnjd8be
x+mo18nDl09AMT543vYAahS7bU7v23ve9pCL7UE32/1eRw9GnrYvCXCvjfZ+
GOfzLN63IdGvKSkAaZwc0JkSABr3pAb1pYXA+m4QFeOokQwiirHDmfGMzARG
VuJEViIzO4mVkwIOM9HH1Kk8SOMMTgGZuih+CzI5KHsziAQ2ARoXgsZ5vKuE
xuXiG5WSW1WyO9flD24p6u+qGh8vdr5Z7W839LbqetsWh/veMcc+sqd+FAp/
kkxrJlh1hUUJvr7Rlz0SfXzTgwLyosOLk2JuFec8vlHecP9GV8NjzmCngsNQ
cplqEVsv4y8qRGDyezX86SONPyLkH6ztJltqvKD8hMbW7TVp/NGgNKm7qLRg
cxrL6f/6MN7NZ7TXpLFKQkTx0rx0cY4M5AWFiNSYSzwR5Ys0Nv0yL7xtIRgy
eous/jR0jQeIF3U4hDW8fvgIpUI42FSTE+txYv+ZvVt9nOw8HGzd7Q+6Hjng
fBBp7LTHxvngfrejhy/bH/G2tw1xtMu45HwzyvderO/jOJ/nCT6NSX5vjRon
B3SlBPWkBvelhfanoVMTwxnRI+kxoxmgcfwYdngiEzuclcTKTp7MSQEmspKZ
WSms7NSp3HROPtibBcAFcjg/cyo/Y9JIXgZ8yoavFuZwi/OJNBaBxjVVklvV
srs3Zh7eVtTXzTc81ra+0ne+0Xa9XRzqXmUM/8id+nuR8B9k8n+aU/9ZrWM0
NedERkVd8oj18Eq64psVHpIXE16Vk3qnvODhtdKXd6/3vnk21d8pHBuQT43P
8Se1Ut6SQrQ6L3uHTCY1/mg5VVtf4/VGEBsJTGm8Rl0zNqmxnqYxPq7/jqYx
vsNaQgUyIAWW5iSLZK/AGs/wLM/Gf7bGAzrq9ycaA5lQmoQ/ZBAME7/HlvjU
BBXIVMeAt43o+UNa1EOGFsVj4qHm2vzEy8f22m/97YUjezwdDl88dtDN7oCL
7f7zhw4ArrYHL9kf8Tx+1OfE0SBHu0TXUxXBnnVxfo/ifOvjfV4l+r5J8geN
W5MC25MDO5IDQeNeiOK0sP608MH0SHTsB2mMcng8I4GRkQACY4eRxhDIcD2R
CWCTc9Km8tLZeRkI0DWf0jgvHQRmAbnp2GRC4zyscYmwGmksvlUtvVsz/aB2
5knd7MtHqjfPNS2vtJ1vV4b7PjDHfuRz/l4q+UeF8l90i//t408rUvnNvMIY
T58I90uxXl7JAX6pwf758VGVuWm3SnLvV5e8unezu/HZWGczd7hXwhxR8phg
8qJSvKqCP31oyHJC47VzCasaf1hnNWdd3UULZjfCsG5zJouxXmFaZuKDHKa7
/DTTK2oZRrqsMrGCkNE1xr2C/0tqbM1hs2TGW8xGqHcOUt0YzY21XLQPsixh
qNmDVWmRF2x32m359ek933ocP+Rud+Ci3UG3owfcjhy8aH/E6wS6D87/1IkA
p+OBJ+2jnR3yfS7cjvF/lOD/BKI43rsh0edNot/bhICWxMC2pMDO5KDu1JBe
7PBAWsQQOroWixzOgBxOnMCAvRRJhNKgMSMzGWVyTio2FgH2EhAhjDTORUzm
ZRIac4rzuGUFvPJiflWZsKZSdKtafOe67H6t/Emd8sUj1etn2pZXC10tq6Ax
a/wnIf/vp6f/NDv3Z53hv/30p//+pz+3PKxP9AsMcHaJuHgJSnJKkH9aeFBe
YlR1fsa9quL6W1UtTx/0Nr1k9LRxhntFE0MzXKZuWrA8L4M/5XcaapW36VJh
NpfYMIS/X5z/folicR6ZbFaeLfnEvAKNRMj5nnEDcVUrR2jkK2Ayknl6WS2j
NIYL2V9EYx41kdiwS5BfxfYuCoYRREobNYbVHN5uhgWdnjciH+24k5982W7P
2b3fuR/e7eN4GO132B3wPHHY4/hhb0f7K04n/E87BJ5xDDl7MuT0ibDTJ1Ld
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
y6XCAnR4PhNZyEIWsBAF0FXH4D0qH7oCGeVnogIsdB4LG2BhcxloJxnupqD8
dFw+i1jAJhayoScVVwoZNWJWvZTbqhD2aKSDesWISTWslw+oJYMq8YhaMqoW
j2llY3rFqFY2DL6pFA+qJEMa+aBGPqxXDBsUAwZ5r1E+aNWMOgxDdn1flrY3
S9dn1/fatOB1IMcMAI94baNe+1jACRg/ri6bb2tc6u1Y7Ota6O9ZHBlYm7y/
OTt18Pzx9uOZqdYGn07t1ih9Jn3AavGaDHa1KkOhyNRobXqjMyMz15ETdLtL
AoHm6sqxvu7Z+4OA8fLLRxsLz7YWn0OXDa+dXav2Zeb31xYO1t/urc7vgffr
X/nfH8o5zqXP8m3GS0fby6GshLL6RcA3lw+hXPhtWxckhzDvXcC8vT6/vTYP
GF8YyK9/PePzK38u3KP09zM+z0z/27H21rxMESoWxCVnlmWpfBqeQ0w1s3EG
BkZHQ6vJCCk2lQePZ6VFU+JvAsNgIDPib/CSbikRMTYqPJeD9bExvhDUfDa6
gIMuYKMK2EjwChlmIv0MpI+O9NFCoaNyaSgXCe7ApdowKTZ0igOd4sLDgjRc
hYBRI+HUS3lNMn6rXNCuEHSrxV1KQYeE3S3lDiiEA3L+sFo8qpUOa6QDSmGv
jN8j4/cqhL1ggGskA3r5kEU9ajdO++wzeTkTuVlDTnOvw9htN3Rkarts+h67
ccBpHQLT2GMbBQWjOPC8vmKho2mpt/1tX+eb3s7X/V0v+7sWRge2Hj7YmJuc
bKnL1SmzlRKXVuk2aNxGXY5el6VWZ2n1DiM0iv3ZzgKvtywYbKgoG+xofTDU
92IGMH68sfB8e+nl7pcX83y+GwwxBpihrH+ud39zaf+0Bnxp+C8xvqh37XJC
jHdWDiOSIznYBpKX9qEsguxtvg1nd2NhZx3KKeOF84Yc2rJYX3zxVzFeOb/W
/fMjub+acegUb2N2YOVBz2xHRdAg4MOjlKQUn4ZbZJE5ZUy3gp3BJRgZYCBj
1BSkFJfGhcczUwHjW+TYG0AyNfYqYOzkEUo1vCIZM8An+DjYPC4un4cr4GLz
OcAzaBFIMJ99NLiHAoNChoGVoI+K9NNQbhLMhk4yw+KMKdHG5OiMtLhsdFoe
FVfKoVaJ2A1SXqOUWy9k1gsZtVxKLZvUKqD1ynkDCv6wRnxfLxvVywZUwi4J
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
GJ+v3ZbOTIbG42oY2OH26mXYX25BrEZG8S6YtxcZb17OJcaRX36a8EwOS94/
n8lLe5tLIcaQZNCQf203/sbton93Nx4422pbmuicbi0tzZSDbmxmowstYA7r
AONym8avFVrYRDUJKceli9CpnPQEasI9/L1bqFvXkDevYu5cp0TfYsffUcDi
TdhUBxmRQ0M6GchcDjYXeKbC7dhEGyo2CxFrTY/OTIvOSo1xpMU50+M98IQA
MrkYB6+iE2rYtBous5rPBE24kEUJUAleEjYHi7QhYJbkRENcjD09NZ9CCJIx
BURkOQVVz8a38kndUnqPgtkpZ7RL6W0yRpuC3ariNcg5TnQK6CQ2eHIOGubE
IMA/hxwswoVHekioXDI6l4zJpWB8VGyASSgAjAWMcim3RiWu1yvrDeqmDONw
vv9Nd/vu9PiL7ra51vqB8oL2gtzukjyQkixTS1GguTjo0mtkdApgnKFRZVss
Hpvdl50DGFcU5INpXFlQUFdSDOrxo4mRlVdPtpdehVZ582cbaxdHccTwJsjS
0WaY8WcbESsQ2m0gClTWc8YX9x9CzeEreQcZ3jjeu5jN472t02yGAn3/aC/E
eHctkojk1ZBkKCHJUADm/c3l/Y2lvfUlIDk0kN9sr7wOX7oZNnwxkY3i003j
fzjj82vbHvQs3G+bbC4ut6s8ShZY3DXmZjT7rSVWRUmGMt8gtXCIKhJChk0T
IJIZKXGkuLvYuzcQN3+CX/8RdfMqOeoGO/Y2P/amOjUmC5RbCsLFQPk4uFwm
JoeYloVJsCJjMmDR5pQoS/I9a/I9W0pMdnqcG5HgR6cWEpAVDFIFk1bJZpWy
6AV0Uh4Fn0vEuvHYbAwqEw4zJidqY2OMCbF+EiZAQoMeUoRPr2fhOgTkHgmt
R8bolNKbhWToejkpo1XJK+WQzMnRhsToLHhKNgruwqHdOLSXgPWRcX4KPkDF
+ynYAA3np+HyQoyL+fRSMadaJW40qhstuhabuc/vmqmtWOjvetLe+Lij8Ul3
85O+1rmupiFQjD327oriocba4hybmsvUCnlZOq0nKyuQ4ww43QXe3MrCwvqy
0kKPpzI/v7e5AWL88gkwDEYxBHjtsz58yfDx1lJI8tLRJcORZdpnc/LoNBGx
oZH7ZSLjd3/zOJItKGeMoS/BNzeghCWf5fJkDksOY44whiQv761DjEOZ34Ku
sgClois8isErRHrydCxPfW3D7R9RKtZm+zbm+sONYn607UFLSa1L75TR8wzC
vjJve76j0CwrsSoLTXIzC68kwMSoFDCKKQkx+Jg76Ls3YDd+TL3yJ/jVH0h3
rnFj73CjrisTo6zIpGwS3MvCBnkkPwvnwKVkoRMykLHmtHvGpDvGhDum+NsZ
iVG2lGgg2YVI9KBS/FhELgadi8E5kQhbWrI1JTEjJcmalmZNh5nT0nSJCYro
e4p7d7wEdAEdn4eHFRPhLTwS9OBNBWtQye5TsNsl1GYRuU3BatcI8igoQ8Jd
XcI9a3qKA4V043FePD6XQPCTiEEqOZ9OzqPi8xmEfAYxyCTmg27MY5SKudVq
aXOGvjnT0OawdLrt/UHvTEPl047GZ93NT3tanva3zXTUtwY9lc7M/uqyifbm
Kp/bKBYYxEKHQe+zO4pyfSX+vLJgfnVxMSgVuXZbeV4gzBiUip3lNxHGlxZ0
p4xPDYdzFMr5Li7EGJq3lwyfdgAIaljs3sa3Agy/29/+drbeHWxCCXs+/VNh
yUdflA1IMpjJIcZg1bkXacihrEFj+f97xuGdivDd/UuTXXOdlQ1ek0vBKM1S
TjSWdBe7CkyS0kx1UC/R0zBgFPOhVhxHjo/G3L2FuHkt5cp3CX/8fcp3f8Bf
v8K6e51964oi/o4FHp9Dgvs5hAIhNcglukhwOy7Fiowzpd7TJ9zRRN9Q3vlJ
d++GMfY28GxKuGtJjrGkJZlhMH06Qg+Dq9JSBTExzFt3OHdjBNEJophEwb04
7q273BvXc3CoUi61nEmoZeG7xfQRJee+mjeqgT5HbEDL69Xx+s3STr0ELA91
iTHapAQLAuEgkLJJFDuBlIXF24lEN53m4zD9XIafx8jjgzd0kCCPVSTmVWvk
rZmmVpu5xWZqsplanJlDxYGnHQ0Lw13Pe1tm2mq6inLtIpZfp+gpLxptqqvK
dVllkgy51GU2BbKzi3P9NSWlrbW1rTU1JX4/YFxdVNDf1vz0wdjGwotQnfhG
H44YXr6Yo9AEPg7laGvlM8bnhi+s2o52zwrD54Gg/gLjg1PGYcnfZHxR8lpI
MpS9jVCviEhe2F6d/02mcXinItwrnvXVtQSsXjW7wq6eai7tK8stNEvz9KJs
CcPIxEswqVxYAjM5jhgbBb/+U+qVH+L+8Puof//X2N/9O+qHPzFuXhNE3TDD
E7NxaW4KMo9LLJOySsR08D6bkGZFJRhT7mnjbinuXFXdva6JugliiL1jSYk3
w5L1iHQjkaSl0HUMlpbFVlAZPDSRmYphJaNZ8QhGVDL9dizvbrQNiyzmUKq5
5CYuCWKsYI+pefdVvDGtcNQkGbJIu43SWhnXhk5XJcbLk1KkyWnc2CTKrWjq
nRhWbBI7MUWCRFtYTKdU5FVK8jSKoFqer5AGJcKgmF+mlDZlGNodGW3Zlkab
qdFu7g26nrTXroz1vOxtetBY2hbIzuJRHWJ2rcfRWVpQlmOzyaVZSrnTYPDb
7cW5vpqikvbautbqarvRYNWqS/N8w11t849ndlfmw4wv7khcYBwewsvHmyvn
2Vo93j7PUXgv4jLj82EbmbfftHpyALLz7WyfHG5BAZ6h3/PFWIb+OuifSUgy
lIPt9X0geXttb2t1d2N5Zx3atQCMw2u932IaDwDG4eMP8PpmtLWrKNun5ZZD
jMvG6gtrnAbA2MTCaygoMQZa3NETYwn37qRd+SHpT3+8+6//6+p//2/X/+W/
J//vf6Ne+1EWd9eGTXOT4Lk0dAGfXKnk1qgFuQyMkwS3YZJNqdHqmJuy2z/J
bl1V3L6uirplSoixwFJVaUmM2GgmDM4mUpkUBoVMp1JYHIaITREIyEIxQSBA
0LhJaHkq0seil3ApNVxyu4A6IGWNKjjjKt6ERjCpF49b5PftmmGHoUkrzSHh
VKlpoqR0XiKMlQjnpuMkBLqCxtVyxWapMkujs+v1OSaDy6DPUSudUmmuRFIg
l5WpFbVGbavN0mK31Gfq67L0XX7HbFPZ6/7muZaKkXJ/o8tiZZM0JHSuRlbt
yS7MNNtlUrtS6dBqvdbM0lx/XXFpS2VVU0VFUa7XlZlRVZw/3t/99tlD0CjO
GB99ZQ6HR/HKu61VkOPN1WPozdq77dPsrId3zMIrtaOQq/POEIH3S/P224B3
odfD7dNAkk/Cw3n/tE5H/kaQzcOdDQA4nP1QdgHjzZVdMJDXl8K9Ynt5PrSs
6w4zjizxvs347BlWf99hNLThFmIMrfXejnXcrwuCUVxgEg9VBSYai9uC9kKz
XE/HKIhwISqVnZZAjY/G3rmZ+v13Cb//XeLvfxfzv/7v2//y32L+x7+Qrn6n
Sou1EdJdFISXjgZ1olzObtCL83kkDxUFGBtSohXR18W3rwhu/CC5fU1y+7rk
9g3OnZu4az8l/PhDemIiAkdAkugwMhNF4bGEWhZHzaYpuEQJD80RImgGHLVU
Ii7jQIfRHTxyv5g+puRMqHlTWuG0UfYgSzPlNk14M9stOh+bacDgZXCcAIbn
IihiMl/CFEu4colAKZVqVWqj3mi1ZGTZMu1Wg8nAE5qoDI9AWKHT1pkMTVnm
Bquh2qKptmpa3daJmoK55vKJ2oKhstwmT0YWl6zAw10KYVGmyW/U2WQSm0Lh
0GidJnNJrq+hrLy5srKupLimuBA0iu7m+tmxoaUXgPHr8JUSFxZ0kaXcaR9e
fhdhvBY2fPGgDTqhgPZ4oc2xcEkI9YfQe0hvOL88b3feH+5+kb1wTg533h1u
X8pBJMcH4TXg1tHe5uEulINTyfuRQAN5D6oWK7uRXYu3l9B+mf+yS4POrtIE
03i6tbS/wlvp0LYEbG1BR3WOIaAX6+hYKR4mgBgnkmPvIa9fTfrD75P/8z/I
t2/S7tzC/vgd8k+/Y9z9SYtKtJFhLjrCy8SAUlEiYTSZZGVSpo+BzUIn6ZKj
ZNHXRXd+Ylz5T9qPf6B895+kP/we9d0f065eibp2NSYlJRpPiKeyEhiiNJaM
JDaRuXoKQ0MlKRgYvgDFtpC55VJpCZ1Qw8B3cIkDYvqEijul5k/rxHMWxaxD
P5ObMelz9NisRRJpBpkpQZCZaQQ6gsanS7lsJZ2tJDJlBI6SLNRQRBqaWCPS
Zih1GRqhQkNiGAgUD5dfqdPWZ5iqzdoKo7IqQ9XmgRhP1hWNVuWNVPm78rO9
co6ZRQSMsxXiDCHXLOBlyWU2tcZpMhV7vfWlpY3lZTVFBY0Vpb2tTeMDPU8e
jJ0xvrwvcb6ggwxvg6yGGYfn8PHpNQ+RAzhgeHfr3en2AhiM4Te/Yt5GDH/4
PHuh7L8/3D853H13dDkQ7J1jkAOQ7aP9rUOQvc0DkN2NsOQzxvtboWyu7q2v
7K0tA8m/CeO18N39071gifdyqGm2vfxZX/1YfUFHQU5Zlsqj5DjEdMBYhoeJ
UGkcwDj6LuzH7+N/9+/w7/8oTk1So2CKtCRR4j1xcpQRm+ygwj0MpJ+NDXIJ
xUJqi0naoBXms/E2VIIu6Y467qYy9ibzyn+S/vjvhP/4N8Lv/jfh++8od6Ow
sXFIGDIVR0JSOFiWlMhS0NlqJkPFpat4JBkfzZGhmS6WsJjLKSAgqyioTi5x
WMqcVPEeaIWzBumjDPVjp/mR3zbtzxl02qs0GgeDK0MQmSlYBpwipEn5bBWN
IceQRQiyEEYWJGAYCWgajiHmCNUqvlxHZsphKBUM7mLSS5TSUpW0UCksN8g6
crNmGktDjINjdYVDlcHSDI1HIcrgMQVoOBueLieTMyQSMI3dZkuxx1NdUFBT
WAAYt9dVTwz0zU2MvpybWn75aGf5VWQUnw7hi4zfQYxXLjE+lQzt+p6N4guM
PzMcZvy1eXueU7cXsx9hfLR3crR7MWHGEcwH24f7m5HsbRzsrh/sQAl348hk
3lrbA4yhgbwMZvJfzfgbT878axmvhU7xAONXw82PuqoWxtrXpvue9zc2+TKz
JfQMLlFPw8jxMAkmnQ9LpsTcSf/hTwm/+zf0le/5ibFKWIoGnqqGJynTY024
5BwaPJeJDHAAY3whj1ir5HZblaV8kgMdb065a0mNsqTFKGJuSO5eE928Krp+
nXfzFvt2FCcpnYkmkokMJl0IJiePqRDQ5GKqXEaVyYhiJY5jofDL5ZoACZ+H
SqkmI7p5xBEZxHhGL541yB5btc89mS8L3E8Kc+97chqNRj9fbKGw1ES2kipW
clQijprOkOPI4nQ8LwHFvJdOjkPQUCQBARhHkoXpKB0GL09JEcfF2skED4vm
5lCDcm6rO+NRSwVgPFZTNN1SNdlY2eBxFJi0QhQ88YfvUn76iQ2HG3h8r8ns
AYxd7jKfvzzgrysp6mttnhsfffVoBhTj1dfQ2QfEeP3t5SF8cRSHGEM5Z3xy
esHDye7GyS8y/vbIvTR4v5q/xHj7+HDraH8znDDj/d21/R1gePUzxruAMZTl
05s7/hLjUL56leZfy3gtxHg1ck9055vRlmf99c8HGt6OdwLGHQXZeXqhR8m1
8sh8WDwfnihEJDMToxFXvov/9/+Z+p//G3/tB0H8PVV6kjItTpx4W4+Mc9IQ
fjYoxrgCHqGAS/DTkYPZ+joFy0tMzYJH2xFxOZhkCyxOn3xPE3dXde+u9G4U
/9ZdfmyiCIUXU1hSKk9KEcgpQjVFrCEJ9WShjsDOIHPyhfIGtcYNTy1AJjfS
Mb188rCYPqXiPzRI54xywPiZO/N1ofd1WcF4rqsj01qtM/hF8iyWyMyU6lhy
BVshZiuZVDEOz02HU2Pj0ckpeDKRRydyKSkoenS8LDVNh4Cb0AgHheBikF0s
SkDCbgETvqVyqr7kYXvtwmjP/EjfcGVZo9etZ9DTrl6N+9N3+Lh4BZ2Ra87I
0enzs7NLPJ4yv6+hvGSkp+PF3PTbF0+WXz1dn38WLhWHn3eJ0CiOGA5n9WQn
Moffba+fMQ6N4kuMv7oF8f4r8/bzwfuVHIUZX8o7UDNCOT4M1ePTAMkHeyHG
EcmfM94B0/hLxtDJXc9ZPv88mm8/xPivYxzadluZ7lma6lwYb3s92vx8sP71
aOtMR0VDbkZAL/RpBBoKkpMaLQgxZiVGY69fQfzwB/z1H1nRt2VpCar0RGlS
lCT+ZiY+xcNA+dmYfDCK+aQiPjGfjWnWCboz5JUiihObZEPEZcHjrPA4CyzW
lBqrT4jWxEVrkxKNSKSJQNKTaCYK00IFNZhtJjAtBIYJQ87AkTw0RjGPV0yn
BDHp1WRkJ5c0JGaMydiTSt6MVgwYP7SoZm2GR17700LfVMA77HW1ZmaWKtVe
vjSHI81kio10kZrKl5F5EipfQhUISTw+gS2j8jUMgY7C0OPxZgIum0b2cRm5
HDpg7GSRi9Xi+2WB0fK86YayheHu7YeTaw/Gppsbm3Jz/To9NSk54Ycf4Xfu
8nH4DKk8W6vLs9mKPe7yPH9TZelIT/vM/aHFF49X3zxbfg1en2wtvtxbnT+V
HJ7AkTl8ArKzehrQItZC4xdk6/0elBOQs3OKUEJ6obw/3H5/tAMlMnW/PnIv
Mj45+gt5d7h3ms8lg5J8sLexDw3kSLX4OuOzh8Z/bfx+Jf8oxnP9KzM9i1Md
8xNtr8eaX440vr7fMt5UVO3SB3QCn5ovQiVw02Kgx6ogEjnJ0eS71wk3r3Di
7srSEzTIFNAoFCnR6tQoOzHNy0AHOGAUE4sF5BIBqZhHqJRQO0zidoOwmIPP
gsVAl1XAY7KAZ0RCJjzRhkp1EzG5NGCV6qLRXFSqk0Rx4IhZKJwVgXZgsAE6
tYRNL6ISCvDwShKyjU0cEDFGpexxGWdSwZ9WC2d0khmjfNqqm3VlPgy4p4Pe
Mb930ONqMJmCArGLwcvlSuxUjolA1+NpGih0DZ6hxdEtVFYmjWmlUKxkgoNO
Coo4jWZtpUaaL+IUK4TtrszZurL+Qu/jttqV8cGdRw9WJsdGq6sr7Y6WvHyH
TMFGIMkpKVwMVsPl2dTqEGNXic9TX140NzH8dGZ86dWTlTdPl14/Xnn9ZHPx
5f7a/NHm4vHWxfF7yfD7XQAYJNIiTiDD2yDA8Mn57IU2xCC94RydMj7aff8F
44tT98OvMxxifElyaKG3HQ7EeHdzf2cD5GBn43zXItyNIcm/HePZCGPwty9M
tL263/RyuPHlcNNwbV5Vjg4wzpEy+PBYPixWjEwE4afGMmNv06KuC5NjVIhk
HSpVj0w2IBIz0Mk5JLiPgcnnEIr4pFIBuVRAKuHhywXERiWryyhqVrIL6EgX
JtGOjLMj43PQSS5cai4REaBi82iEXAreTcLn4LA2FMIKS7fBEU40Op9OKeXS
S5ikIAFRgEmrp+O6+bQhCeu+lDMu400pBFMK4ZRaPK1XzGYaHrmzHgdcc/m5
kwHPsMfZZcusVCi9dKaTQs8m07KIFCuBYiFQTDiSCUvSo7EWPCGLTLRTiNk0
oo9DK1cIO7IMLRZtvUHVlWOdrix8UF08Vln4ur9z/cHY9qOZxfGx3tLyPIO5
q6S8yJat5/KFBKKITFGwWJkqZTDbURkM1JcV9bY1zD97+PbFo9X556vzz5bf
PFlbeLa98np/feF0FK+eRJowNH7DeQ+yu/4+bHgPMnwCAEcMXzinCE3gDxG6
Ib3HUD4c7X042v9wdPBl3l9+/8s5gRKWfOY5tGVxGNmyiGxWQEchlxhfqMe/
DePQD4AfA2vGroXJ9lejTS+GGp721faVeyodGp+Gb+WRhIh4ITJBgk6SoBJF
6XG8xCh27E1BYpQ8LU6LSDKhUjKx6TlEhIeMCjBwhRxiKZ9SLqCU80llXHyl
gFArpjQrmG1qDnit4OLzKDA/KS1AhoE3ATI8j4IMkJBePNyNgbnQcBAPBhkk
4UuZ1Go+o4xFKCAi8nFpRdjUZhahV0AfFAHG3EmF4IFSNKUQPVDLZgzqh1mm
Z177iwLv0yL/TL53yGnrd2R1Z2bUKOReCtlJwOeAEIlOMjmHRMomErKwaCsG
nk3CeOnEAJtaJGBWSLlNBkVnlmHIY58pCz5pKB8vCz5tb1geG9qcmdp+9Ghp
YrK3rNKjMbQVlZc5vVapQslkK9kcJYedpVEVup2N5aX9bc1zEyOr8y/WFl6s
v30JpvHKmycbiy921+b3N96eMT472jgJdeBw3u9svA/Vifd7m+/DoxgA3v9y
92wHLNwgwJDhvXA+HO9/OD74eHR4MR9Ajg/fH0OvH0/f/6UcfFEwzrYsdo4O
tg/3tg53N49CAZIPP5e8srv5mzFehR4fBH3qB+gVoFQAxg+7qzqLskusco+S
nckniVGJUnSSDJ0sQyVJ4PGilGhB4l1Bwl1JUpQ6Pc6CSnHg4S4iMpeCCTLw
RRxiGZ9SIaBU8EmVAmIln1AjJNUIiLVCcouc2anlN0jodSJqjYBcwcGXMDCl
TGwxHVtIxRSQ0aUMYq2A1SwVtMpFTWJuJZuYT4IFcSlF+LQyQnorh9QDMWaP
yQQP1NIZjWxGI5/Vq2eNuodZ5he5OQulwVdlBY+LAqNue78jY9SdPeFzt+rV
+SxaLpngIeG9FKKPRvLRiH46KRuP8FKxhVxqmYhdIWGXi1ktBvmwK/NRafBJ
dfF0efBBVdHCYNfKxMj69OT248er07MD1XW5OlNbcXlNoMCpM2p5Ai2frxXw
c0yGijx/e231WF/Xi4cPwBzeWHwFJINGAbrxxuLLXejeusWj8DFHiPFJaC/i
s1xivL/z/gDKl6cYYPa+DwcyvP8eMvwPZHwu+V1kuXdx8+1zxpeO9kJHIX81
47973/jCj/WuzEK94s1YC1jizXZWtBfYC0xip4xpF1KlmGQFNlWOSZGjkmSI
BGl6rCwtVpoSLUu+p4EYJ2fjYR4i0kfGBOn4IjaxjEcKGSZVC8lVfEI1n1jD
Bz5JdUJKo5jWoeR0qDidKi54Be/bldx2Ba9LLezWiKGoJV0qcZuEVwl+FQlW
QEwpJKSUEFJraKgWFrGHzxiW8CaUkmmtYk6nemzSPTIb5szGRzbrK79npbLk
bVXpk6K8uQLfgMPSadYMZ1tBzZjN83ZbdNUSbiGLHKRD17bl0fE5mDTwj65a
ymnSiJu1kh6rdiboelwSmCvyTRV6Z8qDL9vqVkb7VidHN2Yf7Dx9sjozO1hb
HzBba/35zcXl+fYcs0SmF4qMEkmew95QWtzX0vRgZODVo+mVN89AQKMA03h1
/unG0qvdjcX9TehCtZPIEAYVYuM8wO1+JCd74S+/wjiypXa09zHidv/9af5x
jM8khzHvXdx/C/WK7aPQ+ctnkqFsb4QuGVr9DZd4EOOZ7nA9BtN4ur2s2W8N
GkReFdctZ4dHsRydrEAlKxCJClicCh4vTY4CKzs9LD4DlWzHprnxcD8ZtFlc
EYtYxiVV8slVgDEUyHAdMCwg13CJVSxcNQtXy8HX80hNAkqTkNrIpzbwKCCh
N9Q6NrmGSaxlkqrp+AoqqpQCKyWllZHSa6ioZiaxi8cYkgrGldIptWJGp34E
AFtMDzMsTxy2VwHfckXZcm0lYPywwDfmsXVbtO06RbdJM+bMnPblPAy6H+W7
Z/zZk56sKa/tvtMy7rZO5dpnAzkP890gs3mumTzXbL73UXn+i8bK+e7mlfv9
aw/G1mentp48Xpt7ONHaXpbjrvT6GwqKg7Zs6FkrcrldqynxuJorSgc7Wh+O
jyw8ewgxnn8aflYqaBTbq/N7G0tnjM8GL8gHaPCeG/5wsBXK9od9kAjjy6cY
lxh/eAdyEM7Hd4cfj0N0z3J8zvjDtxl/eHd0mq+O5Qv7b6BXhBgfXzhPDB9S
n11xAarFb8h4bQ78JPiFXYuTHfNjrbMd5Y255jy9IFfN9SjYSnyaEpemwKSc
M4bFKVKjVWnRBnh8BiIxC5nkxKb7yagCBr6YTSzlkMp5QDIIEWIMGgWQzCPW
caBrLGuYOJBaJq6Oia9jEmoZkTSwyc08eiuf1cJj1jPIdQxiBQVVQkgDqSAj
amnYJia5k88akAhG5JL7SvmERjWl086YjHMZGY+zs18F/EvlZVtNDS9KCx/l
+ye9OcP2jD6LvlOnbFVJuw2q4UzDpNM647WHM+21Tbisow7zaLZ50p31INcx
4bZN5mbPBL2PywteNla97WkNM16bmVx/OLc6OzvX09sYLCh3eatyAwWObKde
7zToczPMVXm+jtqqif7u57OTiy/Bmg504+froYdMbq283lt/exC6me74jHGk
OXxpeDuUHZCPB18cZEDruL1zxmHDJ6GEGb87Cr1G8uFX5egbjA/P2kWoWpxu
XBzsHu/vHO9tgxxFAp1TR664+GdgPNezOtO9Mt21PNk511FR5zYEdPyATuDX
8AFjFT5diU1VYlJUqCQVPEEDj1fDYjXpMUZ4vAWeYIUn5GBSfWRkPgOaxiVs
aCBXQNWCUAmVCgLEmEuoZ+PrWSCEBhYRpAkKqZFJbuXSOwSsLhGnR8Lvkwp7
xIJGBqWGgi8jIIswqSBlBHg1BdvAILdxWd1CXr9EOCSX3lerJvT6SYPxgdky
a3M89/mXKyoPOtrnK8oe5wce+FzjTvtIpqXPoO3UyLs08l69ctiiHbeZJh2W
MZtp3G4esur6zepBq+5+tmXSlTWWkznhcczm+55WFr9qqpnvagkxvr86Pbk2
O7M8Pf2wt6+5oLDInl1kzwlYM91Goy/DXJhtrw76u+qrp0f63zyZBaMYLO7W
3wLD0B090B4FaMXh2+K2I8dzUHPY37yQrfM5DBneBYY/fnYMdwr4PGeGQ/l4
cnTZ5F8X8MdPf0N4RF+ayWcbF8cHe8f7u8d7oezvHu3vHO5Dhflo73wg/7aM
1+Z612Z71oDkB10zbWXVTh2YxvkGsU/NVxHS1QSIsQqbqsGkaFHJOmSiDpmg
g8cBxmbQK2DxDnRKLgmRT8cWsfAlbEIph1jOBSFUcAlVXGItl1TPIQG6jWxi
Ewe4pbbz6F18ZreADTIoFY4oJCNK6ahSNqyU9ooEtWRiKQZZjIEXotNBijDw
cgKmmkJsZNJbuexOAb9fKh3X6abNGfd1hvt647jF+tDlXSqv3G/rWKyqelZY
MBfwTeTYh8zGIbNh2KwfNGiGjZoxi34yyzRpt9zPNIIMZegGM3QjNuO40zrl
dUx6HFM+58NC/7Oq0pdNNa87m1dG+0E3Xn0wsT47CxjPdHXX5PoClgyf2eIx
GkHy7bYyr6s6z9fTUPtobHjx+WMwisH6DjIM3Sb8GjSK/c0l6EEQp5erhbbU
LjE+NXzK+CJgaBvtNMcHZ4Hm7cnhh5PQRD05DCE8/vhVoidffPlFIn8cSkRy
+Ic/27sAkiOMT3OBcaRj/DMwBr1idbp7earzQWtJjVNfaJIUGMROCUNDhGmI
cBU2DUSHSzNgU42YFBM2xYBMDDFOsCISHJiUXDIiyIAYFwPGbEIZkMwhVnKI
1RxSLYdczyE3sSktHGobj9YpZPaJOEOgHsjEozLJmAJ6yPa4EnrE67BM0sZi
lKGQ+elphUh4ERpRiEIUIBHFGHQpDldNIdfR6U1sdrdIPK4zTJmtgypdv0o3
pDNP2Z2vCkrXahreVlS9Lil7WlAw4bB3q5RDRt2o2TBq1E6YQx8bnZ0157RP
52SBPHBmTTmzJt2ZoFHM5bnngp65fN/j4uCTypJn9VWvOpqXR/pWxofXHkxs
zs2tTM886Ogsd7q8BkOORuPUav0WS5nbVenz1uYHBlsan02Nrbx6uvEWeijf
1jL0+F9geGf97T5oFJGb5qDrfD5jfAHw9sfDzw1/PDo4C9D7/jQf3oXpnuX4
03sIYahXRBIm+v4C1/dfBDL8/viy4aMLhi/tXXzO+ABiDLXlfeiAL1KVdzZ+
c8ahadyz+qAr3I1LrXLA2CGgKnGpWhJCS4Rr8TADHmYhwK1EuJUAM2OSzchE
KzLRhk7OxqaGGGMKWbhiNhjIeCAZMK7igpUdpY5DaeRQofLAZ3QJWT1izoCY
NyIR3QeGZdJxuXxcoRiTywfF4nYWswqHDaam5qfD8mGwfAQiH4EMIkC7wIKU
4gllRFIlmVLPZHeKpD1SZadE0SXT9GmMoxb7rMv/Ir/kVVH5QkX1fHnVVI6z
RSzuUShGdLoxg37abHqUmfHEYX/mcT33eZ/5vc/zcp/n+56D8VsUeFYSfFqS
/6Qk/2lZ0dOqsqf11S/bmxYHe1bGhtamxtenp5cmJx929zQG8rx6vVUisSsU
Qau12pdbm+dvKSse72p/OT2x+urp5mJI79oC9DSS9bd7m8vhW/IjN3iGDJ/s
XZzAWx8Pt0+zc6FFnBm+tF47W5ed2gvl/fGnD+8gkJfz4TSfffnh/bvTHJ8y
/qrh883k81JxsBtO6Mvd0MWcO8f72/9cjEOSH3ZVtgSsVQ5teabKLWOBaWyg
og0UlJ6EMBIRmRR0Nh2bQUg3opJMiHgrKtGOSQGMvWREHgNTwMYVscFAxpdy
IozreNRGHq2FBwwzu4WcXjG3X8IHo/i+RAwMT8hlUyrVuFw5KBS30pmVWFwR
DB5ITg2kpAfSYHkwJEhuKsyVmOJNhZUQyKVEcjGeWEogV1EZ9Wx+PUdYxxE1
CRXdauOwxTGV45vxBBcqaldqG2dcuQ18YbtIMqLWjqm1UzrDnMn8KDPrhcuz
EAy+yQ8uFBcuV5av1lYt11bNV1W8rCx7VlH6pLzkcVX50/qal23Nb/u7V+4P
rU+Nb0w/WJmaejE4OFRT6zcYTTy+mS8ImM0tRYXNRQXdNZXT/T2v5x6svn62
ufR6ZxV6nM7exuLe5tJ+6N78c8OhQ7qzIXwBMGT409GXc/jU8OXl2EXDn0KG
Ica/NieX8v744m/72qLv4Gvn1HunjCPrvndgLP8TMF4NG57tWZ/tfdRV1ZqX
Ves01GTrAxqBnoI00jBmOtZERWfSsW4u2cen2cgIIwqUirhMVGIOPs1JSAeM
A3SIcSEbX3TKuJpLrudRm3i0Vj6jU8DqFXEHZMIhmRDUiTHQbyHG8imlalgk
6WBwanDEYjgyPw3uS0p1xyf7UmC+VIQzIdV4M4r777+n/Y9/NdyOyoWh8tA4
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
Nda2FHQ3vsd45uHtmUd3Zh7eeffwzvTY7enR229GbqowHumuu1lfDDAe6al7
M3Lj7cj1l4Pd9zuru0rS2y6nVCRICyP5gOQ0NjEaD48FGFPAZ3d4HCo4Jtw/
LtwvCRmQCx3NQ5VS0RU0bBWTVMNl1gq4VXx2AY2cRSImoNGy4BC+nz/Hy0fg
7cd182SdvMB2OUM/dDLUYu/J/9A4/i/NszqGriaWl6z3+Nof8NjvdGHPvot7
7d32OZzfs++kudVJc+vT5janTKzPmdt62Nr77nH0sbb3NrfzM7dD7nNmHz8v
v+gldfVSBITIAoI4np6MS+7CAP9EPC6DQq4UCdtjo3vj4q5Hx9yIi72bnjpe
XjxZXz3ZAh1fmmhrmehoewJKvO7O8e7use4egPFwT8/drs4bLU1XmxsHrvc+
Gh58PHLv+aPR+bevlueBFc+rd8VDWj/m/M2MlL+FMXRA47P6pIaa4V+VIVYN
8Lqlgidg+Lffv/7+t/XrjzH+vH1T0DaG/zcw3oHhDYxvqzF+1DfzsO/dw77p
sTtvH4BC7/rjm219zeW9V/L7mspe3bumfP/m87udw51XrlbmdJdmlsVLSmLF
hZG8FBY+AhsaS0QkUVAJgGdkUHS4PyA5AQnd85hLCCsghhdTUOUMUhWXWS3g
VnBZ+VRyFpmUjMNFweGigCCety/b1YNy8izx4DGygwvR/rC/oeWJ//tnl//r
Xyd+0jyra+hqZuFht8/L0cnNwcHzwEGvg86XHJ1c7R1c9zu42ztdsnfycjjg
43TQa5+Dq6XtCW0Dl39puOubYJ0OC8+5Cc65idw8hJe8uJc8OB4eYn//OBQq
BYcr5/PaYxQA42sxMdfj4vrSUx6WFo3XVI431DxqqhtrbhhraX7U3va4u2u8
p3es5+pIdw9kxR3t3fV1PU0Nw7dvPHs0+mJ87O3zyYWZqfXtEx/Wd7J9+CcY
/77eYds8+AkBtr5U9xV6Quiuh4P/UmL8X19//5sC5KuKux0w/jYSb2N4HWPl
fuPlhX+Yjf8RxrNqjO8o3bhPpXdjd4Ah/zJ8/UFvw/XaQuDGT253AIaBAOqT
fR2DbZW36gq7y7JK4yWlcZI8GTuehpZjgmOI4fEkZCwWFo0MikEExiIDE5CB
yaigVFRwFgZWQESW0IkVXEaVgFPJ55RwWAUMRhqRGA0HcTeQ7+XDuuBKOX6S
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
ejHx8d1raOz2p1nVIMH1CWwftm6f+MPFO2Ue3sbwDhhvX4z+utHm/U1N8o82
qn3Ti9t2ammr8W5/vZ3htdW11ZXVFbVWlpdXlpeAViFBcUJ1c/rq4vyK8jZ2
1e3AS/PT/8cxBvQCQRjPjffPPboLwfwQEng9r9Tc+pcA7ImbbQMtlX0NpYPg
2VjWU5FXnREHMI6mYsTYUHaoDx/uH0/BxODDJWH+XP9LPD83aYi3Ah6gCAtQ
wAISUWE5VEIRh1Eu4OZQiCkYJGA4HYfOIeCKaOQSGrmCRrlCpdSSSdV4fGl4
eHEorDQ0rCwkrDwkvAqGqoFjG9HERgypCUNuQlMArrXhOPBmDRxfjyQ1YqjN
eHorkdFKpHfQWL1c/g2R5KZMfjMy6qZC0SuPaBeLa9mcQiIpHYlMDIcnoxA5
JEI5n9MUJe9Kir+ekXojK+NqelpnanJbSnJ7elpXTk7v5cvXyktv1VUPtLUM
dXfe7W6/3dEyeKPn6di96ZeTn2agqcXQ4f31dedtDP8Q4yXlLiDo6OgGvb9t
6q9irCZ5UxsM74zx9qWNb9Dd0NoGvRtaXVlWaQPjlSXA8OLq4sKqCmOlG0NW
/H5GjfGO+382GB7ZxrAyUfz7GL+DfLhvdrwfaO5x//z43fnxgQ10348PfKPZ
sb7nfV2jPQ0PuusfX28Z623sb6pszEvJlnEUVIwAFUQNuMRHBCYyCIDkSDRk
yDz/S5IQH1monyjAS+TvFQULTMFBV9nmMSiJ6PDYsJBEJDyLgMkn40vo5DIa
uZJGrqaTa6jEKyT8FSK2Co+pQKPKkcgKBKoyHF2FwDTgSI14chOe0oSjNmLJ
9RhiPZpYhyI2YMBrcgOO2kZhtlEZPRzuTYn0TmTknWjFrRjFdUXk1ciILpms
WSisYjILSMQMLDoZjQA/ShUCbn2UrDU+pislsTc9tSs1uSUxoTEhvhmQnJXV
mZ/XXVJ0E2Dc3jLQ1X6ztam7oWb49rUX4yOzvzxbmH2ztD5m8PPmuvP6LqDt
xd3mEY+VZeUpj5UNjH9Tj1BTTgH6Oxh/p62s/tG50R0deAvD20xYCfCSSstL
QIsQxotKjBc+rS6AUKHMxh9mAcZL8xDGf7xO990u4j/Mw9v0bTB+p+yzATee
e6QE+DFg+O433H54PPj+8SB4fpwYAk8Vxg97Gx9dbXre1/2iv2fiZkdPZcHl
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
eGOpDlrmAABDGyf65jYYHh+YGwcADyo9Vg3w7JMhleaf3pv/McPvQZZ4NgI0
/3R47unwuyf33o4PvRkfnpl8KKdTjlhbuVhaEX3803nCeDI1lkiUIpHc4CBW
UBA/PDyKSErnCXJEkgwuN53JyOUwSgSsGim3ScZvlfLaxFxoHouI08pnt3CZ
TWx6PYNaS6PUUsm1VEo9nd7MYrdyeB18YbdI0gsYBsTKIq9K5N1CaY9Iel0a
2aeIA7qliLkWGdUti+iQyNolshaptFEqqZfJ6qMUDfFJNQkpOWJ5eXJG95W6
xuKK/MS07NjEZGlkRqSiKiOrIS+vseBye1lFT3V9VU6hnClkYGksIlshiamt
qHswODr3dm7l0wrQwvynuam5V09fTj6afPPil6X3ANcva4uryx8XVj8tfl5c
VpEMXQ22sqQq9JRdi8WtLeWv6lvLoYvLf/0TARRXf6yVjYWVb7X6zXVO31nx
DzDeUtZ9UAlgvASdVwIMb+4xXv4WYyW6Izc29eC7DKxe5lAx3Aek3Iemlvod
paBt8KpNa5v7f1QAKxl+PDg3PjT3GDB8D+QE4MAqH56dHJ4FHgswfrYzyQDd
ecDwc0jgxdyzkXdPh6cmhqefji2+fcnCohxMTe0NjUPPusXT2TFESgyBFE0g
iOBhAGNeeLiCTEnjCbP4AGN+BoeTy2cXizhVEm69jN8k4beIuYDkTgm/U8xr
5bFaOMwmJr2RTmui05oZjCYavVV5XWM3X9grFF+XyG5I5bfkUbfkihvSyJuy
qLuK+AfJ6cMJKf2xCTejYnrlUV3SiC55VKciujVK0aSIaY5LbEpOq0lKz4uI
KYhNbiuvaa+qK80uyIpLTlfE5cQllqSkXcnMaigo7Kis7rzSkCiNZeHYgR6w
Q/an9tkc9nANYtJEBbnlddWtNZVNxfkV2Wn5sZGJEWJFWlJme1Pn84kXyx+X
Acmrn4AzrygxXv6yrCb5izIbf92O8WYH488EQN12tHOLvkKEr7dBVle2S/l7
V5T/A1aXvruB9Ns773ZsTSjpVTO8+BHS0sf5JTXDyiN432E89eDGhr7DeCPx
Ar+9s03rGKv2pKn2wM8+ujs7fle5/6cPwljZlJiD8vBWjLcEYCWlgOHZp0qS
AbGQ925K+c79+WcP3j97MP/8wfsXo/MvRmchkkffv5pcfveWEBpiZ2Bko63v
cfiEBEOMIpCjsPhYIkkajmAGBrJhsBgaPZXLT+MK0ji8NA4nm8e5LOKWiXnV
UkG9VNAIrVkI22WiNomgkctuYDPrmQxgwo0MRjOT1cRgNTM5bWxeF0/YI5Bc
FwOGFbfk0UA3pIBkRX90wmha9nByxt2ElJsx8T0R0V2yqG5FXGdsfFtsfGti
cntaZktGbnVqVm5UfG5MUnV+aW1heVFGbmZsYmpkDMD4ckJyVWZ2c0lFx5X6
usIqOpqOh5H93MOc9p7S0bDS3m1hpG930PHkcZcLhw+cst9zyM7K0cLEzszQ
Zp/tAT+v4NTEzAf3Hq58Wltb/Ly2sLa2sLK2CPIGRPJnICgqb3XmpS39ZPX1
YX+IMTDSlS/bYVZb8R/+XuUte+q7ev8sTnzfmtjK8A4Yq46RfoPx1HaMIZJH
b25qy96ed2N33kE7gaHNwCr7nRnt+1sYzwOGJ4bmJqCSbSMwzD+DNAdhPDSn
gnaLwDtzk/fnJoEPjwJ9fPXow6tHc88BzOMLb1+9f/Uy1MPLWtfQYrfuiT2O
BN8gGZYYhSMCQ5bAEXRff3pgcCyNEc9gJrO5KRxuMpudymbm8DlFYn6lVFQj
EzXIxa0Rsla5tF7AAwVdNZNZy2Q1sNhNbE4Ti9PI4EC3jrL4nRxRj0B2TRxx
U6a4KYu+KY+5Ko7qEUZcl8UMJmb0xafeiku6FhPXFRndERHdG5/cEZ/UlpjS
mZHTk1/UUVBSk5GXHZVQmJxVnJGfFZeSIFPESyKjOIJMRVxRcnr95ZLumqbO
mpaClPxQT7j7Kd8LJ/wOO7qaGjpq/Gyho2WtrWGhq2Wur21hqGtlbGBjqGdl
pG9tpAfpoMNxLkvy9PHrL8u/r4J0/HFp+dPi2hJ06mcZ2oewsLa0+FnVr1C3
NZYhqRn+E5LXU8E2kpUMr/7Jb9yC8fdWvHHAecdljn8DYxXDb7doB4zV2yyh
6Lt+eg46fzS7XesYg/xwV8lt/4aUfYlBALBKoLiDmg8bmeEZpDmllEiDDPxA
JShCPIU0Own0YObpg7nnYzNPR+dePFqaern8bmr4xo1zh1wstA0tNPSdTG2C
zrhyYEg5lhCBwcnCkayAYLKPnwSDjSAQY2n0BCYrgcVOYrEyebxcIb9YIiqT
iKrlsiaFoikqqpzDKWEwypmsKha7msWpY/Ea2Px6Jq+RJWhlizq4km6+vFsg
B/QCdK9HxPVIFO3CiE6J4lZ86vX4lE5FXLsitl0R16aIb49Pbo5PbknN6Mor
vFpa2VNe3VBQliqLSY2Mz0vKzIhNjhbKZCxeFIefHhFdkpbVWVXX13mtvbpF
RBd7nfU/f8zrjIv3scNe+/ec0tptrbnbUlvTQl/HylDPxkgfMGwNIa1jCb60
Mne03+ty/rRXTFTK29fzn5d/Bw638GFx6dPS4sfFD3Pvlz4tri4ur4IycAGE
54W1xSWlUa8oBcUPJdXfZoyNd7bkW+hgsopngLH6Br0fk7wV4y2bJRa3LTpv
X7P7BxhPq+xXDfAo0M2prQzvgDE0XwL48FZ0twg6mqTsSKilMuR1jAdVDG9t
FM9DDjykIllly/PPQIQA3gsYfjCn1OzTUaCZydHpJ4Dkh59+ebb49sWzkaHy
3GxcSOhB6722+maWmoa2Oian7JzQl3y4MIQUhZWGIznBIRQfX5KXD9HbR4TC
KCi0aCojmkqPozOzRJI8iSxPJCkQSQtF0ss8QT6LU8BkX2awi5ncMiavgskr
p7IrKOxqOq+JLe7gyzuFUR38iHZ+RLckpksS0yKMrBfImqRRXfHJ3clpbQnJ
TXEJjbGJjXHJzckZtUlpjZm5zflFrcUV7eU1TWXVSfLYBKkiSRYTxZPwyAwe
kSpncmJ4wuKUjI6q2o7qpoy4dH+3wIsnPE8ddjvu7Hb8sIez03kjg/0au80B
xno6lgZ61ob61gZ6VjpaZnra5kZ6NtbmTg77jh09fN7rUvCVyuaZ6QXV2Y6v
n//r8+pva6u/Knfr/LoGaPq0svxpaXVxZW1p5fPSCnRCU9XogDobyiCtcmkl
1V+XN4pE5R3oKxvxYFmJsfIGvU2Sd3b1rysbbvwduptx4luGN7Kx8gj/Vpg/
qAZTrHyc36zylDADbfPhbwBWY7xJsipgrGfj9ZruYd9WjKHDHerKTqnHSoyh
djHUaptVN9kGoMW7SWjlbv7p4Ny6IasYnoOyhDpCzD6FHHgGwvgh0Pzzx59+
eT49+eh6S0Mkj+Nx5sxBWzt7MxtbfQsLTSPz3QYORpZBpy/SA0MFcKQIHs4L
hTH8AwgenmhXN2ZwqBRHjCDRpARKBJmexBenCeXpwoh0viyNK05j8dOZ3HQa
K4PGymFwCxi8Aionl0DPx9Oq6PwmvrxNGNUmiGrhRdYxpc38qEZeRDVPWs4T
lwul9TFxTYnJNXEJVbHxVbGJVXEpV5IyqlIya7Lza/KKai6X1RZVVhaURvKB
AwukdC6PRGfhyAIKPZYvktGZRSnp3dUNlXklJCT5kP3RowdOuzieOeJ07qiz
m4uz6x6bwxq7TLW1zHV1LJQCL8x0NE10tcyM9G2tAMZ7jx06cObIoXOhIdjS
0rrbt4eHhx+Pjk4+fPhsZGTi3tCjB8MTzyZez7/79Ovq778DvEG9tQDyxuLK
4uKqEuYNjJX+vLSJ8bo2soGqXtuC8VatbLNi1Y/A8tbm8Pf3mP9g78T2btt2
jNUjNLceiwb6c4yVJG9gPL0ZkqHj+TtgPL4F48fqbKxcVlaWeBOqBsUAYHgD
4/lnQ+u5YngOwvjBHIgNT8dmJ0F+eDj/cmL+5ZPpJ49ePRyZvDcw0NtVlp1F
RSCP2Tta6RnZGprvNbGx0bc01zIx2a1vpWXkfug4ztOPGRjCD4HxQ2Gc4GCq
ry8gmezrz4UjhRiCEEuQkmjRTF4CV5LElyVyJfFMQRydm0DnxFOYCWRGMoWV
TmGnk5ipWGoGjlbKEtUKgPFG1fIiqzkRRSReJUtWyZEXMUV5dF4BV1QZFVsV
k1ASGVMcFVsam1Qan1YSn16eml2RkVeZXViRW1KSVZgRlyZhCAQkJhdH4WBJ
HBxJTKYli6WJQvGVnIKm0qo4SfTFk277rQ847TlycO9x5/2njhy4cPyI20Gn
M5q7TbQ1TXW0TXW0AM/gtTEQeA0ChqW50367owcdTzs5nLLff9zPD0mhCHi8
KKEoViKJFwpieNwoiSguKT6nqqzx7u37v7x4t/Rx9Qu0VgyQXFWaM0jRSk9W
tjg+qzFWrm5DbedFlQCN6xirSIbisUo7YgytKi6rr2Vc3aIf94o/fm/IW3OF
Ssv/Hsbrk7R3wrjvu0Sh7LNtlnU7ZWOo1XZvPU4MbsF4SI0xiMGQ947NPn0E
6dnj2edPXjy439fV2VxRkZecxCWS3I6f2mdsYa5laKVntsfIeo+RjbW+lbmO
mbGGoelu/aM29sGnLxA9fdgBQQBjfmgIKyAAkEz08qYGBDPDEBwkVoinSEiM
KKYghiONZokiaVw5mRVJYUWRmQoSU0FgxODpcXhaLIaciKPlMYQlXHkZV17C
lhVQRclIWi5FUMCUZJA4SQRGDkdcEhlXGBGTJ4suiIwvBgwnZxfEZ1xOyLyc
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
Uh/dXNuxobw+b315IKvIE8jRMoIKbuSFOyBxLgUvH68oeiEa8+CNORTLehiG
TvUnYUyyOZyjtiZCMdxiEGNSc0teDEITPR3jld7YjDMp0peRgowDKCaFZcya
GUjuMPjjtDMZvZMh48B/A1lTRn8mrzOAZ5+BbDpdgTQQSBYZwNjvUMIeR67P
VZDhLfZnbMjIKPNllHm9ZR4PvJZnZFQGAtXhcF129ra8vB3gkDeUdW2u6quv
H+7q3j09c+pH//zKRx/dnZ1dmJuLL8TjRkDGILw0j6IB2RiYnzV0l5D8Kf7z
WEPmjhzLZKM7n8j6LihYiEjYhpUYm32ihABdRtFluhEjMdRZNQZgaJvVaDEn
j3GKZGk/TyQaHwqsTTRaKvS6oKssNZJWg+F3SIJTFABgB89rIJnXVM7usEld
1VsP9kZODg6cifWfjfae7e852dlxtKX1qcaWJ7Y37ttaP1Vbt6e2dmdN1ejm
isGKTZGNZZ3Fxe3FpW3FZfW56yuDuSXezFyHP6C43YLTCQALQC/4GSfZw8cj
6Rh7ed7Lc16e9bCMm7G5bFaHDUIfJYcyjA0R1fAS9gTGqdE4BeNVU7zV73om
xvoRM0RhVhjSELeR4h7pietunG7gyRqTA4kxGGA4TWbSFIZgLLAeRfBrctit
5XqcBV53kcdTDHK7S4hK3a4NHvfGDF9FMFCdmVmXk1NfWNgMDhmsRXVNtKFx
pLdv6tixq6++9s4nn8wjqvMYkBcIxotJGC/OzxHhEAVhWF8AsjB3l6WlM0Y2
LmSElidd5mRxVkMWuguKaAxRfD7GtjUwNlbbiSa3dBxxDYaXYUy3qsDlpYgx
biJEfwsanGmLSsG7DFgmoJcDgO08+n+7jGtVFLtF2F6ycbyp+UBn51Nd7Uc6
259qbzvc0nKgoWl6W+Ouuu1j1Vuimzb3lpV3lm5oKizampNbFcos8wVLvMEC
lz9T8WQITjfncJJVtCqPewmS6Rpsu5CVRARjwUuWJ3t41s0xLsbmBCVhbCcA
J5QoJxKSySIXrFRYyApTCy0dI8bJBbdVM5fHx1hmEjVq9OHGalYdY0a3ELJe
R8WRAx1jiMa8Da5Z3K1IUzJdWq7bke9y5judBQ6Qo8DpLHQ6i5zO9U4nUL0h
w1ceDFZlZW3JxYDctoGQXFsbbWoa7eqahFzv/Q8+WVx8iPYBQYaYPL9ALXHc
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
33COwoM=
        "], {{0, 208}, {237, 0}}, {0, 255},
        ColorFunction->RGBColor],
       BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSize->Automatic,
      ImageSizeRaw->{237, 208},
      PlotRange->{{0, 237}, {0, 208}}]}], ",", 
    RowBox[{"{", 
     RowBox[{"28", ",", "28"}], "}"}]}], "]"}], "//", "ArrayPlot"}]], "Input",
 CellChangeTimes->{{3.8196045243032928`*^9, 3.8196045937295313`*^9}, {
  3.819604642122467*^9, 3.8196046427784266`*^9}, {3.819604674779048*^9, 
  3.8196047831345673`*^9}, {3.81960482484866*^9, 3.8196048455311527`*^9}},
 CellLabel->
  "In[173]:=",ExpressionUUID->"bf53755a-ba64-421e-9e9f-673e07530fef"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1: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
   "], {{0, 0}, {28, 28}}, {0, 0.9607843160629272}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellChangeTimes->{{3.8196045337607236`*^9, 3.8196045944465284`*^9}, 
   3.8196046432550526`*^9, 3.8196046995817394`*^9, {3.8196047313834066`*^9, 
   3.8196047834748664`*^9}, {3.819604834979037*^9, 3.8196048458571186`*^9}},
 CellLabel->
  "Out[173]=",ExpressionUUID->"a1786350-0fbc-4f27-8177-b9ab4d319208"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3\ttrain and validate", "Subsubsection",
 CellChangeTimes->{{3.8196049513833866`*^9, 3.81960495416303*^9}, {
  3.81960628336248*^9, 
  3.81960628357628*^9}},ExpressionUUID->"2c96d2a0-e690-4f6b-a7e2-\
a72df2467ef0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"netT", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"net", ",", "dataT", ",", "All", ",", 
     RowBox[{"ValidationSet", "\[Rule]", "dataV"}], ",", 
     RowBox[{"TargetDevice", "\[Rule]", "\"\<GPU\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.819604886465814*^9, 3.819604886468926*^9}, {
  3.819689108672676*^9, 3.8196891115340796`*^9}, {3.819689153435545*^9, 
  3.819689206008046*^9}},ExpressionUUID->"58bd4f0c-b33e-47cd-803b-\
24b9299602b9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"netT", "[", "\"\<LossPlot\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"netT", "[", "\"\<RoundMeasurements\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"netF", "=", 
  RowBox[{"netT", "[", "\"\<TrainedNet\>\"", "]"}]}]}], "Input",
 CellChangeTimes->{{3.819604965504386*^9, 3.8196049655073786`*^9}},
 CellLabel->
  "In[177]:=",ExpressionUUID->"5356716f-2a3b-4977-bab4-667c0a7be938"],

Cell[BoxData[
 TemplateBox[{GridBox[{{"", 
      ItemBox["\"rounds\"", DefaultBaseStyle -> "LabeledLabel"]}, {
      RotationBox[
       ItemBox["\"loss\"", DefaultBaseStyle -> "LabeledLabel"], BoxRotation -> 
       1.5708], 
      GraphicsBox[{
        AbsoluteThickness[1.25], {{
          Hue[0.083, 1., 1.], 
          LineBox[CompressedData["
1:eJw1mHlcjOv7x2efZppmxCEhWyRLcZBo4UolW0TRoU0pS2nTgtK+L9qnpm1m
0rdEliKkaG5FIokQpzqyJmsknJap3/OcuX/90+t5Pc/Mc1/X9fl83tdrZrl4
b3ejUSiURVQKhfz//38JPq9X8up/y+yvH6IPzNeAhbzzb8XSf/G1DgRO9asr
Vh2UmZ9Ipx3p1oM/dk/czPcdxPeNweXE6BObhkFZzU/NyJUGa+Fo2yrzSewh
/Lw5nNxjmvJiw5Ds4ZyxyMvRG6BiY81jg/Ah/HlLeHfz+VNR3ZBsYP4Xk9z9
VrDws88M2fAQ/r7t4Nn9y7TCaFgWdnN3/TOeDajMu3Q3ImAYf/8O8CpWfbW/
eFimvKtp7aSLtlBdqpXf3DqM37cLLO57ePz+OSzL/qbXYGNrB7rpHecyp4/g
9zuAQVaJisOmEdns+GLTzBFHyK9OS79xbASfZw8s0YC+PsmI7Fmq0uteK2e4
s07oWV8/gs/nAo46UQ+F30dkBXZrZsdr7oVNTKPOTnU5Pq8rUN3z4xtN5TKX
eYEu8365wtn1LMk7Dzk+vxuc3c+/tjJJLtP+cfZkY9M+YB9Qq2w6Lcf17AfP
rOMVlBa57Gvdm9du+QdAe6jThf1Ljus7CD7FlSer1EZllxKnaDK93IEf4nU0
1mgU1+sBH5eVumfvHZUd27lt7//gEKz+aSxISR3F9XuCY8Drn601o7I1ZAMm
eMGl2gUWW16M4n54gXGYdksGY0zGJA/wzhv2Tp17K27FGO6PDwhf/owSHxiT
vesaUjXp8oGpzfIYpeQx3C9f2CnKDC8oH5OR1aTd9gXEpU7+cncM9+8wBLgW
RLJ6x2TlZX9uf3n+MFTeHbftN4WCFP30g90rq0rWCygohW/Zv1jkB3H7N6lu
1aAgRX/9YUjf70jBQgry9T+QERbhD2O5ThM1VlGQot/+YKeVUR1gQUE2HVFL
W90DQHVt3ZanNhSk6H8AaDK5xSedKWgFSNqm2wRC3qWlkmJvClLMIxC0Le6n
MMIoSL205rCX8RG41XPT3T6FghTzOQJ2dnX7JIUUNKLcPr5O6yg8SLn2JOMs
BSnmdRR6Bi/2imooqNv3+0WVccdAI7loP9ylIMX8jkHh5zDbrA4KIoqxdhg8
BlUVSwxufaIgxTyDwH/mU37SIAWVGBMneh0EvUXCs610KlLMNxj+lsY/SxVQ
0X/jag4G9yDvlrlTqUgx7+PgH+umlaBFRR4cp2WbLx+H3a9WmGcuoSLF/EPA
s6pT8NqAiiy9gx7ni0NAP6hkuYElFSn0EAqZ5w++SnWgoiVPhX6f4kIhOlhT
duYgFSn0EQpRceNKPgVS0QTDygmGvmFgfatf3hNJRQq9hMHnutCBumQqCrbq
2WWuEw724+hOW7KpSKGfcKi09Wv6q4iKyNN8KQqHANWVQ2/OUZFCT+HgF6B3
ft11KnK8Qh3KmhQBGp9mI9t7VKTQVwQwk/bNbPqbirYeFNwzSoqAnHEf2jrf
UZFCbxFA/96x69R3KjKZppH3diwC/i3ZkHKGSkMK/UXC6uquwEd8GlrausA9
2T8SNjb2DfIm05BCj5EgXulpMjqThuYQTy//EAnU3qtdnUtoWJ9RcGaW4wWn
1TQ0UW8dt8shCmZfdTanbKFhvUZBWU5Z8oMdNMTute6IaouCBd8CtY0daVi/
0dAk97/9xYOG/s1zPrPQIhr8Wt7963yMhvUcDVlKnW0XkmnoAzmg2miYFpAp
qSmkYX1Hg8mSAzVp5TTUSQnZGLwkBizN3HYLq2lY7zEQ6PFowcImGrpPCqok
BnhX90+ubKdh/cfAJL0H/bve0FDdPtHHe+qxYPmXe27fAA37IRYeri3VLlWl
owukAVJiIfZ+o/E/2nTsj1io73fbzNanoyLyBfQ4yM1QDZq7gY79Egdum8Vd
2rZ0lEEWfCQOGgYuBn9xpWP/xEHK82PC/iN0FEUO4HMcbAmOej0vgo79FA/0
X2XDrGQ6CiAF4RwPSnNsJ7hK6Nhf8XD3wk27tgo6Io9/7Wk8DJ2w42rX07Hf
EmDW2vyg3+109NcmosMbE8DHLGn+3U907L8EaG0Pjlo1REcbRpkeHFkCPC03
S1VlMrAfE2DA/3F9zTgGIuVduSwRYi+G7KtQZ2B/JsIi26ez62Yz0CLXWcq7
yhLBKURpnZU+A/s1Ef6cy+zUtGKg6WqLOykaSfBcpF9T58TA/k2CiPyrthIP
BiLUW16WngTJrM9HeUEM7OckQGf5vpPjGYgcrxUrGTaVGRpeyWFgfyfDkR/q
iy6VM1D/YqLCoGT4bMrdyb3BwH5PhleaOaztrQxEdGuqtC8ZwquPX33xnoH9
fwJ0BheK6gYZiLS3hesJiA/fqpfEZuI8OAHPG1+u5Uxiosb1EbV9z09AQfFJ
+/K5TJwPKeBl8Sb92xImqh5OScqxTAEnKi8mRZ+J8yIFwDch1sWYiU6fJxxT
nwKZHY38gA1MnB8pcH/NpJtyGyYi5f9+RSqs22P6i+vIxHmSCkrS0dPSACZK
/oN4Q3kqOB/6854kmYnzJRWueS3o2JnHRDKywHFpoBq2IW7+SSbOmzRYMyUn
9X0ZE+nfIBy0MQ1m5VNVY6uYOH/SoKt+mUn4DSaqIAcSnQaeWv6uhxuYOI/S
oL3d1U/ygInm+/zWUJOlgY5a4EffLibOpzTw1WCdY/Uw0UlSQINpYPiyOW7S
DybOq3QITH7hfYbFQoRavtYtSwfHuXryJ1NYOL/SYZcOzb5Wl4UyScF7pUNj
7MTUWhMWzrN0mFU51Dp7IwvxCDvsK0uH/rA9N//cxsL5lg7K/6BZ13ayUDRp
0NfpIM/s4T9xZOG8Swfmi2d5Ze4sJI+fmcLXyICAEH+5MJSF8y8DLtmv2GUl
ZKFAMlBsMyBhnmdqdCkL52EGUPVaqthVLNRnqOt4JT0D5q7VdB1oYOF8zIDb
Ni2P3j1gof1kAN7PgKeGary5r1g4LzMgTl2fdrSfhV5+Jb6AlQk3F5x2nMNk
4/zMBLP3ITm8CWz0XxxAJqhXOd65rcPGeZoJJSVnV/SvY6NHRUSDgzOBarZo
efV2Ns7XTPjB1S2ZaMtGG8mBX86E4ePdy944sXHeZoL7pySD625sRJjtwbm+
TBApr43s8GLj/M2CCQOn7C1C2ciIKI+6IAv2ST79uJnGxnmcBTGlYbSifDaq
YruJd7hmwdGpjNILUjbO5yxYdTtk4cViNtJ55RF7WpwFPye2v+8qZeO8zgL5
hbH2dafZiIxD+fMsaJ2q/tb+DBvndxaYHI8+FlLLRtOzCEdPEEKjsu6A+R02
znMhBE+rU69vZqMcz/DVJZZCyHsk4Bx4xMb5LgTjjpF09hs2GmcRpzUYJ4SL
D18KrH+ycd4LIUwr1vgLVQklEOO3rBdCU6+Vva1ACee/EA6es/Mx0lFChFp/
SUeEsC/gzrfutUqYB9lwUV9o2+SihIg0eDGwIhuCW5vMpTFKmA/ZMOHU+hvH
K5QQiYP1vtkQOezvf/a+EuZFNtAfpp2y/qCEDsUSCVCeDct4h7av43AwP7LB
Uelud+k0DnrrRDjwXTbMK3eb3TmVg3mSA+PrK1W7dTnIYdXVULOZOXCi7vQD
4VYO5ksOBJ9uts734yDSHqLdOeB8fOTXUCoH8yYHXIoZn7yLOWjL51tbPmfl
wLXrT5ojL3Ewf3Kg647BZMlVDrpzu3kFtObA3mHzG+cuczCPcmDemfRbF6o4
iCw3iyOCaOc9blYPOZhPImjt5TYHfOega0f/ZvWaimD07/rLr9hczCsRJHjs
mB40hYsIt3w1DBXBrZYwUyVDLuaXCJ7F9cqf7eAiIv3aU6tFkHjpqfJPey7m
mQiMcmuTE3ZyERkfb/pFIBndk3bMk4v5lgt3pnUPX4njImI6pfo6ufDtl6Hq
ITEX8y4XTj9KXLqtgYvI+EzanwvC1FGDTc+4mH+5YDQUeOBwDxf9J4eiXEge
aszY9JWLeZgLuz73TDf9zkUsEihduXAu0iip7w0X8zEXuv0XpJX0cVGoGaHA
SXkgN331mjJZGfMyD6IHbv6Y7qWMiPRc3GmVB/uMnMvFicqYn3kgVE6vai9Q
RmS8Lk7Kg9MuWxf5tCljnubB6vtHzkvlyqiXPPDtPPjjnfJe2R88zNc8GH9D
Htw3i4dIfLSP5YHPk+oZhTN5mLf5IFa6OuOJAQ+RdllgkA/fM/ZZCcx5mL/5
8HGnS14C8JA1KTD/fNCz+2da1kYe5nE+uG+myntteKiZFPz5fFgn2tAVGMLD
fM4HXqaoRSLmIbJ8rQ/5UHTrR9yNizzM6wK4bq377f49HiLxE6RZAD2rKi5Y
NvIwvwsgj/+hmFnDQ+RpHjgUgGiE3dZGPK/geQHY998pVurhIRKfs0UF4FAs
aVbu5WG+F8DuFpprw3seIuMksK0A1hs/b3j0lYd5XwDPC5nCfOJaSgKFVwjz
Qjii5cTnFfwvhJ0V7u4zvvPQZBJwFoWgNu9b1KFZKngfKARu9A//bZYqiJSH
b0QhLN1SNjfmkAreDwrhQPepd/5uKojbFXLndm0h+Dt7TQjZr4L3hUJIS1MR
tkSqoKjLBKF+FYKXdNvdssMqeH8Qw+QbHx7PJ+6T64PnEjFUemtV+59XwfuE
GGaq+591/a2CyLi96S4Ghzvt5bpDKni/EEP3p5oGXQEfkTSfWCKGTRMavF+p
8fG+IYYVlSZTr6vyEdGNrQe7xbBofZFv9DQ+3j/EYLwzjZW2iI9I+9xQl8DV
nif9z4CP9xEJdGs81Ju2mo8IesxQtZGASYjbgQ59Pt5PJPDWxih0jQEfPTxF
ECJFApFutdZyMz7eVySgN35x+FUNPiLbUd0kgSlVP5gPiPuK/UUCVpZzjvbE
89EeEiBUKVjnLT5h9JiP9xkp3NKu2Ko3wkcEzZ0qpksh7N/nZUziWrHfSGGT
odbxuC98RKSPdYehFFxK/JyWsQR435HCscTVpyYuE6BsYpyMXVL43zmf9M3j
BXj/kYKDt/pFM6oAkfGkGygFY9Mr4nPGArwPSYGZ2xozqi1AJG7/ypTCQzu1
wDETAd6PpFC8fMrh+M0C1HyNWCgqpJACR3TubRHgfUkKA+fPt201EyCCTmpn
W6QQOVbHn6YvwPuTFA7YnHusuUeATMkF6KMUtGqdYShUgPcpKWR4rzyZuF2A
/vuxSqkIeh9V9qYfFqD/Aze9/T8=
           "]]}, {}}, {{
          Hue[0.59, 0.7, 0.75], 
          LineBox[CompressedData["
1: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
YkN9xW/k+f8De4o7Fw==
           "]]}, {}}}, Prolog -> {{
          InsetBox[
           FormBox["500", TraditionalForm], 
           Offset[{-2, -2}, {500., -1.1710000000000003`}], {1., 1.}], 
          InsetBox[
           FormBox["1000", TraditionalForm], 
           Offset[{-2, -2}, {1000., -1.1710000000000003`}], {1., 1.}], 
          InsetBox[
           FormBox["1500", TraditionalForm], 
           Offset[{-2, -2}, {1500., -1.1710000000000003`}], {1., 1.}], 
          InsetBox[
           FormBox["2000", TraditionalForm], 
           Offset[{-2, -2}, {2000., -1.1710000000000003`}], {1., 1.}], 
          InsetBox[
           FormBox["2500", TraditionalForm], 
           Offset[{-2, -2}, {2500., -1.1710000000000003`}], {1., 1.}], 
          InsetBox[
           FormBox["3000", TraditionalForm], 
           Offset[{-2, -2}, {3000., -1.1710000000000003`}], {1., 1.}]}, {
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-4\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -4.}], {-1, -1.}], 
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-3\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -3.}], {-1, -1.}], 
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-2\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -2.}], {-1, -1.}]}}, 
       PlotRange -> {{
         0, 2180.25}, {-4.1290000000000004`, -1.1710000000000003`}}, 
       ImageSize -> {302, 182.}, 
       GridLines -> {{500., 1000., 1500., 2000., 2500., 3000.}, {{-5., 
           GrayLevel[0.3001]}, {-4., 
           GrayLevel[0.3001]}, {-3., 
           GrayLevel[0.3001]}, {-2., 
           GrayLevel[0.3001]}, {-4.698970004336019, 
           GrayLevel[0.8501]}, {-4.3979400086720375`, 
           GrayLevel[0.8501]}, {-4.221848749616356, 
           GrayLevel[0.8501]}, {-4.096910013008056, 
           GrayLevel[0.8501]}, {-3.6989700043360187`, 
           GrayLevel[0.8501]}, {-3.397940008672037, 
           GrayLevel[0.8501]}, {-3.2218487496163557`, 
           GrayLevel[0.8501]}, {-3.096910013008056, 
           GrayLevel[0.8501]}, {-2.6989700043360183`, 
           GrayLevel[0.8501]}, {-2.397940008672037, 
           GrayLevel[0.8501]}, {-2.221848749616356, 
           GrayLevel[0.8501]}, {-2.0969100130080562`, 
           GrayLevel[0.8501]}, {-1.6989700043360185`, 
           GrayLevel[0.8501]}, {-1.3979400086720375`, 
           GrayLevel[0.8501]}, {-1.2218487496163564`, 
           GrayLevel[0.8501]}, {-1.0969100130080565`, 
           GrayLevel[0.8501]}}}, Frame -> True, Axes -> None, AspectRatio -> 
       Full, BaseStyle -> {
        FontFamily -> "Verdana", FontSize -> 8, FontColor -> GrayLevel[0.5], 
         ScriptSizeMultipliers -> 0.2, ScriptMinSize -> 6}, PlotRangePadding -> 
       None, PlotRangeClipping -> True, Background -> GrayLevel[1], 
       FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, FrameTicks -> None]}},
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    GridBoxSpacings -> {"Columns" -> {{0.5}}}, 
    BaseStyle -> {
     FontFamily -> "Verdana", FontSize -> 8, FontColor -> GrayLevel[0.4]}],
   FormBox[
    TemplateBox[{"\"validation\"", "\"training\""}, "LineLegend", 
     DisplayFunction -> (FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.59, 0.7, 0.75]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.59, 0.7, 0.75]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.083, 1., 1.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.083, 1., 1.]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}],
                "Grid"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
           "Grid"], Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
        Background -> Automatic, StripOnInput -> False], TraditionalForm]& ), 
     InterpretationFunction :> (RowBox[{"LineLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.59, 0.7, 0.75], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> Hue[0.59, 0.7, 0.5], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 StyleBox[
                  RowBox[{"Hue", "[", 
                    RowBox[{"0.59`", ",", "0.7`", ",", "0.75`"}], "]"}], 
                  NumberMarks -> False]], Appearance -> None, BaseStyle -> {},
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.59, 0.7, 0.75]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Hue[0.59, 0.7, 0.75], Editable -> False, Selectable -> False], 
              ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.083, 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> Hue[0.083, 1., 0.6666666666666667], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 StyleBox[
                  RowBox[{"Hue", "[", 
                    RowBox[{"0.083`", ",", "1.`", ",", "1.`"}], "]"}], 
                  NumberMarks -> False]], Appearance -> None, BaseStyle -> {},
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.083, 1., 1.]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Hue[0.083, 1., 1.], Editable -> False, Selectable -> False]}], 
            "}"}], ",", 
          RowBox[{"{", 
            RowBox[{#, ",", #2}], "}"}]}], "]"}]& ), Editable -> True], 
    TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8196049911476274`*^9},
 CellLabel->
  "Out[177]=",ExpressionUUID->"698cdc83-dba1-49dc-9c7f-a82dec50bdf7"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"Loss\"\>", "\[Rule]", "0.00011719778336782838`"}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.819604991168871*^9},
 CellLabel->
  "Out[178]=",ExpressionUUID->"b94bc50f-e53b-4c74-a1d0-1de05fdb0a01"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["4", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]]], 
                    "2" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{784, 784}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{784}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {784}, "$OutputSize" -> 784, 
                    "$InputSize" -> 784, "$InputDimensions" -> {784}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]]], 
                    "3" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Tanh], 
                    "$Dimensions" -> {784}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]]], 
                    "4" -> Association[
                    "Type" -> "Reshape", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Dimensions" -> 
                    NeuralNetworks`ValidatedParameter[{1, 28, 28}]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{784}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {28, 28}, "ColorSpace" -> "Grayscale", 
                    "ColorChannels" -> 1, "Interleaving" -> False, 
                    "MeanImage" -> None, "VarianceImage" -> None, "$Version" -> 
                    "12.0.11"]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{1, 28, 28}, 
                    NeuralNetworks`RealT], "Type" -> "Image", "ColorSpace" -> 
                    "Grayscale", "Interleaving" -> False, "MeanImage" -> None,
                     "VarianceImage" -> None, "$Dimensions" -> {28, 28}, 
                    "$Channels" -> 1, "$Version" -> "12.0.11"]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"784\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"784\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Tanh", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"784\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ReshapeLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"image\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.81960499119201*^9},
 CellLabel->
  "Out[179]=",ExpressionUUID->"7e919c6c-9a07-4985-9295-8f0d4c128b4d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"dataV", "[", 
  RowBox[{"[", "8", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"netF", "@", 
  RowBox[{"%", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.819605007790582*^9, 3.8196050114294195`*^9}},
 CellLabel->
  "In[186]:=",ExpressionUUID->"76ccfc9a-c256-464e-a483-6e8f327235ee"],

Cell[BoxData[
 RowBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt1jFrwkAYxvGjQuvkZ9Cxm7SrudOhUzedujUFnQTBFsTNTo2Lbroq2EGn
9gtYHexi3NUpfgfdVfQ9brEUUlPlfQ5+4TLmf+HlYk+FdO5CCPEc3jzSdilV
LNrlzOX2JWvnb2/yoc02urfdC1FRcBrmswcIAPqjP2foj/6coT/6c4b+6M8Z
+qM/Z+iP/pyhP/pzhv7o74c7vtcmrivJcJDUZtOpRZqNhiS97rUi6P9736M7
rd1qWUT4WPVaRBH0/1nVcSTx09xcC89LEPN80X/HnDN/1fzQeq0IRdB/5/Mj
rh27/1e/Lwn64/8/NZj//+sY9x/n7UqRIL/lHPubzLn03ulIUnXC2sJ7tMhq
+SIJ7v+A/ujPGfqjP2eH+kPw1oXR+zQ=
     "], {{0, 32}, {32, 0}}, {0., 1.},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> False],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{32, 32},
   PlotRange->{{0, 32}, {0, 32}}], "\[Rule]", 
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt16FPw0AUx/ELJGQKh0NAgsEREBh4FzSuGHCUBNQSkkFCcMjOgKIYcJ0A
BQrU+AMoBkyL6sz4B8CzJbzumTraW3m/Sz7NNanpt+21nd879A4mjDFHjcHG
8082Wi3/dGtquLPvN1eWm5OD6dyv4dyYMwvj4SPdgQqgP/prhv7orxn6o79m
6I/+mtWl/93tYi5NEmLfX8e5NNkWRsfcXM9a5vo86tRfNjR/NDpRRCx+2bQM
/ctrXjSuwpCY5v4P90u5XpatsbL7y3FxPm2Ztv6vcUysyuZytIOAmLb+8r3p
qn8v211n2vp3ogVi7vqP1j1t/Z+7XWKu+stnUFv/8HIm56r/Z79PTFt/SX4T
lt1crnvvb55lmvvLf6Iy3svtoEHs6XHVMlfnO279i8j1QV6Xov8FeYz8vnV1
n9e9/3+F/uivGfqjv2boj/6aoT/6a1bUH6r3A6an7As=
     "], {{0, 32}, {32, 0}}, {0., 1.},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> False],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{32, 32},
   PlotRange->{{0, 32}, {0, 32}}]}]], "Output",
 CellChangeTimes->{{3.8196050084436255`*^9, 3.819605028260523*^9}},
 CellLabel->
  "Out[186]=",ExpressionUUID->"25422a55-3d56-402e-a6c3-bb009bac341a"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
yOL1DR9ZgqP/BzakqeM=
    "], {{0, 28}, {28, 0}}, {0., 1.},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag["Real32", ColorSpace -> "Grayscale", Interleaving -> None],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{28, 28},
  PlotRange->{{0, 28}, {0, 28}}]], "Output",
 CellChangeTimes->{{3.8196050084436255`*^9, 3.8196050282735224`*^9}},
 CellLabel->
  "Out[187]=",ExpressionUUID->"d5e9a3d0-48e0-41b5-a17b-525021680509"]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["predict a vector from images (convolutional encoder)", "Subsection",
 CellChangeTimes->{{3.8196050597874537`*^9, 3.819605083555503*^9}, {
  3.819606970913335*^9, 
  3.8196069865363717`*^9}},ExpressionUUID->"2d29e14a-4397-46da-9ad0-\
9f400d5171db"],

Cell[CellGroupData[{

Cell["1\tprepare datasets", "Subsubsection",
 CellChangeTimes->{{3.819605095513137*^9, 3.8196050978795176`*^9}, {
  3.8196062857699366`*^9, 
  3.8196062860502596`*^9}},ExpressionUUID->"a8a0bd7c-54c5-464a-b056-\
54e827ae2779"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Batch", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"imageCreate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"$status", "++"}], ";", "#"}], ",", 
         RowBox[{"\"\<Size\>\"", "\[Rule]", 
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{".05", ",", ".15"}], "}"}], "]"}]}], ",", 
         RowBox[{"\"\<Color\>\"", "\[Rule]", 
          RowBox[{"RandomColor", "[", "]"}]}], ",", 
         RowBox[{"\"\<Shape\>\"", "\[Rule]", 
          RowBox[{"RandomChoice", "[", 
           RowBox[{"{", 
            RowBox[{"\"\<Rect\>\"", ",", "\"\<Disk\>\""}], "}"}], "]"}]}]}], 
        "]"}], "\[Rule]", "#"}]}], "]"}], "&"}], "/@", 
   RowBox[{"RandomReal", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{".1", ",", ".9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"n", ",", "2"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8196050995754356`*^9, 3.819605099578885*^9}, {
  3.819605152617958*^9, 3.819605157054661*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"cbb6c041-1469-47c1-99fe-977cf7a10249"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Batch", "@", "3"}]], "Input",
 CellChangeTimes->{{3.819605244758438*^9, 3.8196052484836607`*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"a728773d-ed52-4003-bfa0-16479f2a1356"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt0DEOgkAURdEfTYjL0C1gP8YtYGU5JBgKEhMsjJ1rQVyUrgB2ASS2tMD4
bnEn75dzduk1uazM7Lbpn8Tfj2XpH6doODJf7ONi3c/tr2GbPQ+0jL6fM00Q
/vgrhz/+yuGPv3L4468c/vgrhz/+yuGPv3L4468c/vgrh39Y/u+6dm2Tu1dV
ubE9959CCn/8lcM/LH/C/5/CH3/l8MdfuTF/mr4O4ltNFA==
       "], {{0, 32}, {32, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> False],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{32, 32},
     PlotRange->{{0, 32}, {0, 32}}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.12078108950847444`", ",", "0.2601519542689631`"}], "}"}]}], 
   ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1rEvA2EYx/E3GmK2WAy6mZFYeJ80EgZiaEUisZyEqYmkBmwVnLUYnOQ6
MOlahEGlRVSiGFwJ4f+gFq0YXsMlvaXvy/Mbvpf3hhuez3t578LTc9HZJiHE
fGv1ErUWIomEtRRrqd3MWPGe7niouuz8qbYWIknIjF6eJ1EDgj/8OQd/+HMO
/vDnHPzhzzn4w59z8P8f/ueFCJVuRugsN6B9pr9UUP/caT9dF4fp5LiPdhxH
2mvN9PY6JT/eF+VnpSLTbofcSKXk6kqIbkujMrPf9f3M3m5Y+6wmFtS/kM/L
rc02SrvuL3O/tboXZW+cnh4nyHuIaZ/blIL6r9u2XE4KOjrsrctfXRevhuj+
bowuLwa1z21KQf3Lnied7XY6yGbrMlfPKN2zmlhQf/Ud9tsL9YxSvxe6ZzUx
/H/Cn3Pwhz/n4A9/zsEf/pyDP/w5B3/4c87PHzW+LyfARTk=
       "], {{0, 32}, {32, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> False],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{32, 32},
     PlotRange->{{0, 32}, {0, 32}}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.14675487241507112`", ",", "0.4902302663608623`"}], "}"}]}], 
   ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt0EEKglAUheGLQbSM2oKNS9qCQuDwBTUSAh1Is9ZooNgKdBcqNG0k2KPz
D/7HucP37S73+BaYWbEZn9iVpzx3j2Q9HVeX7cNsNc7tp2mbPSPyo3eb0gLh
j79y+OOvHP7++zf1OXpV1bHvusOc/eu/+hj++CuHP/7K4e+/P+H/r+GPv3L4
468c/vgrhz/+yuGPv3L4468c/vgrhz/+yn3zp+UbABFyc/w=
       "], {{0, 32}, {32, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> False],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{32, 32},
     PlotRange->{{0, 32}, {0, 32}}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"0.1364425792640498`", ",", "0.7041520482034463`"}], "}"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8196052499547544`*^9, 3.8196052629048376`*^9}, 
   3.819689237847936*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"5cfd097d-ddc8-4bfb-8819-b295c98daf3a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"$status", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dynamic", "@", "$status"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataT", "=", 
   RowBox[{"Batch", "@", "500"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataV", "=", 
   RowBox[{"Batch", "@", "50"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.819605166292642*^9, 3.8196051763159065`*^9}, {
  3.8196058095564985`*^9, 3.8196058108377757`*^9}},
 CellLabel->"In[40]:=",ExpressionUUID->"b5509d2d-d9a9-404b-95c3-cc5629eb280d"],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`$status, StandardForm],
  ImageSizeCache->{33., {0., 13.}}]], "Output",
 CellChangeTimes->{3.819605182165266*^9, 3.819605265824744*^9, 
  3.819605812144826*^9, 3.8196892402109356`*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"fcdc46f1-14cc-43c5-b35b-a82a521ed7b7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2\tsetup a network", "Subsubsection",
 CellChangeTimes->{{3.819605288086315*^9, 3.819605295819744*^9}, {
  3.819606287049826*^9, 
  3.819606287341433*^9}},ExpressionUUID->"2973127c-5259-4caa-9d98-\
d7a30f1ffc87"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"net", "=", 
  RowBox[{"NetInitialize", "@", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ConvolutionLayer", "[", 
        RowBox[{"20", ",", "5"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PoolingLayer", "[", 
        RowBox[{"2", ",", "2"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ConvolutionLayer", "[", 
        RowBox[{"20", ",", "5"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PoolingLayer", "[", 
        RowBox[{"2", ",", "2"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"FlattenLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"LinearLayer", "[", "120", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"LinearLayer", "[", "2", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"NetEncoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Image\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"28", ",", "28"}], "}"}], ",", "\"\<RGB\>\""}], "}"}], 
       "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Output\>\"", "\[Rule]", 
      RowBox[{"{", "2", "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.8196052157481017`*^9, {3.819605298473211*^9, 3.819605336287921*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"6e89c906-576b-4dbc-953b-67ac9dee3331"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["10", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{20, 3, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{20}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 20, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 3, "$InputSize" -> {28, 28}, 
                    "$OutputSize" -> {24, 24}, "$WeightsInputChannels" -> 3], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {20, 24, 24}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 20, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {12, 12}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{20, 20, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{20}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 20, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 20, "$InputSize" -> {12, 12}, 
                    "$OutputSize" -> {8, 8}, "$WeightsInputChannels" -> 20], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 8, 8}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {20, 8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 8, 8}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 20, "$InputSize" -> {8, 8}, 
                    "$OutputSize" -> {4, 4}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 4, 4}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 4, 4}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT]]], 
                    "8" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{120, 320}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{120}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {120}, "$OutputSize" -> 120, 
                    "$InputSize" -> 320, "$InputDimensions" -> {320}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]]], 
                    "9" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {120}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]]], 
                    "10" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{2, 120}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{2}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {2}, "$OutputSize" -> 2, 
                    "$InputSize" -> 120, "$InputDimensions" -> {120}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3, 28, 28}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {28, 28}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, "Interleaving" -> False, 
                    "MeanImage" -> None, "VarianceImage" -> None, "$Version" -> 
                    "12.0.11"]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"24\"", "\"24\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"24\"", "\"24\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"12\"", "\"12\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"8\"", "\"8\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"8\"", "\"8\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"4\"", "\"4\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"320\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"120\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"120\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.819605339230816*^9, 3.8196057711708865`*^9, 
  3.8196893014413204`*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"d7723e02-8edb-4854-9637-d9495a58ed18"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"net", "@", 
  RowBox[{"dataV", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "1"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8196053474143806`*^9, 3.8196053637259874`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"a84f4cee-b41b-4103-a084-efda7c12a127"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.493016004562378`", ",", 
   RowBox[{"-", "0.7001228332519531`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8196053498183594`*^9, 3.819605364114561*^9}, 
   3.8196893038466606`*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"f5181609-763f-4ee8-b9a4-da5ac623b382"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3\ttrain and validate", "Subsubsection",
 CellChangeTimes->{{3.819605519089798*^9, 3.8196055216204453`*^9}, {
  3.8196062882553005`*^9, 
  3.819606288442943*^9}},ExpressionUUID->"64cec91b-cbcf-4fab-8c77-\
9d11d434ac82"],

Cell[BoxData[
 RowBox[{
  RowBox[{"netT", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"net", ",", "dataT", ",", "All", ",", 
     RowBox[{"ValidationSet", "\[Rule]", "dataV"}], ",", 
     RowBox[{"MaxTrainingRounds", "\[Rule]", "800"}], ",", 
     RowBox[{"TargetDevice", "\[Rule]", "\"\<GPU\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8196055262117567`*^9, 3.8196055262147565`*^9}, {
  3.8196062977922487`*^9, 3.81960630517964*^9}, {3.819689308440934*^9, 
  3.819689349454585*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"0df9bf33-c19a-4240-bd28-32e077fd7472"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"netT", "[", "\"\<LossPlot\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"netT", "[", "\"\<RoundMeasurements\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"netF", "=", 
  RowBox[{"netT", "[", "\"\<TrainedNet\>\"", "]"}]}]}], "Input",
 CellChangeTimes->{{3.819605550633318*^9, 3.8196055506343174`*^9}},
 CellLabel->"In[52]:=",ExpressionUUID->"8d2556e1-20bb-4585-935b-1fc38d3b1829"],

Cell[BoxData[
 TemplateBox[{GridBox[{{"", 
      ItemBox["\"rounds\"", DefaultBaseStyle -> "LabeledLabel"]}, {
      RotationBox[
       ItemBox["\"loss\"", DefaultBaseStyle -> "LabeledLabel"], BoxRotation -> 
       1.5708], 
      GraphicsBox[{
        AbsoluteThickness[1.25], {{
          Hue[0.083, 1., 1.], 
          LineBox[CompressedData["
1:eJw1mAk8VOsbxw0zc84slCjJ3iJCi6Vs5VEqLUqWViFbRGPPvswYw01pkyTd
26IslRChwtuqnbgp5VZXblFKhX8i+Z8z3nzO5+NzZs6c877P8/t9f8+Mjlew
k6+sjIyMIUNGhv7/++9I69KjFddr6/v1P9ke3c6CoZ67csbcfnw+EVz6jHSe
Pv1ffdTr0K/l8trg8aJlD69pEL8/A8rumm//pTBUHxrhfzDp+iy4aRZ2zrB6
CF8/Fz4tV7QYzB+uvyy+qHr2ijHk2O/1i9jxE3/eDPpjvSMtTUfqjRtn7dij
bA6WjuXde2tH8P0swVa76NYHy1/1pdSnwwQLQaWiHlLLfuH7A8zekJ27w2O0
flL5/lRDH1uIKNUuqjwzip+3GKb+NUNT1UAGuW54fEFL0Q4s1lbeNHCTQWPP
XwqFi7phZZQMOvST1zqhbhnMvTuFLDstg8bWYw++dvFKR9pkUPPJFb9YgSug
dzrTo+C1DBpb30pYldMR06fNQOOXp+n+UFkNags4acrAQGPrdYCutZfM/WMZ
aG3PrTXUAdph/3SXHmWgsfU7gkC/t3zcbQZqsBde7a12hCdrfGpVexlobD/r
4PrnBMGsfgbyUzuxNmCcE3ROnWZlNV0Wje3PCbg7lZybXGUR63Pd2w5fZ5gZ
2ENkOMvi/bqAYULSQLGvLMpH/0S5XXOBOFul7Pulsnj/rnBYqzeoEckiO2kB
1kPbYI7P4SJZXI/1UEkylEN6ZdFbX3oBG0D3kP3CYj05XJ+N4CMS1CpYyiGR
uaXpvfqNoG1/uHGTmRyu1yYYks8Qvdkjh3R4m+4unrQZeh3ta54kyeH6bQZJ
rN6Khr1y6Dq9vKAtoNaet2rndTlcTzfIW2wj6PkqhzxLs7+Y3XSDyfPO2lZN
YuL6bgWvkqvfvhNMNCqqpCriDvUlFqJQBhPX2x1SHNilfy5moj9d/56sH+IB
m1Tez7TNYeL6e8LevrINzzOZSCsrZv06b0+QvWbBlG9j4n54wvKmzpw97Uwk
GEnXzlTYBmnj553Pkmfh/myDroldhqu/MlGdX86H+zXbgMP0MW1jsnC/vOA5
W3t1mCwLKTQVVBC+XhC7sqf5ki4L988LptSlszWtWWirRVWi3XhvsCmFKfVW
LNxPb8jI7nl0yYGFLpy6Q63IG/Jm7Y623cjC/fWB22mThYVuLDRCt8vPB8hX
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
+gNqT13SeK4ij/4PUAS2Ug==
           "]]}, {}}, {{
          Hue[0.59, 0.7, 0.75], 
          LineBox[CompressedData["
1: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
dRBazvGa88nn/wenP/3V
           "]]}, {}}}, Prolog -> {{
          InsetBox[
           FormBox["200", TraditionalForm], 
           Offset[{-2, -2}, {200., 0.545}], {1., 1.}], 
          InsetBox[
           FormBox["400", TraditionalForm], 
           Offset[{-2, -2}, {400., 0.545}], {1., 1.}], 
          InsetBox[
           FormBox["600", TraditionalForm], 
           Offset[{-2, -2}, {600., 0.545}], {1., 1.}], 
          InsetBox[
           FormBox["800", TraditionalForm], 
           Offset[{-2, -2}, {800., 0.545}], {1., 1.}], 
          InsetBox[
           FormBox["1000", TraditionalForm], 
           Offset[{-2, -2}, {1000., 0.545}], {1., 1.}]}, {
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-3\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -3.}], {-1, -1.}], 
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-2\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -2.}], {-1, -1.}], 
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-1\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -1.}], {-1, -1.}], 
          InsetBox[
           FormBox["\"1\"", TraditionalForm], 
           Offset[{3, 0}, {0, 0.}], {-1, -1.}]}}, 
       PlotRange -> {{0, 800.0625}, {-4.045, 0.545}}, 
       ImageSize -> {302, 182.}, 
       GridLines -> {{200., 400., 600., 800., 1000.}, {{-4., 
           GrayLevel[0.3001]}, {-3., 
           GrayLevel[0.3001]}, {-2., 
           GrayLevel[0.3001]}, {-1., 
           GrayLevel[0.3001]}, {0., 
           GrayLevel[0.3001]}}}, Frame -> True, Axes -> None, AspectRatio -> 
       Full, BaseStyle -> {
        FontFamily -> "Verdana", FontSize -> 8, FontColor -> GrayLevel[0.5], 
         ScriptSizeMultipliers -> 0.2, ScriptMinSize -> 6}, PlotRangePadding -> 
       None, PlotRangeClipping -> True, Background -> GrayLevel[1], 
       FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, FrameTicks -> None]}},
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    GridBoxSpacings -> {"Columns" -> {{0.5}}}, 
    BaseStyle -> {
     FontFamily -> "Verdana", FontSize -> 8, FontColor -> GrayLevel[0.4]}],
   FormBox[
    TemplateBox[{"\"validation\"", "\"training\""}, "LineLegend", 
     DisplayFunction -> (FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.59, 0.7, 0.75]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.59, 0.7, 0.75]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.083, 1., 1.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.083, 1., 1.]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}],
                "Grid"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
           "Grid"], Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
        Background -> Automatic, StripOnInput -> False], TraditionalForm]& ), 
     InterpretationFunction :> (RowBox[{"LineLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.59, 0.7, 0.75], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> Hue[0.59, 0.7, 0.5], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 StyleBox[
                  RowBox[{"Hue", "[", 
                    RowBox[{"0.59`", ",", "0.7`", ",", "0.75`"}], "]"}], 
                  NumberMarks -> False]], Appearance -> None, BaseStyle -> {},
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.59, 0.7, 0.75]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Hue[0.59, 0.7, 0.75], Editable -> False, Selectable -> False], 
              ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.083, 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> Hue[0.083, 1., 0.6666666666666667], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 StyleBox[
                  RowBox[{"Hue", "[", 
                    RowBox[{"0.083`", ",", "1.`", ",", "1.`"}], "]"}], 
                  NumberMarks -> False]], Appearance -> None, BaseStyle -> {},
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.083, 1., 1.]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Hue[0.083, 1., 1.], Editable -> False, Selectable -> False]}], 
            "}"}], ",", 
          RowBox[{"{", 
            RowBox[{#, ",", #2}], "}"}]}], "]"}]& ), Editable -> True], 
    TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8196055513410482`*^9, 3.819605793183939*^9, 
  3.8196059723982477`*^9, 3.8196893177680206`*^9, 3.8196893731682863`*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"90b78aa8-29c3-4d1f-ac62-0d5987a84866"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"Loss\"\>", "\[Rule]", "0.0002562301864534322`"}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8196055513410482`*^9, 3.819605793183939*^9, 
  3.8196059723982477`*^9, 3.8196893177680206`*^9, 3.819689373181285*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"09470d64-7200-4dce-b276-a0a05cf37884"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["10", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{20, 3, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{20}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 20, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 3, "$InputSize" -> {28, 28}, 
                    "$OutputSize" -> {24, 24}, "$WeightsInputChannels" -> 3], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {20, 24, 24}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 20, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {12, 12}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{20, 20, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{20}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 20, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 20, "$InputSize" -> {12, 12}, 
                    "$OutputSize" -> {8, 8}, "$WeightsInputChannels" -> 20], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 8, 8}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {20, 8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 8, 8}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 20, "$InputSize" -> {8, 8}, 
                    "$OutputSize" -> {4, 4}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 4, 4}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 4, 4}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT]]], 
                    "8" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{120, 320}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{120}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {120}, "$OutputSize" -> 120, 
                    "$InputSize" -> 320, "$InputDimensions" -> {320}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]]], 
                    "9" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {120}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]]], 
                    "10" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{2, 120}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{2}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {2}, "$OutputSize" -> 2, 
                    "$InputSize" -> 120, "$InputDimensions" -> {120}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3, 28, 28}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {28, 28}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, "Interleaving" -> False, 
                    "MeanImage" -> None, "VarianceImage" -> None, "$Version" -> 
                    "12.0.11"]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"24\"", "\"24\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"24\"", "\"24\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"12\"", "\"12\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"8\"", "\"8\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"8\"", "\"8\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"4\"", "\"4\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"320\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"120\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"120\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8196055513410482`*^9, 3.819605793183939*^9, 
  3.8196059723982477`*^9, 3.8196893177680206`*^9, 3.8196893732085333`*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"5e5ee2c9-e26d-4511-b1a4-7f004bc59486"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"dataV", "[", 
  RowBox[{"[", "2", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"netF", "@", 
  RowBox[{"%", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8196055591738977`*^9, 3.819605559178505*^9}, 
   3.819605987169241*^9},
 CellLabel->"In[55]:=",ExpressionUUID->"0aeb58d7-f1dd-4919-863c-c9fe02b14c66"],

Cell[BoxData[
 RowBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt0EEKgmAUReGHQbQM20KNQ9qCQeDwF3QkVDYIZ66y0FWkK1ChBTgQ0e4Z
nMd9028f38LUM7Pnrj+he53z3BWX7fAkLjsesk0//V/DNisDWkZ1FdEM4Y+/
cvjjrxz++CuHP/7K4Y+/cvjjrxz++CuHP/7K4Y+/cvjjv5Y+72vQfO+ntnmM
2vjj/0/hjz9NG/74K4c//srhv0x/mr8O5rBWbA==
     "], {{0, 32}, {32, 0}}, {0., 1.},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> False],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{32, 32},
   PlotRange->{{0, 32}, {0, 32}}], "\[Rule]", 
  RowBox[{"{", 
   RowBox[{"0.8459552355678547`", ",", "0.2697508592771495`"}], 
   "}"}]}]], "Output",
 CellChangeTimes->{
  3.8196055599070883`*^9, 3.8196057960363197`*^9, {3.8196059804983635`*^9, 
   3.8196059879459143`*^9}, 3.819689376917245*^9},
 CellLabel->"Out[55]=",ExpressionUUID->"c152a221-6ac7-4edd-83a3-eca7cb7ae36d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.8490093946456909`", ",", "0.24318984150886536`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8196055599070883`*^9, 3.8196057960363197`*^9, {3.8196059804983635`*^9, 
   3.8196059879459143`*^9}, 3.8196893769252357`*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"9772478b-d328-4a67-b837-e68e2dec411b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringLength", "@", 
  RowBox[{"Compress", "@", "netF"}]}]], "Input",
 CellChangeTimes->{{3.8196055668232737`*^9, 3.81960557421776*^9}},
 CellLabel->
  "In[261]:=",ExpressionUUID->"ea9ecebd-124c-4589-a186-6ff5fae253ff"],

Cell[BoxData["251298"], "Output",
 CellChangeTimes->{3.819605574660574*^9, 3.8196059952570176`*^9},
 CellLabel->
  "Out[261]=",ExpressionUUID->"fae0699d-ddd0-4ec6-b465-16d9af3d1be7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "9"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"dataV", "[", 
  RowBox[{"[", 
   RowBox[{"n", ",", "2"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"netF", "@", 
  RowBox[{"dataV", "[", 
   RowBox[{"[", 
    RowBox[{"n", ",", "1"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"HighlightImage", "[", 
  RowBox[{
   RowBox[{"dataV", "[", 
    RowBox[{"[", 
     RowBox[{"n", ",", "1"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"AbsolutePointSize", "[", "6", "]"}], ",", 
     RowBox[{"Opacity", "@", "1"}], ",", "Red", ",", 
     RowBox[{
      RowBox[{"netF", "@", 
       RowBox[{"dataV", "[", 
        RowBox[{"[", 
         RowBox[{"n", ",", "1"}], "]"}], "]"}]}], "32"}]}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8196055915876074`*^9, 3.819605591589606*^9}, {
  3.8196056247791414`*^9, 3.819605637886552*^9}, {3.8196056805380125`*^9, 
  3.819605745651712*^9}, {3.819606007684573*^9, 3.8196060541076083`*^9}, {
  3.819606118550358*^9, 3.819606155879348*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"0585883f-79f6-481d-961d-dd10725ead7d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.7668346777598211`", ",", "0.7738785480787674`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8196060982535076`*^9, 3.8196061562558675`*^9}, 
   3.819689385762821*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"04662da4-8274-4e60-a336-bd8af674162b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.6142788529396057`", ",", "0.8253617286682129`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8196060982535076`*^9, 3.8196061562558675`*^9}, 
   3.819689385768826*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"cdef8ad0-f320-4539-931f-ad146e71ae14"],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    FormBox[
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UFABikHs/7QHN2kGRs2ntfnXDC6goVHzR82nFhg1f9T8UfNHzR81f9T8UfNx
mU9TAACTJFb5
        "], {{0, 32}, {32, 0}}, {0, 255},
        ColorFunction->RGBColor],
       BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> False],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSizeRaw->{32, 32},
      PlotRange->{{0, 32}, {0, 32}}],
     TraditionalForm], {0, 0}, {0, 0}, {32, 32}], 
   {RGBColor[1, 0, 0], AbsolutePointSize[6], Opacity[1], EdgeForm[RGBColor[
    1, 0, 0]], 
    {Opacity[1], PointBox[{19.656923294067383`, 26.411575317382812`}]}}},
  DefaultBaseStyle->{"Graphics", 
    RGBColor[1, 0, 0], 
    FaceForm[
     Opacity[0.2]], 
    Thickness[0.006], 
    PointSize[0.018], 
    EdgeForm[{
      Thickness[0.004], 
      RGBColor[1, 0, 0]}]},
  ImageSize->{112.6666666666664, Automatic},
  ImageSizeRaw->{32, 32},
  Method->{Automatic, "GridLinesInFront" -> True},
  PlotRange->{{0, 32}, {0, 32}},
  PlotRangePadding->None]], "Output",
 CellChangeTimes->{{3.8196060982535076`*^9, 3.8196061562558675`*^9}, 
   3.8196893858498645`*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"fc5296ff-8d13-42b4-b829-cc377c1dc697"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
specify a morphology character from images (convolutional classifier)\
\>", "Subsection",
 CellChangeTimes->{{3.8196063140515594`*^9, 3.819606321152711*^9}, {
   3.819606795979307*^9, 3.819606801066885*^9}, 3.8196069534484015`*^9, {
   3.8196069924883366`*^9, 
   3.8196069978013096`*^9}},ExpressionUUID->"9f8a02cd-8a2b-4827-84c8-\
791cf8cc6fe1"],

Cell[CellGroupData[{

Cell["1\tprepare datasets", "Subsubsection",
 CellChangeTimes->{{3.819606325518509*^9, 
  3.8196063293275595`*^9}},ExpressionUUID->"7f09ba8f-eb32-408c-8ce9-\
05bd8c495183"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Batch", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{
       RowBox[{"imageCreate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"$status", "++"}], ";", 
          RowBox[{"RandomReal", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{".2", ",", ".8"}], "}"}], ",", "2"}], "]"}]}], ",", 
         RowBox[{"\"\<Size\>\"", "\[Rule]", 
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{".1", ",", ".2"}], "}"}], "]"}]}], ",", 
         RowBox[{"\"\<Color\>\"", "\[Rule]", 
          RowBox[{"RandomColor", "[", "]"}]}], ",", 
         RowBox[{"\"\<Shape\>\"", "\[Rule]", "#"}]}], "]"}], "\[Rule]", 
       "#"}]}], "]"}], "&"}], "/@", 
   RowBox[{"RandomChoice", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<Rect\>\"", ",", "\"\<Disk\>\""}], "}"}], ",", "n"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.819606344688555*^9, 3.819606353368821*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"c9bd15ef-4e2a-4729-aec1-b1e9303dff07"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Batch", "@", "3"}]], "Input",
 CellChangeTimes->{{3.8196063608085947`*^9, 3.819606362932732*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"9686216e-ec59-42b9-b57c-893721bc7cfc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1zlLA1EQB/BFQUQQsRREIoLYCSpiNwbvWxPPcgWtAkIsxM5a8ewUTxSP
SgvPykRz3/fhpzHzSPGaiOLuks2b4p99CSEbfrMzvNe4uGJaLpMkabUy92KS
14xWq7xursA3S7Klvc1Snlsa8sG1JG0ApTjylV2gaBDyJ3+RQ/7kL3JK1T8W
nYK31y4Ih8ZZbq6bwesZhIB/BM5OG8Dl7INQcAyuLpvA4x6AaGQSnh472GeZ
9BwkE9PsSv4/B40i4QlIp2aZ7clxPbNF063NKrC9w5/XWKeD/Vr4sBshlZwB
t6sfEnEz+eeTzcwzb7yi+dFhHTgdvf8y/00t8H7xmEnRvtCjP86Wl+dONlfU
MC+0xvvd3baAzzsktD8/t7X053tBZH/eQUt/fq3ULNKjP7+H0dIc587ebo3w
zz/uFR/uW1kdtPTn6y6yP9/7as8i/P2d7Wqw27rZXtTvG2ZnA5H9+aCF47OH
1YOfD0r583stNf6/3v0L9QV/5i3UI3y9goFRuDg3sLMWPuf4PbXOXKXqr8eQ
P/mLHPInf5FD/uQvcsif/EUO+ZO/yCF/8hc55F+c/hTt8w1+bMha
       "], {{0, 32}, {32, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> False],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{32, 32},
     PlotRange->{{0, 32}, {0, 32}}], "\[Rule]", "\<\"Disk\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt178vA2Ecx/EnmjRGYpaQSCxi0MHC800TJgtXP8eTMDWR1CC2CmFVrEy0
HfwYnLAStZDS3+35P2p198RwhiaVRh/n+xnezfeWG17P3T1P+5fXjNUOIcR6
p/NjmBvhWMzcjATdixUzGhqJBpyx7yt3FiJO6G9k15ZQG4I//DkHf/hzDv58
/M9OByjzOEHVygK9PE9RsRChWnVRu8F/8/+o16V1HaJyaY4S+13je7tByudm
aCsuxna2A5R7m/42p5JJ6a5NqThLhbxBlfK8dhe/+Xuf7UbOzczvti2vLofV
Wui28ZP/jWXJdGpQPfOt+F+cD8mjwx71Hui24ejvfK/kQaIb/j+8z8lxLz3c
h1v+/rxms9J5B9Q66rbxk7837/7bjDn23987fz5lJtXZx529e/Td7ag6g+L8
if9f8Ocb/OHPOfjDn3Pwhz/n4A9/zsEf/pyDP/w5B3/4c66RP2p/n1LfC5w=

       "], {{0, 32}, {32, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> False],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{32, 32},
     PlotRange->{{0, 32}, {0, 32}}], "\[Rule]", "\<\"Disk\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt2MsvA0EcwPFNJcLBUeKGPwEHguxPiUcIovU8roRTE0kdxE04kXAjdeJf
4KK09EVbLS3bd93rVre66myQkWiCPmZqfodvM900k+yn09lJWxdXDMs6SZJW
6/IvBmVNbzYr68Za8mZJMXW0m2ryw5b3yFiSNgDjo3RqAatA6I/+Iof+6C9y
6I/+Iof+6C9y6I/+Iof+6C9y6P8//KMRI6iPU+B0AAQDo+DzDsHBfiN4bwa1
a1ubui/XyWcfwpNwbu1iblCt/nfBMbj1j8DxUTM4rmSwnnXmjQPyb8cf38uh
pYm5B+/+9LotxrzQmMwduh+H05M25jY8+vt9w+Bx98POdn1Z/On9irUNj/5u
lx7sth54zmRKZk6PXc4+sF10w1M6LbO24dGfXp/l8L/2DGjzvuZy6P9NpXrm
4rP4b/6p5LxWPDajPQcu7b3wks0WZU7vafT8rG149KdLJuYgEZ/VzkT02Z7s
T+R8FFHVgubkN0T2mr3dhs95wqEJ5h7V5P+TyDqORae1cxPre+Ux/P8B/UUO
/dFf5NAf/UWukD9W+d4AkMwpIg==
       "], {{0, 32}, {32, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> False],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{32, 32},
     PlotRange->{{0, 32}, {0, 32}}], "\[Rule]", "\<\"Disk\"\>"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.8196063636997805`*^9, 3.8196063670576115`*^9}, 
   3.8196893981186028`*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"704a814c-d06f-4422-9e08-6fa48181832c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"$status", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Dynamic", "@", "$status"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataT", "=", 
   RowBox[{"Batch", "@", "1000"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataV", "=", 
   RowBox[{"Batch", "@", "100"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8196063784417944`*^9, 3.819606382870993*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"0aeaced2-cb26-4161-8c89-c2a9967bd0a4"],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`$status, StandardForm],
  ImageSizeCache->{44., {0., 13.}}]], "Output",
 CellChangeTimes->{3.8196063838374276`*^9, 3.8196894007872066`*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"57332fab-7730-440e-98da-20805b9420e7"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["2\tsetup a network", "Subsubsection",
 CellChangeTimes->{{3.81960665228679*^9, 3.819606655349679*^9}, {
  3.8196068920821004`*^9, 
  3.8196068923187075`*^9}},ExpressionUUID->"8f017fd1-afb0-4f62-8b0e-\
e325ef0d472a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"net", "=", 
  RowBox[{"NetInitialize", "@", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ConvolutionLayer", "[", 
        RowBox[{"20", ",", "5"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PoolingLayer", "[", 
        RowBox[{"2", ",", "2"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ConvolutionLayer", "[", 
        RowBox[{"20", ",", "5"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"PoolingLayer", "[", 
        RowBox[{"2", ",", "2"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"FlattenLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"LinearLayer", "[", "120", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ElementwiseLayer", "[", "Ramp", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"LinearLayer", "[", "2", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"NetEncoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Image\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"28", ",", "28"}], "}"}], ",", "\"\<RGB\>\""}], "}"}], 
       "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Output\>\"", "\[Rule]", 
      RowBox[{"NetDecoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Class\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"\"\<Rect\>\"", ",", "\"\<Disk\>\""}], "}"}]}], "}"}], 
       "]"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.819606648929745*^9, 3.8196066768714776`*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"7065a5ff-db7f-49d6-9a71-4f64eb1e4f9d"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["11", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{20, 3, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{20}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 20, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 3, "$InputSize" -> {28, 28}, 
                    "$OutputSize" -> {24, 24}, "$WeightsInputChannels" -> 3], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {20, 24, 24}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 20, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {12, 12}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{20, 20, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{20}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 20, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 20, "$InputSize" -> {12, 12}, 
                    "$OutputSize" -> {8, 8}, "$WeightsInputChannels" -> 20], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 8, 8}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {20, 8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 8, 8}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 20, "$InputSize" -> {8, 8}, 
                    "$OutputSize" -> {4, 4}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 4, 4}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 4, 4}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT]]], 
                    "8" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{120, 320}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{120}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {120}, "$OutputSize" -> 120, 
                    "$InputSize" -> 320, "$InputDimensions" -> {320}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]]], 
                    "9" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {120}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]]], 
                    "10" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{2, 120}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{2}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {2}, "$OutputSize" -> 2, 
                    "$InputSize" -> 120, "$InputDimensions" -> {120}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]], "11" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3, 28, 28}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {28, 28}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, "Interleaving" -> False, 
                    "MeanImage" -> None, "VarianceImage" -> None, "$Version" -> 
                    "12.0.11"]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{2}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {"\"Rect\"", "\"Disk\""}, "InputDepth" -> 1, 
                    "Dimensions" -> 2, "$Rank" -> 0, "$Version" -> 
                    "12.0.11"]]], NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"24\"", "\"24\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"24\"", "\"24\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"12\"", "\"12\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"8\"", "\"8\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"8\"", "\"8\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"4\"", "\"4\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"320\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"120\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"120\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8196066787173715`*^9, 3.819689514976222*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"0f072778-4505-4da8-82d7-e31197412b3b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"dataV", "[", 
  RowBox[{"[", "1", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"net", "@", 
  RowBox[{"dataV", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "1"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8196066915355053`*^9, 3.8196066959684277`*^9}},
 CellLabel->
  "In[325]:=",ExpressionUUID->"53ee433c-bd48-4ba9-9f86-31970925226a"],

Cell[BoxData[
 RowBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt1skrhHEcx/EHZcmFJEIyJFvZRcl8SJQbo8hxFCelOMjNlv1g39cZy4wR
M7Jm30acbBn8FVzGDfM8OfxqyDqi3/fwfp7vc309v+f3/GSFpYpie0EQyp0t
F4WyIq2sTFmZ6yg+FClL4mJLHCxjwEviLAhVoP5GtzcF1C9E/uTPc+RP/rbo
/CwHlxe5ODvNxvxcJJYW46HVhGJo0BdTk8Ho6vSAZjoE+vkojI8FYGM9Gbs7
qVhdSST/L7a3mwbjYQa2t+RobnJBT7cnnh4f5XW1Dmhvc8P93d2H5tERf+nd
9PV6wXSVh2tTvnQnf+vYdd7a4iqZ1VTb4bPmb83st0P+1rH7xk+Zs3NHuzuG
h/zQ2OBE/q/Erk9b+LMz+Vu3vJQgfQMLhhib+LN7Gvlbx+7/DfWO0rnmwWz+
Mf8ZbRgM+mhMqIPI/53WVpOwtZki7UffMRffoXgGEtc+nX++1pExEyfHWTjY
T4dqXAbdTDgGB3zQ3+cNtSpQsmZncY2L//BZXYTNzXnw/y+RP/nzHPmTP8+R
P/nzHPmTP8+RP/nzHPmTP8+RP/nzHPmTP8+95U/9fs/86/fH
     "], {{0, 32}, {32, 0}}, {0., 1.},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> False],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{32, 32},
   PlotRange->{{0, 32}, {0, 32}}], "\[Rule]", "\<\"Disk\"\>"}]], "Output",
 CellChangeTimes->{3.819606696553408*^9},
 CellLabel->
  "Out[325]=",ExpressionUUID->"4c5eb095-a4bf-4460-ae9f-4d3a2133f159"],

Cell[BoxData["\<\"Disk\"\>"], "Output",
 CellChangeTimes->{3.8196066965714035`*^9},
 CellLabel->
  "Out[326]=",ExpressionUUID->"a577d46e-78cd-4af0-87c0-34757e08f2d5"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["3\ttrain and validate", "Subsubsection",
 CellChangeTimes->{{3.819606918246428*^9, 
  3.8196069257581434`*^9}},ExpressionUUID->"dc95f655-86c2-435e-bcfa-\
7aee0e385f5c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"netT", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"net", ",", "dataT", ",", "All", ",", 
     RowBox[{"ValidationSet", "\[Rule]", "dataV"}], ",", 
     RowBox[{"MaxTrainingRounds", "\[Rule]", "1000"}], ",", 
     RowBox[{"TargetDevice", "\[Rule]", "\"\<GPU\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8196067070080657`*^9, 3.8196067070100603`*^9}, {
  3.8196895216956844`*^9, 3.819689545973688*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"cf4e37c9-56e7-4fa6-b928-dcdd5c2a1679"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"netT", "[", "\"\<LossPlot\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"netT", "[", "\"\<RoundMeasurements\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"netF", "=", 
  RowBox[{"netT", "[", "\"\<TrainedNet\>\"", "]"}]}]}], "Input",
 CellChangeTimes->{{3.819606811609956*^9, 3.8196068116109705`*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"18ac8c2d-6300-4756-970e-47b8b01737f6"],

Cell[BoxData[
 TemplateBox[{GridBox[{{"", 
      ItemBox["\"rounds\"", DefaultBaseStyle -> "LabeledLabel"]}, {
      RotationBox[
       ItemBox["\"loss\"", DefaultBaseStyle -> "LabeledLabel"], BoxRotation -> 
       1.5708], 
      GraphicsBox[{
        AbsoluteThickness[1.25], {{
          Hue[0.083, 1., 1.], 
          LineBox[CompressedData["
1:eJw1WAk0lGsfH9myz76IuCEppVIolT9JSdnKUqQIaSFbsu8zGIxKCUkR3VaF
lHI1T6XcShsttxRlabEWRZb43jHP5zjHecy7/JffduYvr/2OPtNIJJK+BIkk
+vv/H8PHKSsVte8Jg0L9jsTdkQf7xtVXdv9Xj8+q8KTFq8bYu0Ho5PL0sgZF
G+bPsVaZ8HiJP58Ln7ydT1hO/yisX5dQ01+9EMZe7MlpW/EZX78E1A7LtFAp
XcJ2nxmn7XYbQ67ph/ihgH58/3IY8Xy3ujLiu3AysSr5CmcVzJO4UX3K9Qd+
HsCS28cP11n+FCo///uarI8FnOQeb5ij9As/3xJK38rsyPtnSFjQ8vOsce0a
IMcUl8jfG8bvWwuhQbo2UmEjwrm95nm7GNagZlWUO83gB37/eng/rsvVk/ol
rB4TpB/33wDZ7PWzev1HcT22MMMnfItdy5jQSv59TP19O1CE03e+vR7D9dlD
rfVHC8nYP8I9GXTiEQ6QBFzVgAuTuF5H2HX+1l9z5EmonGZK/G6Cf/Usm2qp
JCSufzOoOsaXj64jod/5nhfmfdkMmlbBrQuKJnE/TuDXGNPTd4eEzGalnlmd
7Qyd8vrP7vtJIHF/LhDJ+2xTYDoN8c6XFbiZuYJtTfn+Tp1pSNzvFtjsYzX7
1oNJ4ZOFr46FdG8Boc6jw3tDBnD/W8H7yqWc8YZBIWNqAG6wTjPEa64mCYnn
4Q7z9oeUvlWZhtynCtgGqqTNn2WLpyHxfDxg0MtziXaAJDrzQDQQD9DUcHS9
lieJxPPaDrc/0rtm/JREv4huvm3cAQqDEy9li6SQeH47QOB5uI3hLYVyux7d
/KXlCRDVfF/TSgqJ5+kJv+V+qJ8XSKMVCzyuS4x6wtOIZhm/Q9JIPF8vSFzc
P22xgQxqDfpRofTcC7SO+RdqDkrjee8E2r1RqnSWDEoSlXt2JzGfYfVOHRk8
f29wOplhb/ZBBumOsC7pRHuDZ73jxGCxDN6HN4RTv8h7RsmgRysunlvk6AMe
9E9XM35LI/F+fMDOWC6uOVkWBcSvKl05xxccijpvmL2XxfvyhbI/7aGnPKYj
St2LIusJXzBZ0dajqyKH97cLZJmyXPu66ahK1qfQ6eUuSFvwOdeBK4f36QcH
uI5adhlyyNVGVJEfbLYN/3qNOIv3uxto5scWBnDk0bhoXfG74evsQNX3Q3JI
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
0NSXVZAFkxmC08f9JND/ANSQ7S4=
           "]]}, {}}, {{
          Hue[0.59, 0.7, 0.75], 
          LineBox[CompressedData["
1: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
U1kwfdPpohQ67/7+sgqygDea36wwykX/B9ox1dc=
           "]]}, {}}}, Prolog -> {{
          InsetBox[
           FormBox["200", TraditionalForm], 
           Offset[{-2, -2}, {200., 0.7750000000000001}], {1., 1.}], 
          InsetBox[
           FormBox["400", TraditionalForm], 
           Offset[{-2, -2}, {400., 0.7750000000000001}], {1., 1.}], 
          InsetBox[
           FormBox["600", TraditionalForm], 
           Offset[{-2, -2}, {600., 0.7750000000000001}], {1., 1.}], 
          InsetBox[
           FormBox["800", TraditionalForm], 
           Offset[{-2, -2}, {800., 0.7750000000000001}], {1., 1.}], 
          InsetBox[
           FormBox["1000", TraditionalForm], 
           Offset[{-2, -2}, {1000., 0.7750000000000001}], {1., 1.}]}, {
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-6\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -6.}], {-1, -1.}], 
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-5\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -5.}], {-1, -1.}], 
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-4\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -4.}], {-1, -1.}], 
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-3\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -3.}], {-1, -1.}], 
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-2\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -2.}], {-1, -1.}], 
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-1\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -1.}], {-1, -1.}], 
          InsetBox[
           FormBox["\"1\"", TraditionalForm], 
           Offset[{3, 0}, {0, 0.}], {-1, -1.}]}}, 
       PlotRange -> {{0, 1000.03125}, {-6.875000000000001, 
         0.7750000000000001}}, ImageSize -> {302, 182.}, 
       GridLines -> {{200., 400., 600., 800., 1000.}, {{-7., 
           GrayLevel[0.3001]}, {-6., 
           GrayLevel[0.3001]}, {-5., 
           GrayLevel[0.3001]}, {-4., 
           GrayLevel[0.3001]}, {-3., 
           GrayLevel[0.3001]}, {-2., 
           GrayLevel[0.3001]}, {-1., 
           GrayLevel[0.3001]}, {0., 
           GrayLevel[0.3001]}}}, Frame -> True, Axes -> None, AspectRatio -> 
       Full, BaseStyle -> {
        FontFamily -> "Verdana", FontSize -> 8, FontColor -> GrayLevel[0.5], 
         ScriptSizeMultipliers -> 0.2, ScriptMinSize -> 6}, PlotRangePadding -> 
       None, PlotRangeClipping -> True, Background -> GrayLevel[1], 
       FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, FrameTicks -> None]}},
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    GridBoxSpacings -> {"Columns" -> {{0.5}}}, 
    BaseStyle -> {
     FontFamily -> "Verdana", FontSize -> 8, FontColor -> GrayLevel[0.4]}],
   FormBox[
    TemplateBox[{"\"validation\"", "\"training\""}, "LineLegend", 
     DisplayFunction -> (FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.59, 0.7, 0.75]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.59, 0.7, 0.75]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.083, 1., 1.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.083, 1., 1.]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}],
                "Grid"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
           "Grid"], Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
        Background -> Automatic, StripOnInput -> False], TraditionalForm]& ), 
     InterpretationFunction :> (RowBox[{"LineLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.59, 0.7, 0.75], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> Hue[0.59, 0.7, 0.5], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 StyleBox[
                  RowBox[{"Hue", "[", 
                    RowBox[{"0.59`", ",", "0.7`", ",", "0.75`"}], "]"}], 
                  NumberMarks -> False]], Appearance -> None, BaseStyle -> {},
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.59, 0.7, 0.75]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Hue[0.59, 0.7, 0.75], Editable -> False, Selectable -> False], 
              ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.083, 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> Hue[0.083, 1., 0.6666666666666667], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 StyleBox[
                  RowBox[{"Hue", "[", 
                    RowBox[{"0.083`", ",", "1.`", ",", "1.`"}], "]"}], 
                  NumberMarks -> False]], Appearance -> None, BaseStyle -> {},
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.083, 1., 1.]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Hue[0.083, 1., 1.], Editable -> False, Selectable -> False]}], 
            "}"}], ",", 
          RowBox[{"{", 
            RowBox[{#, ",", #2}], "}"}]}], "]"}]& ), Editable -> True], 
    TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.819606812753633*^9, 3.81968953886506*^9, 
  3.819689601801551*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"2f09444c-0251-444f-842d-29a220e4dec3"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Loss\"\>", "\[Rule]", "0.0061852199614018735`"}], ",", 
   RowBox[{"\<\"ErrorRate\"\>", "\[Rule]", "0.`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.819606812753633*^9, 3.81968953886506*^9, 
  3.8196896018108983`*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"86f83ba1-911a-4378-b9d9-493bc5a7861c"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["11", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{20, 3, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{20}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 20, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 3, "$InputSize" -> {28, 28}, 
                    "$OutputSize" -> {24, 24}, "$WeightsInputChannels" -> 3], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 28, 28}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {20, 24, 24}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 20, "$InputSize" -> {24, 24}, 
                    "$OutputSize" -> {12, 12}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 24, 24}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{20, 20, 5, 5}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{20}]], 
                    "Parameters" -> 
                    Association[
                    "OutputChannels" -> 20, "KernelSize" -> {5, 5}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {{0, 0}, {0, 0}}, 
                    "Dilation" -> {1, 1}, "ChannelGroups" -> 1, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$InputChannels" -> 20, "$InputSize" -> {12, 12}, 
                    "$OutputSize" -> {8, 8}, "$WeightsInputChannels" -> 20], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 12, 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 8, 8}, 
                    NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {20, 8, 8}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 8, 8}, 
                    NeuralNetworks`RealT]]], "6" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {2, 2}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {{0, 0}, {0, 0}}, "Function" -> Max, 
                    "Dimensionality" -> 2, "Interleaving" -> False, 
                    "$Channels" -> 20, "$InputSize" -> {8, 8}, 
                    "$OutputSize" -> {4, 4}, "$MXPoolingConvention" -> 
                    "valid", "$MXGlobalPool" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 8, 8}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{20, 4, 4}, 
                    NeuralNetworks`RealT]]], "7" -> 
                    Association[
                    "Type" -> "Flatten", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["Level" -> DirectedInfinity[1]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{20, 4, 4}, NeuralNetworks`RealT]],
                     "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT]]], 
                    "8" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyArray[{120, 320}], "Biases" -> 
                    NeuralNetworks`Private`DummyArray[{120}]], "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {120}, "$OutputSize" -> 120, 
                    "$InputSize" -> 320, "$InputDimensions" -> {320}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{320}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]]], 
                    "9" -> Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {120}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]]], 
                    "10" -> Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{2, 120}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{2}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {2}, "$OutputSize" -> 2, 
                    "$InputSize" -> 120, "$InputDimensions" -> {120}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{120}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]], "11" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "6", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "5", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "6", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "8", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "7", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "9", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "8", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "10", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "9", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "11", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "10", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "11", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{3, 28, 28}, 
                    NeuralNetworks`RealT], "Type" -> "Image", 
                    "ImageSize" -> {28, 28}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, "Interleaving" -> False, 
                    "MeanImage" -> None, "VarianceImage" -> None, "$Version" -> 
                    "12.0.11"]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{2}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {"\"Rect\"", "\"Disk\""}, "InputDepth" -> 1, 
                    "Dimensions" -> 2, "$Rank" -> 0, "$Version" -> 
                    "12.0.11"]]], NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"28\"", "\"28\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"24\"", "\"24\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"24\"", "\"24\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"12\"", "\"12\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ConvolutionLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"8\"", "\"8\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"8\"", "\"8\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"6\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["PoolingLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"array\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"20\"", 
                    "\"4\"", "\"4\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "6"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"7\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["FlattenLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"320\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "7"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"8\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"120\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "8"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"9\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["Ramp", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"120\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "9"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"10\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "10"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"11\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "11"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.819606812753633*^9, 3.81968953886506*^9, 
  3.8196896018383393`*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"97029bc6-819d-4176-a14c-24dc2b039194"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"dataV", "[", 
  RowBox[{"[", "8", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"netF", "@", 
  RowBox[{"%", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8196068216650887`*^9, 3.8196068216670904`*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"26907890-46b6-45c3-bd02-c48309fa5169"],

Cell[BoxData[
 RowBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt0EEKgkAYhuEfg/AYdgVbZ3QFW7mcoFZCYAtp1ynUrqGn0dOk0BV0Br53
8Q7fvxuew+2ZPyIze8Xzk7v6UlXufd0vx92Vx7TczTP5t2yzz5nCaBoL2iD8
8VcOf/yVwx9/5fDHXzn88VcOf/yVW8O/bZps6Pvs23UnX9u3K/7+bfEPP/zx
xx9//PHHH3/88ccff9//Ugl//JXDH3/l8A/Tn7bvB9kMD28=
     "], {{0, 32}, {32, 0}}, {0., 1.},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> False],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{32, 32},
   PlotRange->{{0, 32}, {0, 32}}], "\[Rule]", "\<\"Rect\"\>"}]], "Output",
 CellChangeTimes->{3.819606822416737*^9, 3.819689607320063*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"46bcd23b-80ae-4d9c-bb42-0a98e4c89c34"],

Cell[BoxData["\<\"Rect\"\>"], "Output",
 CellChangeTimes->{3.819606822416737*^9, 3.8196896073290625`*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"b623ac44-33d3-4379-bd00-c3c313465bd2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"dataV", "[", 
  RowBox[{"[", "8", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"netF", "[", 
  RowBox[{
   RowBox[{"%", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<Probabilities\>\""}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.819606828191514*^9, 3.8196068281965294`*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"d3bddf20-6af2-4d08-b1af-3e2049383830"],

Cell[BoxData[
 RowBox[{
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt0EEKgkAYhuEfg/AYdgVbZ3QFW7mcoFZCYAtp1ynUrqGn0dOk0BV0Br53
8Q7fvxuew+2ZPyIze8Xzk7v6UlXufd0vx92Vx7TczTP5t2yzz5nCaBoL2iD8
8VcOf/yVwx9/5fDHXzn88VcOf/yVW8O/bZps6Pvs23UnX9u3K/7+bfEPP/zx
xx9//PHHH3/88ccff9//Ugl//JXDH3/l8A/Tn7bvB9kMD28=
     "], {{0, 32}, {32, 0}}, {0., 1.},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> False],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{32, 32},
   PlotRange->{{0, 32}, {0, 32}}], "\[Rule]", "\<\"Rect\"\>"}]], "Output",
 CellChangeTimes->{3.8196068291680737`*^9, 3.8196896113433447`*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"5d7799a2-d050-4435-b22d-df2506cc4879"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Rect\"\>", "\[Rule]", "1.`"}], ",", 
   RowBox[{"\<\"Disk\"\>", "\[Rule]", "1.7373165757216486`*^-22"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8196068291680737`*^9, 3.8196896113533497`*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"28600470-b78b-4351-b575-2a6d0c968ffb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"netF", ",", "dataT", ",", "\"\<WorstClassifiedExamples\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8196068385254555`*^9, 3.8196068385274544`*^9}, 
   3.8196896367886057`*^9},
 CellLabel->"In[83]:=",ExpressionUUID->"01d93fb6-e070-41e1-99e0-0fff4a9b4308"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1t0uA0EUB/ANiXgMXoEmEolMGkIEIdsQ32yFqyaSuhB3HooQQoJSHy2l
lH636kH0nJjNRlxsWt2znTkX/+3ZabsXvzk7M73hbXOrwzCMne76xbR2g9Go
tRfqgptNK9LfF+mslz0/gdow9gXHH8llFzgehP3ZX+ewP/vrHPZnf53D/ur4
JxOTolhYFoX8kriOjYhqZV3kc4vi/GwIaxi/vAja4/d346JUXMH/Zj/myS3a
xV9aOT2hPjwIiK/aRkP16cmgqH2G8bnpFxPHqG386A99C71dKa81be5mLlR/
L9z6Z95m0b5V5n/Vv9coFePW37m2e+XvXN+onSj9oQ9v42PYh173v9y7qZ2o
/VNP0yT9L89R1E6U/pD3zJw9F8dHA7g/etH/ct6pnaj9nWn1XhC7Gla655v1
dybxMGHPBbwXjfZ5/GYUz7TwTNXPnP/pLwOGsEbBJ+Q5NYPzIm3LpVX83WNy
yl5PXtMh/J7aQAV/Dvu3Y9if/XUO+7O/zmF/9tc57M/+Oof9/enP8T7fqPU2
VQ==
       "], {{0, 32}, {32, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> False],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{32, 32},
     PlotRange->{{0, 32}, {0, 32}}], "\[Rule]", "\<\"Disk\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1ctqwkAYhuHBQvEy2lvQCxh6C2o9oZRY6iptIGKLO++xnk9ttdRNPeBx
qzOYIRtFRUyG/1u85hdEMs9o5j5nRfIBxlghuH2JGB8Ptm2UorfizYthhkPm
zXa82yVmxsoc+aNWM4WuEPzhTzn4w59yOvp3Oxk1j/5N3m6lea36yBfzgpwr
n1E+nVhyrlZivP9jyM826gnP711Xf2HpzPOZrWzXq3dlfsws9kLMzUbS8zXp
5D/o5+RV/IZPNXfP49Gr+r94vSad/H8Hzxfxn4zf4H9GvW5WXsVzY7Usnu0/
/MvL76nX4p6vSSd/d+5nkbMXh84C54z2i7nu/vv6/npS++Kc1345Zyn46xj8
4U85+MOfcvCHP+XgD3/KwR/+lIM//CkHf/hTDv7wpxz8/emPrt8GF7NWpA==

       "], {{0, 32}, {32, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> False],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{32, 32},
     PlotRange->{{0, 32}, {0, 32}}], "\[Rule]", "\<\"Disk\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt19tKAkEYwPGlIHqMeoW67+scFFGtnaFiKwtKsDQw73qytDxFdvB8irSD
VmSQlpF2lTtbMkEbRe7aNt/FX0aFZf2NzMw2zxv5pTqO48yN5RdesHSYTIJV
1yC+0QuG1hZDfXnY9JY45rgtwP5GifgUpkLoj/4s95/8U8lZiITHIB6bhEx6
EXzHQxCNjMPN9TIcHQ6S7y7OBQgFdRCLTtT8frXqf5KYJsbiOHu7AgfeAWL7
UrKCbbsN/L7hb40Lj2ZwObvJfCRPZ8hcvV8X/eX7jflXc+F0dEEwwH+YX/SX
ov+f1TKXG19l9JX1Cv2l6PVcaf/cvRH2PH1kXUJ/KXoPVdo/n1sDj7sX/anO
UnOVc4vS/nfZVfDu90M4NIr+n0SfW6plXipugt0GEPCPqHoW0qI/7fNU2ADH
bic5t/zUvPhsgR17OzFPXy6Qz8TrqvlbtOhPR58V6T2C3kMf8uvgdvWQOaLP
rvTzWq3uX+v+Wg/90Z/l0B/9WQ790Z/l0B/9WQ790Z/l0B/9WQ790Z/l0B/9
WU7OH1O/V8yVS1I=
       "], {{0, 32}, {32, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> False],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{32, 32},
     PlotRange->{{0, 32}, {0, 32}}], "\[Rule]", "\<\"Disk\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1ktKA0EQBuBGQTyGXkFRFJVChbhxIQkIvp2IrgKBuBB3XspoNHFhxLiI
oCiKeT88iKnGgXIxYhiTnkn/i3+6pmlq8dE0NR5PRo+GlFLHo51P1DlZTKWc
09gI/xw6icmJxHCnHPsO10qdERKMlD42kD4E/vC3OfCHv82BP/xtDvzhb3Pg
D3+bA//B9H9/W9drtbJNz09rVClv/dhH/PuXS5v0+hLTa6vp0E1ugRr1Pfps
H1D6fIqajX3PWp6XfUx7hMHfvcPtVpwylzN/NveqZR/Z34Z0689GhfsI1ao7
vsy9atnftE0Q/fndyGXnfd/5394lt79pmyD681txlZntmT/3z17Pwd/jPBvl
b5eoXtvtiT/nLr+s+5u2CaK/nFXY7SI9/S/+bh/bZiE/8yfP9o/FVT3bsyHP
MN2Yu+dlH9MeYfKX4fvKcyOv0pPfkYfCit6T+/K8aYNB8EfgH8bAH/42B/7w
tznwh7/N8fJH+p8vLR1A4Q==
       "], {{0, 32}, {32, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> False],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{32, 32},
     PlotRange->{{0, 32}, {0, 32}}], "\[Rule]", "\<\"Disk\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1tlKw0AYhuFBQbwMvQW9gB8XUKxr6lZRSooWlaBSD8Qzr81WrHbfF61L
XVv3O7AzKAyFWgIhGuc7eJM/B4HwJJOk17et+TsYY7vdjY2m7w0EAvq+u4sf
rOlGf5/R2Rh7vuIzYweE/kblkgfZEPzhr3Lwh7/KwR/+Kgd/+Ksc/OGvcvCH
v8rBH/4qB3/4qxz84a9y8Ie/VV1UViifm6NiYYGe6pt0Eh6lRHySPt53KHg4
SJHTMTGHgkMUjbio9rhOseg4pVMzdFZeEueViovwN5Hs9va6RUehYWHbbN5u
rtc2xD6VnIa/iW6qPkompiiT1kybt5rldQT/n3u491M8NiHeIVb5X116KZed
pUJ+Hv5tql7rwj6bcVvmXzlftu1b4HR//v7nTryXZ4PCxyNiPZg1l9eRndfv
dP/me/H93Mr/NvK/kDzf3a6KPf92/NY1/yd/JwZ/+KtcK39kf5+AOUfs
       "], {{0, 32}, {32, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> False],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{32, 32},
     PlotRange->{{0, 32}, {0, 32}}], "\[Rule]", "\<\"Disk\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt1k1OwlAUhuEbTIjL0C3IAk7cQh0hArmAjZoaDQ4MM7bJPxT8AaOBHdCv
oaSTJlULIZxv8MJtAk3znOa257Unx80ZY15Ogw/Hvl42m7Z1lcfBrfUKF95J
sDzbhLUxbWGHUbdTZHuI/vTXnAb/XvdaRsOK9HslGfRv5G3WkPGoGh77EyvD
QXn7O/r/3xrfMF3M72Xq10Lr1fJZPt7dxDXm8/P9GM4G58D/MR/6py9+b6cx
T1rD/mvxILNpnf6/KHJLe8+nWeO8u9yX6E//rML+gz0jq/0Hc9z1NR+TfzwY
zj/v/vz8xSz5/M2m+PsMwkyiY8yA7596oz/9NUd/+muO/vTXHP3przn6019z
9Ke/5uhPf83Rn/6aoz/9NZfkz/bfGnn5YJE=
       "], {{0, 32}, {32, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> False],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{32, 32},
     PlotRange->{{0, 32}, {0, 32}}], "\[Rule]", "\<\"Disk\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt17EJg0AYhuEfA8ExzApxAHGFS5XC4oRYCYIWwS5rRkjATKIGV8hp+N7i
vfuufbo7lY2rIjPr4vlw/p63re8vx+Vx83V6rg/zTNaWbfbIaB8NzysFCH/8
lcNfx//9Kr73Z/Q/2Vtb4r+9J/7/Ff74448//vjjjz/+/H/x1wl//JXDH3/l
8MdfOfzxVw5//JXDH3/l8MdfOfz36U/hmwC6Ilhs
       "], {{0, 32}, {32, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> False],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{32, 32},
     PlotRange->{{0, 32}, {0, 32}}], "\[Rule]", "\<\"Rect\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt0LEJwlAUheGLAXEMs4IO8HACISmC5RO0kIAQi2DnhqZLdARdwgTcIJBc
OH/xP84r75cer9l5YWa3Vf9ksd5VVbzny+FziuV2Uyb9XP8bttkjkI/erwNN
EP74K4c//srhj79y+OOvHP74K4c//srhj79ynv2/n0tonvvQtcWoPfcd+M9/
C/4+wx9//PHHH39v/grhj79y+OOvHP74K4e/T3+avh94AVDC
       "], {{0, 32}, {32, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> False],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{32, 32},
     PlotRange->{{0, 32}, {0, 32}}], "\[Rule]", "\<\"Rect\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJzt0DEKwkAQRuFBIeQYegVzgJALWMTKcgOmCgQ2haTLCbXW05gNHiHsLvyv
eMtMt/Odu7HtD2Y2levTumfjvZtvRVgebqguw3EdT//CbLbUlEffz50ihD/+
yuXsH/7xfl239ppT34R/+rvwzyf809+IP/7444+/Xvjjrxz++CuHP/7K4Y+/
cvjjrxz++CuHP/7K4Y+/cvjjrxz+efpT/H7QEfXP
       "], {{0, 32}, {32, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> False],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{32, 32},
     PlotRange->{{0, 32}, {0, 32}}], "\[Rule]", "\<\"Rect\"\>"}], ",", 
   RowBox[{
    GraphicsBox[
     TagBox[RasterBox[CompressedData["
1:eJztl1tLAkEYhpeC6GfUX6iLoqAPIboIOq2dqWiNuihB0iC6619lGVnSAYo8
n0tL7SqNTnafO0SMoKCY627zXjzLO7Asu898M/tNt8Umb7RJkuToLF1kZddk
tyt75g51sK5Ye3us7aXY9YOaJWmfgD5IJhaABsA//IsM/MO/yMA//IsM/MN/
IyTi84y75CIFA1MUj81R5nG1LMeis7/3tPp9jeqfd3hxPkzhkJkK+S1yHvSR
zztOX8WdmrLnzMTm5qVgpWhkhj0znVqG/wrwtX3sGiS/b4I+3rfrdl4tHzr7
2TOLnw6KhKfZetF6LvTs/+pyhNV5/nnzz5xXy6duYuvi7dUmtH++5vn6bLZ/
PoeCMlsLD+kV4fzz366lcz7fXI+y/egptwb/8K8p2H/08/9tpM+sN7tPhijg
nxT+/8vD9/yuo4Gm9p9a1rxR/Feai9T9UtkZqpE+s1U9vxH91zIvai2r42xG
Ie/tGDvf5rIWXXj+r/6NDvzDv8jAP/yLDPzDv8jAP/yLDPzr0z/Qnm8fNjt6

       "], {{0, 32}, {32, 0}}, {0., 1.},
       ColorFunction->RGBColor],
      BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> False],
      Selectable->False],
     DefaultBaseStyle->"ImageGraphics",
     ImageSizeRaw->{32, 32},
     PlotRange->{{0, 32}, {0, 32}}], "\[Rule]", "\<\"Disk\"\>"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8196068495940266`*^9, {3.8196896160057945`*^9, 3.8196896380912685`*^9}},
 CellLabel->"Out[83]=",ExpressionUUID->"ade87099-e6a2-4fa6-a848-74b1d9fcbaf8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"netF", ",", "dataT", ",", "\"\<MisclassifiedExamples\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8196068601346064`*^9, 3.8196068601366205`*^9}, {
  3.8196896307749376`*^9, 3.8196896318870764`*^9}},
 CellLabel->"In[82]:=",ExpressionUUID->"d58654c5-ba36-4708-a99a-0793bea61419"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{
  3.8196068609880505`*^9, {3.8196896225263777`*^9, 3.8196896331454716`*^9}},
 CellLabel->"Out[82]=",ExpressionUUID->"d8d3723a-2d74-4313-bc8f-5971822685c0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["predict the next character (RNN)", "Subsection",
 CellChangeTimes->{{3.8196069411672564`*^9, 3.819606964229904*^9}, {
  3.8196072474332237`*^9, 
  3.8196072478197165`*^9}},ExpressionUUID->"60d10217-fa4c-4694-826d-\
e9aca04b2461"],

Cell[CellGroupData[{

Cell["1\tprepare datasets", "Subsubsection",
 CellChangeTimes->{{3.819607003663533*^9, 
  3.8196070076639924`*^9}},ExpressionUUID->"0a580a50-d54b-4d0f-9ff4-\
45e90bda74c6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"seq", "=", 
  RowBox[{"StringJoin", "@", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{"\"\<abcd\>\"", "&"}], ",", "6"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8196070327922525`*^9, 3.8196070327942533`*^9}},
 CellLabel->
  "In[338]:=",ExpressionUUID->"c9eeeb13-8bdd-423f-9303-567c36b64dd2"],

Cell[BoxData["\<\"abcdabcdabcdabcdabcdabcd\"\>"], "Output",
 CellChangeTimes->{3.8196070336289124`*^9},
 CellLabel->
  "Out[338]=",ExpressionUUID->"4fc7de5f-5740-4f4c-b6ea-2b00b3374b83"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"#", ",", 
     RowBox[{"#", "+", 
      RowBox[{"RandomInteger", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "5"}], "}"}], "]"}]}]}], "}"}], "&"}], "@", 
  RowBox[{"RandomInteger", "[", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{
      RowBox[{"StringLength", "@", "seq"}], "-", "5"}]}], "}"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.819607040102861*^9, 3.8196070401048627`*^9}},
 CellLabel->
  "In[339]:=",ExpressionUUID->"e3655a18-acd7-44f3-9438-067e6019257a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"19", ",", "20"}], "}"}]], "Output",
 CellChangeTimes->{3.8196070409150515`*^9},
 CellLabel->
  "Out[339]=",ExpressionUUID->"a1084f89-7a26-4485-8a33-96438abfb075"]
}, Closed]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Batch", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"StringDrop", "[", 
          RowBox[{"#", ",", 
           RowBox[{"-", "1"}]}], "]"}], "\[Rule]", 
         RowBox[{"StringTake", "[", 
          RowBox[{"#", ",", 
           RowBox[{"-", "1"}]}], "]"}]}], ")"}], "&"}], "@", 
      RowBox[{"(", 
       RowBox[{"StringTake", "[", 
        RowBox[{"seq", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"#", ",", 
             RowBox[{"#", "+", 
              RowBox[{"RandomInteger", "[", 
               RowBox[{"{", 
                RowBox[{"1", ",", "5"}], "}"}], "]"}]}]}], "}"}], "&"}], "@", 
          RowBox[{"RandomInteger", "[", 
           RowBox[{"{", 
            RowBox[{"1", ",", 
             RowBox[{
              RowBox[{"StringLength", "@", "seq"}], "-", "5"}]}], "}"}], 
           "]"}]}]}], "]"}], ")"}]}], ")"}], "&"}], "/@", 
   RowBox[{"Range", "@", "n"}]}]}]], "Input",
 CellChangeTimes->{{3.8196070147081976`*^9, 3.819607025250266*^9}},
 CellLabel->
  "In[341]:=",ExpressionUUID->"47311dae-aa96-4aed-884d-ec75531ae183"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataT", "=", 
   RowBox[{"Batch", "@", "100"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataV", "=", 
   RowBox[{"Batch", "@", "10"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8196070618822045`*^9, 3.8196070820913143`*^9}},
 CellLabel->
  "In[345]:=",ExpressionUUID->"cad23110-dace-424c-91fa-e0b38311a8f4"]
}, Closed]],

Cell[CellGroupData[{

Cell["2\tsetup a network", "Subsubsection",
 CellChangeTimes->{{3.8196071413811493`*^9, 
  3.8196071452286477`*^9}},ExpressionUUID->"f87588f3-a0ec-4641-9953-\
1ef706fc7fcb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"net", "=", 
  RowBox[{"NetInitialize", "@", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"UnitVectorLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"LongShortTermMemoryLayer", "[", "6", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"SequenceLastLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"LinearLayer", "[", "4", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"SoftmaxLayer", "[", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"NetEncoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Characters\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<c\>\"", ",", "\"\<d\>\""}],
           "}"}]}], "}"}], "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<Output\>\"", "\[Rule]", 
      RowBox[{"NetDecoder", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Class\>\"", ",", 
         RowBox[{"{", 
          RowBox[{
          "\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<c\>\"", ",", "\"\<d\>\""}],
           "}"}]}], "}"}], "]"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8196070871851335`*^9, 
  3.8196071115569453`*^9}},ExpressionUUID->"780dd164-e705-4722-9596-\
73cb113ab76a"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"string\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["5", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "UnitVector", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["ClassCount" -> 4, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[889043073]}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[889043073]}, 
                    NeuralNetworks`IndexIntegerT[4]]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[889043073], 4}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "LongShortTermMemory", "Arrays" -> 
                    Association[
                    "InputGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{6, 4}], 
                    "InputGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{6, 6}], 
                    "InputGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{6}], 
                    "OutputGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{6, 4}], 
                    "OutputGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{6, 6}], 
                    "OutputGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{6}], 
                    "ForgetGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{6, 4}], 
                    "ForgetGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{6, 6}], 
                    "ForgetGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{6}], 
                    "MemoryGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{6, 4}], 
                    "MemoryGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{6, 6}], 
                    "MemoryGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{6}]], "Parameters" -> 
                    Association[
                    "OutputSize" -> 6, "Dropout" -> 
                    NeuralNetworks`ValidatedParameter[None], "$InputSize" -> 
                    4, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[889043073], 
                    "$CellStateConnectedQ" -> False], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[889043073], 4}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[889043073], 6}, 
                    NeuralNetworks`RealT]], "States" -> 
                    Association[
                    "State" -> 
                    NeuralNetworks`TensorT[{6}, NeuralNetworks`RealT], 
                    "CellState" -> 
                    NeuralNetworks`TensorT[{6}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "SequenceLast", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[889043073], 6}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{6}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{4, 6}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{4}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {4}, "$OutputSize" -> 4, 
                    "$InputSize" -> 6, "$InputDimensions" -> {6}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{6}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> Association["Form" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[889043073]}, 
                    NeuralNetworks`IndexIntegerT[4]], "Type" -> "Characters", 
                    "Encoding" -> NeuralNetworks`ValidatedParameter[
                    MXNetLink`CharacterEncodingData[
                    1, RawArray["UnsignedInteger8",{128, 0, 0, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 1, 2, 3, 4, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128}], RawArray["UnsignedInteger8",{97, 98, 99, 100}], 
                    4, {"a", "b", "c", "d"}]], "OutputForm" -> "Index", 
                    "IgnoreCase" -> False, "Count" -> 4, "TargetLength" -> 
                    All, "$TargetLength" -> 
                    NeuralNetworks`LengthVar[335771693], "$Padding" -> 
                    Automatic, "$Version" -> "12.0.11"]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {"\"a\"", "\"b\"", "\"c\"", "\"d\""}, 
                    "InputDepth" -> 1, "Dimensions" -> 4, "$Rank" -> 0, 
                    "$Version" -> "12.0.11"]], "InteriorStates" -> 
                    Association[{2, "State"} -> 
                    NeuralNetworks`NetPath["Nodes", "2", "States", "State"], {
                    2, "CellState"} -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "States", "CellState"]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"string\""}, {
                    TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], "\" \"", 
                    TemplateBox[{"\"indices\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"range\"",
                     "\":\"", "\" \"", 
                    TemplateBox[{"1", "\"..\"", "4"}, "RowDefault"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["UnitVectorLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"4\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LongShortTermMemoryLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"6\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SequenceLastLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"6\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8196070881636252`*^9},
 CellLabel->
  "Out[347]=",ExpressionUUID->"7da5a5e0-f92b-4cda-9187-3c7b8c696be9"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"net", "[", 
  RowBox[{"\"\<abcd\>\"", ",", "\"\<Probabilities\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8196070950963955`*^9, 3.8196070950973954`*^9}},
 CellLabel->
  "In[348]:=",ExpressionUUID->"d44eb5e0-83aa-4f58-b0e5-673813bef60a"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"a\"\>", "\[Rule]", "0.20314353704452515`"}], ",", 
   RowBox[{"\<\"b\"\>", "\[Rule]", "0.2378501296043396`"}], ",", 
   RowBox[{"\<\"c\"\>", "\[Rule]", "0.3101342022418976`"}], ",", 
   RowBox[{"\<\"d\"\>", "\[Rule]", "0.24887213110923767`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8196070956948953`*^9},
 CellLabel->
  "Out[348]=",ExpressionUUID->"78795c3d-bc6f-4d06-85a0-becb887a2f14"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["3\ttrain and validate", "Subsubsection",
 CellChangeTimes->{{3.819607160053664*^9, 
  3.8196071664610815`*^9}},ExpressionUUID->"127551d9-c4fa-4cdb-8619-\
7eda5e095fbe"],

Cell[BoxData[
 RowBox[{
  RowBox[{"netT", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"net", ",", "dataT", ",", "All", ",", 
     RowBox[{"ValidationSet", "\[Rule]", "dataV"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.819607099773941*^9, 3.819607099780814*^9}},
 CellLabel->
  "In[349]:=",ExpressionUUID->"78b43882-cec0-44c1-9fd1-deccadb620e7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"netT", "[", "\"\<LossPlot\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"netT", "[", "\"\<RoundMeasurements\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"netF", "=", 
  RowBox[{"netT", "[", "\"\<TrainedNet\>\"", "]"}]}]}], "Input",
 CellChangeTimes->{{3.8196071731468983`*^9, 3.8196071731481686`*^9}},
 CellLabel->
  "In[350]:=",ExpressionUUID->"34bcfb6e-1b89-424b-86f2-dc3be008cefd"],

Cell[BoxData[
 TemplateBox[{GridBox[{{"", 
      ItemBox["\"rounds\"", DefaultBaseStyle -> "LabeledLabel"]}, {
      RotationBox[
       ItemBox["\"loss\"", DefaultBaseStyle -> "LabeledLabel"], BoxRotation -> 
       1.5708], 
      GraphicsBox[{
        AbsoluteThickness[1.25], {{
          Hue[0.083, 1., 1.], 
          LineBox[CompressedData["
1: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
GJHCBPR/APNJbw==
           "]]}, {}}, {{
          Hue[0.59, 0.7, 0.75], 
          LineBox[CompressedData["
1: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
ntob1w==
           "]]}, {}}}, Prolog -> {{
          InsetBox[
           FormBox["500", TraditionalForm], 
           Offset[{-2, -2}, {500., 0.44100000000000006`}], {1., 1.}], 
          InsetBox[
           FormBox["1000", TraditionalForm], 
           Offset[{-2, -2}, {1000., 0.44100000000000006`}], {1., 1.}], 
          InsetBox[
           FormBox["1500", TraditionalForm], 
           Offset[{-2, -2}, {1500., 0.44100000000000006`}], {1., 1.}], 
          InsetBox[
           FormBox["2000", TraditionalForm], 
           Offset[{-2, -2}, {2000., 0.44100000000000006`}], {1., 1.}], 
          InsetBox[
           FormBox["2500", TraditionalForm], 
           Offset[{-2, -2}, {2500., 0.44100000000000006`}], {1., 1.}], 
          InsetBox[
           FormBox["3000", TraditionalForm], 
           Offset[{-2, -2}, {3000., 0.44100000000000006`}], {1., 1.}]}, {
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-3\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -3.}], {-1, -1.}], 
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-2\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -2.}], {-1, -1.}], 
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-1\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -1.}], {-1, -1.}], 
          InsetBox[
           FormBox["\"1\"", TraditionalForm], 
           Offset[{3, 0}, {0, 0.}], {-1, -1.}]}}, 
       PlotRange -> {{0, 1927.125}, {-3.741, 0.44100000000000006`}}, 
       ImageSize -> {302, 182.}, 
       GridLines -> {{500., 1000., 1500., 2000., 2500., 3000.}, {{-4., 
           GrayLevel[0.3001]}, {-3., 
           GrayLevel[0.3001]}, {-2., 
           GrayLevel[0.3001]}, {-1., 
           GrayLevel[0.3001]}, {0., 
           GrayLevel[0.3001]}}}, Frame -> True, Axes -> None, AspectRatio -> 
       Full, BaseStyle -> {
        FontFamily -> "Verdana", FontSize -> 8, FontColor -> GrayLevel[0.5], 
         ScriptSizeMultipliers -> 0.2, ScriptMinSize -> 6}, PlotRangePadding -> 
       None, PlotRangeClipping -> True, Background -> GrayLevel[1], 
       FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, FrameTicks -> None]}},
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    GridBoxSpacings -> {"Columns" -> {{0.5}}}, 
    BaseStyle -> {
     FontFamily -> "Verdana", FontSize -> 8, FontColor -> GrayLevel[0.4]}],
   FormBox[
    TemplateBox[{"\"validation\"", "\"training\""}, "LineLegend", 
     DisplayFunction -> (FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.59, 0.7, 0.75]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.59, 0.7, 0.75]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.083, 1., 1.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.083, 1., 1.]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}],
                "Grid"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
           "Grid"], Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
        Background -> Automatic, StripOnInput -> False], TraditionalForm]& ), 
     InterpretationFunction :> (RowBox[{"LineLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.59, 0.7, 0.75], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> Hue[0.59, 0.7, 0.5], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 StyleBox[
                  RowBox[{"Hue", "[", 
                    RowBox[{"0.59`", ",", "0.7`", ",", "0.75`"}], "]"}], 
                  NumberMarks -> False]], Appearance -> None, BaseStyle -> {},
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.59, 0.7, 0.75]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Hue[0.59, 0.7, 0.75], Editable -> False, Selectable -> False], 
              ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.083, 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> Hue[0.083, 1., 0.6666666666666667], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 StyleBox[
                  RowBox[{"Hue", "[", 
                    RowBox[{"0.083`", ",", "1.`", ",", "1.`"}], "]"}], 
                  NumberMarks -> False]], Appearance -> None, BaseStyle -> {},
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.083, 1., 1.]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Hue[0.083, 1., 1.], Editable -> False, Selectable -> False]}], 
            "}"}], ",", 
          RowBox[{"{", 
            RowBox[{#, ",", #2}], "}"}]}], "]"}]& ), Editable -> True], 
    TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.819607173837862*^9},
 CellLabel->
  "Out[350]=",ExpressionUUID->"385c2609-5f2d-4d60-a1c3-9d99d24e49ee"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Loss\"\>", "\[Rule]", "0.0005427392950423382`"}], ",", 
   RowBox[{"\<\"ErrorRate\"\>", "\[Rule]", "0.`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8196071738564043`*^9},
 CellLabel->
  "Out[351]=",ExpressionUUID->"128d566e-ecbe-41dc-8639-2f36fa92cd90"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"string\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["5", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "UnitVector", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association["ClassCount" -> 4, "$Dimensions" -> {
                    NeuralNetworks`LengthVar[889043073]}], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[889043073]}, 
                    NeuralNetworks`IndexIntegerT[4]]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[889043073], 4}, 
                    NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "LongShortTermMemory", "Arrays" -> 
                    Association[
                    "InputGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{6, 4}], 
                    "InputGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{6, 6}], 
                    "InputGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{6}], 
                    "OutputGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{6, 4}], 
                    "OutputGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{6, 6}], 
                    "OutputGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{6}], 
                    "ForgetGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{6, 4}], 
                    "ForgetGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{6, 6}], 
                    "ForgetGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{6}], 
                    "MemoryGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{6, 4}], 
                    "MemoryGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{6, 6}], 
                    "MemoryGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{6}]], "Parameters" -> 
                    Association[
                    "OutputSize" -> 6, "Dropout" -> 
                    NeuralNetworks`ValidatedParameter[None], "$InputSize" -> 
                    4, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[889043073], 
                    "$CellStateConnectedQ" -> False], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[889043073], 4}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[889043073], 6}, 
                    NeuralNetworks`RealT]], "States" -> 
                    Association[
                    "State" -> 
                    NeuralNetworks`TensorT[{6}, NeuralNetworks`RealT], 
                    "CellState" -> 
                    NeuralNetworks`TensorT[{6}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "SequenceLast", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[889043073], 6}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{6}, NeuralNetworks`RealT]]], "4" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{4, 6}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{4}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {4}, "$OutputSize" -> 4, 
                    "$InputSize" -> 6, "$InputDimensions" -> {6}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{6}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]], "5" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "3", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "4", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> Association["Form" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[889043073]}, 
                    NeuralNetworks`IndexIntegerT[4]], "Type" -> "Characters", 
                    "Encoding" -> NeuralNetworks`ValidatedParameter[
                    MXNetLink`CharacterEncodingData[
                    1, RawArray["UnsignedInteger8",{128, 0, 0, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 1, 2, 3, 4, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 
                    128}], RawArray["UnsignedInteger8",{97, 98, 99, 100}], 
                    4, {"a", "b", "c", "d"}]], "OutputForm" -> "Index", 
                    "IgnoreCase" -> False, "Count" -> 4, "TargetLength" -> 
                    All, "$TargetLength" -> 
                    NeuralNetworks`LengthVar[335771693], "$Padding" -> 
                    Automatic, "$Version" -> "12.0.11"]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    Association[
                    "Form" -> NeuralNetworks`TensorT[{4}, 
                    NeuralNetworks`RealT], "Type" -> "Class", 
                    "Labels" -> {"\"a\"", "\"b\"", "\"c\"", "\"d\""}, 
                    "InputDepth" -> 1, "Dimensions" -> 4, "$Rank" -> 0, 
                    "$Version" -> "12.0.11"]], "InteriorStates" -> 
                    Association[{2, "State"} -> 
                    NeuralNetworks`NetPath["Nodes", "2", "States", "State"], {
                    2, "CellState"} -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2", "States", "CellState"]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"string\""}, {
                    TemplateBox[{"\"vector of \"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], "\" \"", 
                    TemplateBox[{"\"indices\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"range\"",
                     "\":\"", "\" \"", 
                    TemplateBox[{"1", "\"..\"", "4"}, "RowDefault"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["UnitVectorLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"4\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LongShortTermMemoryLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"6\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SequenceLastLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"6\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"4\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "4"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"5\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "5"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8196071738817744`*^9},
 CellLabel->
  "Out[352]=",ExpressionUUID->"76950584-d6e9-4d7d-8753-3b31b36d24f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"dataV", "[", 
  RowBox[{"[", "n", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"netF", "@", 
  RowBox[{"dataV", "[", 
   RowBox[{"[", 
    RowBox[{"n", ",", "1"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8196071798378134`*^9, 3.819607179839813*^9}},
 CellLabel->
  "In[353]:=",ExpressionUUID->"b4cdd6b6-26cc-496b-9651-af1340ba990a"],

Cell[BoxData[
 RowBox[{"\<\"d\"\>", "\[Rule]", "\<\"a\"\>"}]], "Output",
 CellChangeTimes->{3.8196071805098867`*^9},
 CellLabel->
  "Out[354]=",ExpressionUUID->"bcb05f7f-332d-43c5-97df-6db944a94529"],

Cell[BoxData["\<\"a\"\>"], "Output",
 CellChangeTimes->{3.8196071805173807`*^9},
 CellLabel->
  "Out[355]=",ExpressionUUID->"66602ab1-2ae1-4446-8a3d-0058c6ab14a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Nest", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"#", "<>", 
     RowBox[{"netF", "[", "#", "]"}]}], "&"}], ",", 
   RowBox[{"{", "\"\<ab\>\"", "}"}], ",", "12"}], "]"}]], "Input",
 CellChangeTimes->{{3.8196071844443913`*^9, 3.8196071844483824`*^9}},
 CellLabel->
  "In[356]:=",ExpressionUUID->"7386649f-7cca-4144-a323-f5e3ae2ee22a"],

Cell[BoxData["\<\"abcdabcdabcdab\"\>"], "Output",
 CellChangeTimes->{3.819607185097207*^9},
 CellLabel->
  "Out[356]=",ExpressionUUID->"d26ce5b0-97a5-4fc5-9660-ea9a276bd187"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.819607218504544*^9, 
  3.819607220008402*^9}},ExpressionUUID->"09380cd1-4f11-4a02-bd07-\
d24ffbac106f"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.819607234850656*^9, 
  3.8196072359178324`*^9}},ExpressionUUID->"151470d6-48df-436f-ad45-\
601b7f2b9818"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["predict the next number of sequence (RNN)", "Subsection",
 CellChangeTimes->{{3.8196072419803495`*^9, 3.8196072602078733`*^9}, {
  3.819607407748062*^9, 
  3.819607410237487*^9}},ExpressionUUID->"57aaa08c-bdb8-4ef9-ad32-\
1ca6a14c081e"],

Cell[CellGroupData[{

Cell["1\tprepare datasets", "Subsubsection",
 CellChangeTimes->{{3.8196072667852545`*^9, 
  3.8196072710561905`*^9}},ExpressionUUID->"2eb5c181-cf1e-4588-aa0e-\
1a09d9a9e308"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"seq", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Mod", "[", 
      RowBox[{"#", ",", "4"}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "@", "20"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Batch", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Most", "@", "#"}], "\[Rule]", 
         RowBox[{"Last", "@", "#"}]}], ")"}], "&"}], "@", 
      RowBox[{"(", 
       RowBox[{"List", "/@", 
        RowBox[{"Take", "[", 
         RowBox[{"seq", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{"#", ",", 
              RowBox[{"#", "+", 
               RowBox[{"RandomInteger", "[", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "5"}], "}"}], "]"}]}]}], "}"}], "&"}], "@", 
           RowBox[{"RandomInteger", "[", 
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{
               RowBox[{"Length", "@", "seq"}], "-", "5"}]}], "}"}], "]"}]}]}],
          "]"}]}], ")"}]}], ")"}], "&"}], "/@", 
   RowBox[{"Range", "@", "n"}]}]}]}], "Input",
 CellChangeTimes->{{3.8196072730506887`*^9, 3.8196072730526876`*^9}},
 CellLabel->
  "In[357]:=",ExpressionUUID->"d4ebaa9d-0d97-4eb3-a9ef-8558ac380985"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Batch", "@", "2"}]], "Input",
 CellChangeTimes->{{3.8196072787781916`*^9, 3.81960727878319*^9}},
 CellLabel->
  "In[359]:=",ExpressionUUID->"159c1d9e-ae89-4fae-81ff-7685b2b46fc1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "2", "}"}], ",", 
      RowBox[{"{", "3", "}"}], ",", 
      RowBox[{"{", "0", "}"}]}], "}"}], "\[Rule]", 
    RowBox[{"{", "1", "}"}]}], ",", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", "3", "}"}], "}"}], "\[Rule]", 
    RowBox[{"{", "0", "}"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.8196072793075757`*^9},
 CellLabel->
  "Out[359]=",ExpressionUUID->"e07de4e7-a068-456e-8cac-11d7a3361d30"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataT", "=", 
   RowBox[{"Batch", "@", "100"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataV", "=", 
   RowBox[{"Batch", "@", "10"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.819607289482142*^9, 3.819607289483142*^9}},
 CellLabel->
  "In[360]:=",ExpressionUUID->"a90d8891-c7b2-4d13-a574-7cbf7da1b467"]
}, Closed]],

Cell[CellGroupData[{

Cell["2\tsetup a network", "Subsubsection",
 CellChangeTimes->{{3.8196073047233706`*^9, 
  3.819607309236726*^9}},ExpressionUUID->"0a994a6e-732a-4360-a24e-\
fd6547a80f90"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"net", "=", 
  RowBox[{"NetInitialize", "@", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"LongShortTermMemoryLayer", "[", "6", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"SequenceLastLayer", "[", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"LinearLayer", "[", "1", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Varying\>\"", ",", "1"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<Output\>\"", "\[Rule]", "1"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.819607310975193*^9, 
  3.819607343972376*^9}},ExpressionUUID->"88080c40-7757-4a0d-a495-\
f9d57566b8fb"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"1\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["3", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "LongShortTermMemory", "Arrays" -> 
                    Association[
                    "InputGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{6, 1}], 
                    "InputGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{6, 6}], 
                    "InputGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{6}], 
                    "OutputGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{6, 1}], 
                    "OutputGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{6, 6}], 
                    "OutputGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{6}], 
                    "ForgetGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{6, 1}], 
                    "ForgetGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{6, 6}], 
                    "ForgetGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{6}], 
                    "MemoryGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{6, 1}], 
                    "MemoryGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{6, 6}], 
                    "MemoryGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{6}]], "Parameters" -> 
                    Association[
                    "OutputSize" -> 6, "Dropout" -> 
                    NeuralNetworks`ValidatedParameter[None], "$InputSize" -> 
                    1, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1397073840], 
                    "$CellStateConnectedQ" -> False], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1397073840], 1}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1397073840], 6}, 
                    NeuralNetworks`RealT]], "States" -> 
                    Association[
                    "State" -> 
                    NeuralNetworks`TensorT[{6}, NeuralNetworks`RealT], 
                    "CellState" -> 
                    NeuralNetworks`TensorT[{6}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "SequenceLast", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1397073840], 6}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{6}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1, 6}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 6, "$InputDimensions" -> {6}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{6}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1397073840], 1}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]], 
                    "InteriorStates" -> 
                    Association[{1, "State"} -> 
                    NeuralNetworks`NetPath["Nodes", "1", "States", "State"], {
                    1, "CellState"} -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "States", "CellState"]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"1\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LongShortTermMemoryLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"6\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SequenceLastLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"6\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8196073130050564`*^9},
 CellLabel->
  "Out[362]=",ExpressionUUID->"2ff5b9df-0e85-4eb1-9b38-29914d5c9afe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"net", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "2", "}"}], ",", 
    RowBox[{"{", "3", "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.819607316764069*^9, 3.8196073167690697`*^9}},
 CellLabel->
  "In[363]:=",ExpressionUUID->"27b6b450-aa13-455e-8aa5-054a7bdffdbe"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"-", "0.24663296341896057`"}], "}"}]], "Output",
 CellChangeTimes->{3.8196073172986436`*^9},
 CellLabel->
  "Out[363]=",ExpressionUUID->"9a276444-6bc3-4666-8793-51dbfce4f4c8"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["3\ttrain and validate", "Subsubsection",
 CellChangeTimes->{{3.8196073279831*^9, 
  3.8196073308504725`*^9}},ExpressionUUID->"c313c2a0-f174-487b-8270-\
92c6b310b73a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"netT", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"net", ",", "dataT", ",", "All", ",", 
     RowBox[{"ValidationSet", "\[Rule]", "dataV"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.819607333124044*^9, 3.819607333133995*^9}},
 CellLabel->
  "In[364]:=",ExpressionUUID->"c5634858-6e7c-457a-9c41-67cb9d8a1c1f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"netT", "[", "\"\<LossPlot\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"netT", "[", "\"\<RoundMeasurements\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"netF", "=", 
  RowBox[{"netT", "[", "\"\<TrainedNet\>\"", "]"}]}]}], "Input",
 CellChangeTimes->{{3.8196073539351683`*^9, 3.819607353937169*^9}},
 CellLabel->
  "In[365]:=",ExpressionUUID->"0afad72a-ba55-413f-a0f6-f43d61e2d01c"],

Cell[BoxData[
 TemplateBox[{GridBox[{{"", 
      ItemBox["\"rounds\"", DefaultBaseStyle -> "LabeledLabel"]}, {
      RotationBox[
       ItemBox["\"loss\"", DefaultBaseStyle -> "LabeledLabel"], BoxRotation -> 
       1.5708], 
      GraphicsBox[{
        AbsoluteThickness[1.25], {{
          Hue[0.083, 1., 1.], 
          LineBox[CompressedData["
1:eJw1l3lczdkfxm8Iw5B9mRJJmRQjWzG4j0TJkCU1kRFppCQxodBCe2nvLtXt
lqWFypIxhdwrIsZUKi1kKWlf716pfuWcX//0Oq/vvd9zzvvzfJ7nczUOueyy
H8FgMPSUGIzh////26ec52PuWMf0KIv/KElRRSfXev7k5Z/pWheXXh84aMuq
YSYMrQzyVqBkfMuOSZer6PNfccxuqnF3ZTlT77DGeGvTDcBOd5fVWW/o540B
9QOF/pwi5njrQqMZy0xxvvPh4Ibqf+n3t+Ltsx1/dGi/YjZvc/EoUzXHp71O
F8sKCun7duJf49Haz0++YA4vC0fsRmtegese9ef0/RbonHDBIKrgGfP7685Y
Qkt5ne1sn6d0v99x7fbXQZ5hPtNoxt0IvzZrBCd1NO0uFdL998HueXRbYdFj
5tBTvcMH9+OI6u708s6H9DwH0Pefra3X2Fzm8GMNJ1usshibf2/2fXq+g5g+
vy7Le0E2s3B4A61DsPKbqfOnzm16XjvcFeXyE/NuML/D/mwHhf9vGU0/Xafn
PwwNtnL1ykYe0yBvaMc4e+Td3KHhaBNJ7/MnSmYXeTmPOsl0GT6wxRE4bn7m
4O3jIyD3c8BRy4r5sT4sQerwC1SOYtqRbTOfHbsiIPc9ipTVqamLO9MF37d7
6Qi7AFttq8TbAnJ/J5jfj0tceuKeYPjjer7HUDu4gHf3UY6A8HCGhn756GiD
PMEwjvj1xxFi4yWa0y4UED4u+Plh5LQ/tz0VDOMZ3+OC/j2Zjw7eLxAQXidw
pIPVKJ1XSPavPoH1SwLN2/1eCQg/V9zcW9Xz7N5rcp77Q+vmTTd7yooEhOdJ
zOS7Wkt9S8j5Yk7ix4eha+bEvhEQvqfgzde+eDuulJzX9RTy6s0/cFhlAsL7
FGqmjTXVDS4XbB8+//a/sDEzjP329FsB4f8XmhZeuzC4v4LcR9cNKrkOWl1L
KwWkHm6I1FrDqmZUkfv9cBrMzl88Iz5WCUh9TiPDjPVr/INqwfBxjBpOQ5kj
LgiKfScg9TqDv7jyvSUu7wXDr/N4egY7w0KtBVtqaP3OolhnqU645gfB8PJu
0lmYxnbIbPo/0Hq6oz/htlP2i4+C4dM2X3DHyvYTyrWRn2h93WFeUtXzYuVn
wnufBwq9WTvcr3ym9fbARKHRmMaJtYS34TmwesN9Ozxqaf3PoUW3yMSxoZbw
nn4e67uFy5burKN6OA+HbwY2sx7WEd6i87DJUSmPVvtC9XEBj9QLX/We/0J4
l1yA1NnTIPnLF6oXT9wIEGu1mdYLhnczyPREjr1S5cuMeqofLygGMir0Vb4S
3sFe0B8/pkDzxFeqJy+wrGuPphV/JZ9f7o30NWkjShY3UH1541f7APUFvg3k
+1e84eGnVneouoHqzRtN6WmHDVY0kvdN9gFOHDCbF9ZI9ecDK/nfr9Y1NpJ6
evnAXHjP4hazierRB5vUb5pFsZtIfTt8wG1ybVPqbKL6vAidLS5zVDc3k3rb
XAT78Gqr16xmqteLeD6W72nR2Ezq/+9FrA9Z3DVpfQvV7yUcONi/oy6mhehh
zSUUyG8KP7S2UD1fwsFFM5+rbGwl+ki7hCSzynvuca1U35eg1sKeNUnUSvQy
0xdWk79czN3SRvXuixe87Uaz49sE0mH9+Pniwz9LV61ua6P690W/WruawcZ2
oieJL0x1XlTGcNtpP/hhLmdCvmpnO+Ft5wfFWxcX1sYO2h9+mHiOHVjO6iC8
3/jB+fqWHzKaOmi/+OMCf66XwrCT8IY/Tt695sIL6KT94w+Gu2b+3OJOwjvL
H5Zz+IY+47poP/lD7Q1LZPxLF+E9JwD5pawq1d1dtL8CsCg5dtno012Ed2gA
4gv1Nipzumi/BUB+1WydWm4X4d0bAP1ch5Cd1V20/wKBtboHbyi6CO+jgbha
tOSPcdO7aT8GYl7yuHHZS7sJ76pANJzePeXJtm7an0EYl9diM82xm/DeHIQR
u/o23PPrpv0aBLmm8rqMpG6i/7+DcM74+m7lh920f4OQfkVa/7K8m/DWDAbv
6f1bIzu6aT8Hw0mrKn9glIjwjgrG35XLHUNVRbS/g6HKr45yXi4ivJVCoNR4
ta7eTET7PQT8A8ne/QdFhLdLCLSuFEQ9OCui/R+CJ+ZNutrhIsL7Ywjefy4p
2nhdRP0gFFkONftnPRQR3r+F4lTV1jLNYhH1h1B0LagxENeJCO+Hobjy9N2T
iQoR9YtQ/OJxM7jrRzHhvegydrhpLGRriKl/XIaJfL678iox4c25jM8ei6eu
NxNTP7mM+geC6nV/iAXDOLeNCcOmiNVvlU+Kqb+Ega3zzXOlr5jwdgtDW9oT
dX2WmPpNGPbPOsCxShcT3vVhqAjM3WX8SEz9JxypHlWDsiIx4b07HNlqtbed
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
iZOoYQ==
           "]]}, {}}, {{
          Hue[0.59, 0.7, 0.75], 
          LineBox[CompressedData["
1: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
6sOwGEst3+9ap0N5/1AM2ct/m8K1WKr/A56VzyM=
           "]]}, {}}}, Prolog -> {{
          InsetBox[
           FormBox["500", TraditionalForm], 
           Offset[{-2, -2}, {500., 1.63}], {1., 1.}], 
          InsetBox[
           FormBox["1000", TraditionalForm], 
           Offset[{-2, -2}, {1000., 1.63}], {1., 1.}], 
          InsetBox[
           FormBox["1500", TraditionalForm], 
           Offset[{-2, -2}, {1500., 1.63}], {1., 1.}], 
          InsetBox[
           FormBox["2000", TraditionalForm], 
           Offset[{-2, -2}, {2000., 1.63}], {1., 1.}], 
          InsetBox[
           FormBox["2500", TraditionalForm], 
           Offset[{-2, -2}, {2500., 1.63}], {1., 1.}], 
          InsetBox[
           FormBox["3000", TraditionalForm], 
           Offset[{-2, -2}, {3000., 1.63}], {1., 1.}]}, {
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-11\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -11.}], {-1, -1.}], 
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-10\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -10.}], {-1, -1.}], 
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-9\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -9.}], {-1, -1.}], 
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-8\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -8.}], {-1, -1.}], 
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-7\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -7.}], {-1, -1.}], 
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-6\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -6.}], {-1, -1.}], 
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-5\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -5.}], {-1, -1.}], 
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-4\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -4.}], {-1, -1.}], 
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-3\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -3.}], {-1, -1.}], 
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-2\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -2.}], {-1, -1.}], 
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-1\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -1.}], {-1, -1.}], 
          InsetBox[
           FormBox["\"1\"", TraditionalForm], 
           Offset[{3, 0}, {0, 0.}], {-1, -1.}], 
          InsetBox[
           FormBox["\"10\"", TraditionalForm], 
           Offset[{3, 0}, {0, 1.}], {-1, -1.}]}}, 
       PlotRange -> {{0, 2067.125}, {-11.63, 1.63}}, ImageSize -> {302, 182.},
        GridLines -> {{500., 1000., 1500., 2000., 2500., 3000.}, {{-12., 
           GrayLevel[0.3001]}, {-11., 
           GrayLevel[0.3001]}, {-10., 
           GrayLevel[0.3001]}, {-9., 
           GrayLevel[0.3001]}, {-8., 
           GrayLevel[0.3001]}, {-7., 
           GrayLevel[0.3001]}, {-6., 
           GrayLevel[0.3001]}, {-5., 
           GrayLevel[0.3001]}, {-4., 
           GrayLevel[0.3001]}, {-3., 
           GrayLevel[0.3001]}, {-2., 
           GrayLevel[0.3001]}, {-1., 
           GrayLevel[0.3001]}, {0., 
           GrayLevel[0.3001]}, {1., 
           GrayLevel[0.3001]}}}, Frame -> True, Axes -> None, AspectRatio -> 
       Full, BaseStyle -> {
        FontFamily -> "Verdana", FontSize -> 8, FontColor -> GrayLevel[0.5], 
         ScriptSizeMultipliers -> 0.2, ScriptMinSize -> 6}, PlotRangePadding -> 
       None, PlotRangeClipping -> True, Background -> GrayLevel[1], 
       FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, FrameTicks -> None]}},
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    GridBoxSpacings -> {"Columns" -> {{0.5}}}, 
    BaseStyle -> {
     FontFamily -> "Verdana", FontSize -> 8, FontColor -> GrayLevel[0.4]}],
   FormBox[
    TemplateBox[{"\"validation\"", "\"training\""}, "LineLegend", 
     DisplayFunction -> (FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.59, 0.7, 0.75]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.59, 0.7, 0.75]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.083, 1., 1.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.083, 1., 1.]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}],
                "Grid"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
           "Grid"], Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
        Background -> Automatic, StripOnInput -> False], TraditionalForm]& ), 
     InterpretationFunction :> (RowBox[{"LineLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.59, 0.7, 0.75], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> Hue[0.59, 0.7, 0.5], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 StyleBox[
                  RowBox[{"Hue", "[", 
                    RowBox[{"0.59`", ",", "0.7`", ",", "0.75`"}], "]"}], 
                  NumberMarks -> False]], Appearance -> None, BaseStyle -> {},
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.59, 0.7, 0.75]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Hue[0.59, 0.7, 0.75], Editable -> False, Selectable -> False], 
              ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.083, 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> Hue[0.083, 1., 0.6666666666666667], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 StyleBox[
                  RowBox[{"Hue", "[", 
                    RowBox[{"0.083`", ",", "1.`", ",", "1.`"}], "]"}], 
                  NumberMarks -> False]], Appearance -> None, BaseStyle -> {},
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.083, 1., 1.]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Hue[0.083, 1., 1.], Editable -> False, Selectable -> False]}], 
            "}"}], ",", 
          RowBox[{"{", 
            RowBox[{#, ",", #2}], "}"}]}], "]"}]& ), Editable -> True], 
    TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.819607368754224*^9},
 CellLabel->
  "Out[365]=",ExpressionUUID->"dc089ee7-95ba-4b04-a884-036d51c73423"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"Loss\"\>", "\[Rule]", "0.006474457723191662`"}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8196073687832766`*^9},
 CellLabel->
  "Out[366]=",ExpressionUUID->"ada4682e-2cbf-46d3-bcb4-f82a6b96adce"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"1\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["3", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "LongShortTermMemory", "Arrays" -> 
                    Association[
                    "InputGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{6, 1}], 
                    "InputGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{6, 6}], 
                    "InputGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{6}], 
                    "OutputGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{6, 1}], 
                    "OutputGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{6, 6}], 
                    "OutputGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{6}], 
                    "ForgetGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{6, 1}], 
                    "ForgetGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{6, 6}], 
                    "ForgetGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{6}], 
                    "MemoryGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{6, 1}], 
                    "MemoryGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{6, 6}], 
                    "MemoryGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{6}]], "Parameters" -> 
                    Association[
                    "OutputSize" -> 6, "Dropout" -> 
                    NeuralNetworks`ValidatedParameter[None], "$InputSize" -> 
                    1, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1397073840], 
                    "$CellStateConnectedQ" -> False], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1397073840], 1}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1397073840], 6}, 
                    NeuralNetworks`RealT]], "States" -> 
                    Association[
                    "State" -> 
                    NeuralNetworks`TensorT[{6}, NeuralNetworks`RealT], 
                    "CellState" -> 
                    NeuralNetworks`TensorT[{6}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "SequenceLast", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1397073840], 6}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{6}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{1, 6}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{1}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {1}, "$OutputSize" -> 1, 
                    "$InputSize" -> 6, "$InputDimensions" -> {6}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{6}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1397073840], 1}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1}, NeuralNetworks`RealT]], 
                    "InteriorStates" -> 
                    Association[{1, "State"} -> 
                    NeuralNetworks`NetPath["Nodes", "1", "States", "State"], {
                    1, "CellState"} -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "States", "CellState"]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"1\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LongShortTermMemoryLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"6\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SequenceLastLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"6\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"1\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.819607368801597*^9},
 CellLabel->
  "Out[367]=",ExpressionUUID->"ef0df458-0576-4cae-9f4f-845d53af2b60"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"dataV", "[", 
  RowBox[{"[", "n", "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"netF", "@", 
  RowBox[{"dataV", "[", 
   RowBox[{"[", 
    RowBox[{"n", ",", "1"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.819607364143283*^9, 3.819607364146285*^9}},
 CellLabel->
  "In[368]:=",ExpressionUUID->"c9cf216e-3b0e-4a7e-b145-5c059182d471"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", "1", "}"}], ",", 
    RowBox[{"{", "2", "}"}], ",", 
    RowBox[{"{", "3", "}"}]}], "}"}], "\[Rule]", 
  RowBox[{"{", "0", "}"}]}]], "Output",
 CellChangeTimes->{3.8196073724552345`*^9},
 CellLabel->
  "Out[369]=",ExpressionUUID->"d0b8ffb8-5b2a-4acb-bcd0-83b67acdc84a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"-", "0.015332937240600586`"}], "}"}]], "Output",
 CellChangeTimes->{3.8196073724612684`*^9},
 CellLabel->
  "Out[370]=",ExpressionUUID->"c1bf3773-2e96-44e0-aa06-5eeab2c77427"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Nest", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Append", "[", 
     RowBox[{"#", ",", 
      RowBox[{"netF", "[", "#", "]"}]}], "]"}], "&"}], ",", 
   RowBox[{"{", 
    RowBox[{"{", "1", "}"}], "}"}], ",", "12"}], "]"}]], "Input",
 CellChangeTimes->{{3.8196073744361553`*^9, 3.819607374441924*^9}},
 CellLabel->
  "In[371]:=",ExpressionUUID->"0269b778-3a72-4864-83f3-f96cef500cd0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "2.406956911087036`", "}"}], ",", 
   RowBox[{"{", "2.382357358932495`", "}"}], ",", 
   RowBox[{"{", "0.09182983636856079`", "}"}], ",", 
   RowBox[{"{", "1.057584285736084`", "}"}], ",", 
   RowBox[{"{", "2.162722587585449`", "}"}], ",", 
   RowBox[{"{", "2.8068861961364746`", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"-", "0.003999590873718262`"}], "}"}], ",", 
   RowBox[{"{", "1.1348161697387695`", "}"}], ",", 
   RowBox[{"{", "2.1944916248321533`", "}"}], ",", 
   RowBox[{"{", "2.704615592956543`", "}"}], ",", 
   RowBox[{"{", "0.024351418018341064`", "}"}], ",", 
   RowBox[{"{", "1.1555964946746826`", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.819607374996456*^9},
 CellLabel->
  "Out[371]=",ExpressionUUID->"f6cac88b-8859-40c1-92d5-34df1f74acbc"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["predict next point of graphic line (RNN)", "Subsection",
 CellChangeTimes->{{3.8196074156897097`*^9, 
  3.81960742969143*^9}},ExpressionUUID->"e8d4573e-a66f-45b7-8e49-\
66d52ee1e40d"],

Cell[CellGroupData[{

Cell["0\tdraw graphics", "Subsubsection",
 CellChangeTimes->{{3.8196074526919107`*^9, 
  3.819607463700675*^9}},ExpressionUUID->"cacf1de2-fed8-4cb8-844b-\
97b878d80dfd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"GT", "=", "GeometricTransformation"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ST", "=", "ScalingTransform"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TT", "=", "TranslationTransform"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RT", "=", "RotationTransform"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.81960746592925*^9, 3.819607465931249*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"6b522aad-cccf-43ed-b840-7f6543158c75"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"RandomGraphic", "[", "]"}], ":=", 
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"GT", "[", 
      RowBox[{
       RowBox[{"RandomChoice", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Rectangle", "[", 
             RowBox[{"#", ",", 
              RowBox[{"#", "+", 
               RowBox[{"RandomInteger", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"1", ",", "5"}], "}"}], ",", "2"}], "]"}]}]}], 
             "]"}], "&"}], "@", 
           RowBox[{"RandomInteger", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "5"}], "}"}], ",", "2"}], "]"}]}], ",", 
          RowBox[{"GT", "[", 
           RowBox[{
            RowBox[{"Polygon", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"1", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"2", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
            RowBox[{"ST", "[", 
             RowBox[{"RandomReal", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"1.5", ",", "2.5"}], "}"}], ",", "2"}], "]"}], 
             "]"}]}], "]"}]}], "}"}], "]"}], ",", 
       RowBox[{
        RowBox[{"TT", "[", 
         RowBox[{"RandomReal", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", "2"}], "]"}], "]"}], 
        ".", 
        RowBox[{"RT", "[", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "\[Pi]"}], ",", "\[Pi]"}], "}"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}]}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "256"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "15"}], ",", "15"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "15"}], ",", "15"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8196074719577675`*^9, 3.8196074719597645`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"16844e13-4079-4237-9b66-34a8066e8b4a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FlattenGraphics", "[", "gr_Graphics", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"gr1", ",", "gr2", ",", "gr3", ",", "gr4", ",", "gr5"}], "}"}], 
    ",", 
    RowBox[{
     RowBox[{
      RowBox[{"gr1", "=", 
       RowBox[{"Replace", "[", 
        RowBox[{"gr", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"x1_", ",", "y1_"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"x2_", ",", "y2_"}], "}"}]}], "]"}], "\[RuleDelayed]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"x1", ",", "y1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"x2", ",", "y1"}], "}"}]}], "}"}], "]"}], ",", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"x2", ",", "y1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"x2", ",", "y2"}], "}"}]}], "}"}], "]"}], ",", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"x2", ",", "y2"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"x1", ",", "y2"}], "}"}]}], "}"}], "]"}], ",", 
              RowBox[{"Line", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"x1", ",", "y2"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"x1", ",", "y1"}], "}"}]}], "}"}], "]"}]}], "}"}]}],
            ",", 
           RowBox[{
            RowBox[{"Polygon", "[", "a__", "]"}], "\[RuleDelayed]", 
            RowBox[{"Line", "/@", 
             RowBox[{"Partition", "[", 
              RowBox[{"a", ",", "2", ",", "1", ",", "1"}], "]"}]}]}]}], "}"}],
          ",", "All"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"gr2", "=", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{"gr1", ",", 
         RowBox[{"Rotate", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"{", "}"}], "}"}], ",", "_", ",", "_"}], "]"}], ",", 
         "All"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"gr3", "=", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{"gr2", ",", 
         RowBox[{"Translate", "[", 
          RowBox[{
           RowBox[{"{", "}"}], ",", "_"}], "]"}], ",", "All"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"gr4", "=", 
       RowBox[{"Replace", "[", 
        RowBox[{
         RowBox[{"List", "@", "gr3"}], ",", 
         RowBox[{
          RowBox[{"GeometricTransformation", "[", 
           RowBox[{"g__", ",", 
            RowBox[{"{", 
             RowBox[{"m__", ",", "v__"}], "}"}]}], "]"}], "\[RuleDelayed]", 
          RowBox[{"Replace", "[", 
           RowBox[{"g", ",", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"x_Integer", "|", "x_Real"}], ",", 
               RowBox[{"y_Integer", "|", "y_Real"}]}], "}"}], 
             "\[RuleDelayed]", 
             RowBox[{
              RowBox[{"m", ".", 
               RowBox[{"{", 
                RowBox[{"x", ",", "y"}], "}"}]}], "+", "v"}]}], ",", "All"}], 
           "]"}]}], ",", 
         RowBox[{"-", "1"}]}], "]"}]}], ";"}], ";", "\[IndentingNewLine]", 
     RowBox[{"gr5", "=", 
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"Cases", "[", 
         RowBox[{"gr4", ",", "_Line", ",", "All"}], "]"}], ",", 
        RowBox[{"Options", "@", "gr"}]}], "]"}]}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8196074766088953`*^9, 3.8196074766099296`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"09460944-cd7c-4564-adc7-49fcc2154a77"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GraphicsTransformation2Origin", "[", "gr_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"grF", ",", "firstLine", ",", "len", ",", "tf"}], "}"}], ",", 
     RowBox[{
      RowBox[{"firstLine", "=", 
       RowBox[{"gr", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"len", "=", 
       RowBox[{"EuclideanDistance", "@@", "firstLine"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tf", "=", 
       RowBox[{
        RowBox[{"FindGeometricTransform", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"len", ",", "0"}], "}"}]}], "}"}], ",", "firstLine"}], 
         "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"tf", ",", 
        RowBox[{"Graphics", "@", 
         RowBox[{"Replace", "[", 
          RowBox[{
           RowBox[{"gr", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"x_Integer", "|", "x_Real"}], ",", 
              RowBox[{"y_Integer", "|", "y_Real"}]}], "}"}], "\[RuleDelayed]", 
            RowBox[{"tf", "@", 
             RowBox[{"{", 
              RowBox[{"x", ",", "y"}], "}"}]}]}], ",", "All"}], "]"}]}]}], 
       "}"}]}]}], "]"}]}], "\[IndentingNewLine]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.819607480821968*^9, 3.8196074808249364`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"bb7c8775-3550-4272-a642-8c14d3f57820"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GraphicsTransform2Site", "[", 
   RowBox[{"gr_", ",", "tf_"}], "]"}], ":=", 
  RowBox[{"Graphics", "[", 
   RowBox[{
    RowBox[{"Replace", "[", 
     RowBox[{
      RowBox[{"gr", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x_Integer", "|", "x_Real"}], ",", 
         RowBox[{"y_Integer", "|", "y_Real"}]}], "}"}], "\[RuleDelayed]", 
       RowBox[{"tf", "@", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}]}]}], ",", "All"}], "]"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "256"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "15"}], ",", "15"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "15"}], ",", "15"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8196074870430856`*^9, 3.8196074870440855`*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"ac8830b1-0049-46bc-95d6-22acda303e3f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Graphics2Graph", "[", "gr_Graphics", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "gr6", ",", "coords", ",", "vertices", ",", "rules", ",", "edges", ",", 
      "graph"}], "}"}], ",", 
    RowBox[{
     RowBox[{"gr6", "=", 
      RowBox[{"First", "@", 
       RowBox[{"FlattenGraphics", "@", "gr"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"coords", "=", 
      RowBox[{"DeleteDuplicates", "@", 
       RowBox[{"Cases", "[", 
        RowBox[{"gr6", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"x_Integer", "|", "x_Real"}], ",", 
            RowBox[{"y_Integer", "|", "y_Real"}]}], "}"}], "\[RuleDelayed]", 
          RowBox[{"1.", 
           RowBox[{"{", 
            RowBox[{"x", ",", "y"}], "}"}]}]}], ",", "All"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"vertices", "=", 
      RowBox[{"Range", "@", 
       RowBox[{"Length", "@", "coords"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"rules", "=", 
      RowBox[{"Thread", "[", 
       RowBox[{"coords", "\[Rule]", "vertices"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"edges", "=", 
      RowBox[{"Cases", "[", 
       RowBox[{
        RowBox[{"Replace", "[", 
         RowBox[{"gr6", ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"x_Integer", "|", "x_Real"}], ",", 
             RowBox[{"y_Integer", "|", "y_Real"}]}], "}"}], "\[RuleDelayed]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1.", 
               RowBox[{"{", 
                RowBox[{"x", ",", "y"}], "}"}]}], ")"}], "/.", "rules"}], 
            ")"}]}], ",", "All"}], "]"}], ",", 
        RowBox[{"a_Line", "\[RuleDelayed]", 
         RowBox[{"DirectedEdge", "@@", 
          RowBox[{"First", "@", "a"}]}]}], ",", "1"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"graph", "=", 
      RowBox[{"Graph", "[", 
       RowBox[{"vertices", ",", "edges", ",", 
        RowBox[{"VertexCoordinates", "\[Rule]", "coords"}]}], "]"}]}]}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.8196074925215306`*^9, 3.819607492524535*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"9a7bde84-5ada-44ac-a3a8-02902daa25eb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Graph2Turtle", "[", "gr_Graph", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"vl", ",", "el", ",", "cl", ",", "elC", ",", "ll", ",", "al"}], 
     "}"}], ",", 
    RowBox[{
     RowBox[{"vl", "=", 
      RowBox[{"VertexList", "@", "gr"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"el", "=", 
      RowBox[{"List", "@@@", 
       RowBox[{"EdgeList", "@", "gr"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"cl", "=", 
      RowBox[{"PropertyValue", "[", 
       RowBox[{"gr", ",", "VertexCoordinates"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"elC", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Part", "[", 
         RowBox[{"cl", ",", "#"}], "]"}], "&"}], "/@", "el"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ll", "=", 
      RowBox[{"EuclideanDistance", "@@@", "elC"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"al", "=", 
      RowBox[{"Prepend", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "-", 
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], "&"}], "/@", 
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"PlanarAngle", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", 
                  RowBox[{"{", 
                   RowBox[{"1", ",", "0"}], "}"}]}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], "]"}], "&"}], "/@",
             "elC"}], ",", "2", ",", "1"}], "]"}]}], ",", "0"}], "]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{"ll", ",", "al"}], "}"}], "]"}]}]}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.819607499020676*^9, 3.8196074990226755`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"5373ae8c-4f1a-4475-8b25-b20d9cc578ac"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Turtle2Graphics", "[", "tCode_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tPos", ",", "tAngle", ",", "tPosA"}], "}"}], ",", 
     RowBox[{
      RowBox[{"tPos", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"tCode", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "0"}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tAngle", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Graphics", "[", 
       RowBox[{
        RowBox[{"FoldList", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"tPosA", "=", "tPos"}], ";", "\[IndentingNewLine]", 
             RowBox[{"tAngle", "=", 
              RowBox[{"tAngle", "+", 
               RowBox[{"#2", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"tPos", "=", 
              RowBox[{"tPosA", "+", 
               RowBox[{
                RowBox[{"RotationTransform", "[", "tAngle", "]"}], "@", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"#2", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], ",", "0"}], "}"}]}]}]}], 
             ";", "\[IndentingNewLine]", 
             RowBox[{"Line", "[", 
              RowBox[{"{", 
               RowBox[{"tPosA", ",", "tPos"}], "}"}], "]"}]}], ")"}], "&"}], 
          ",", 
          RowBox[{"Line", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}], ",", "tPos"}], "}"}], "]"}], 
          ",", 
          RowBox[{"Rest", "@", "tCode"}]}], "]"}], ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"PlotRange", "\[Rule]", "10"}]}], "]"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.819607506096613*^9, 3.819607506099614*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"6313eb91-91c9-42f1-97fa-0e7b42fe323c"]
}, Closed]],

Cell[CellGroupData[{

Cell["1\tprepare datasets", "Subsubsection",
 CellChangeTimes->{{3.8196075600921392`*^9, 
  3.819607565365523*^9}},ExpressionUUID->"d37f2b0d-6c17-49f9-848a-\
e16b7be160c2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"gr", "=", 
  RowBox[{"RandomGraphic", "[", "]"}]}]], "Input",
 CellChangeTimes->{{3.819607570176427*^9, 3.8196075701804495`*^9}},
 CellLabel->
  "In[386]:=",ExpressionUUID->"59e7f742-fd48-444d-b85e-ec54befdcee5"],

Cell[BoxData[
 GraphicsBox[
  GeometricTransformationBox[
   GeometricTransformationBox[
    PolygonBox[{{0, 0}, {1, 1}, {2, 0}}], {{{1.662161688523846, 0.}, {0., 
     2.4341837942849986`}}, {0., 0.}}], {{{
    0.691179666417094, -0.7226829655745004}, {0.7226829655745004, 
    0.691179666417094}}, {-3.7668132288677008`, 3.121139504393227}}],
  Frame->True,
  ImageSize->256,
  PlotRange->{{-15, 15}, {-15, 15}}]], "Output",
 CellChangeTimes->{{3.81960757103971*^9, 3.8196075780750685`*^9}},
 CellLabel->
  "Out[386]=",ExpressionUUID->"b102be7d-f2d5-41dd-ab14-26ba6793af92"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Batch", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"gr", ",", "tf", ",", "gr1", ",", "tur"}], "}"}], ",", 
      RowBox[{
       RowBox[{"gr", "=", 
        RowBox[{"RandomGraphic", "[", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"tf", ",", "gr1"}], "}"}], "=", 
        RowBox[{"GraphicsTransformation2Origin", "@", 
         RowBox[{"FlattenGraphics", "@", "gr"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"tur", "=", 
        RowBox[{"Graph2Turtle", "@", 
         RowBox[{"Graphics2Graph", "[", "gr1", "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Most", "@", "#"}], "\[Rule]", 
            RowBox[{"Last", "@", "#"}]}], ",", "tf"}], "}"}], "&"}], "@", 
        "tur"}]}]}], "]"}], "&"}], "/@", 
   RowBox[{"Range", "@", "n"}]}]}]], "Input",
 CellChangeTimes->{{3.8196075838587604`*^9, 3.8196075838627625`*^9}},
 CellLabel->
  "In[387]:=",ExpressionUUID->"3f50d9ac-4dc9-493f-b723-e002e95c325f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Batch", "@", "3"}]], "Input",
 CellChangeTimes->{{3.819607589641935*^9, 3.819607591894683*^9}},
 CellLabel->
  "In[388]:=",ExpressionUUID->"416e789c-dfa9-497a-85e3-3d2330210caa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"3.3794990631489417`", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3.3794990631489417`", ",", 
          RowBox[{"-", "1.5315397408183191`"}]}], "}"}]}], "}"}], "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"4.872216904927308`", ",", 
        RowBox[{"-", "2.3758227831806336`"}]}], "}"}]}], ",", 
     RowBox[{"TransformationFunction", "[", 
      RowBox[{"(", 
       TagBox[GridBox[{
          {"0.4939164393150508`", 
           RowBox[{"-", "0.8695093737127518`"}], "2.685051983851361`"},
          {"0.8695093737127518`", "0.49391643931505064`", 
           RowBox[{"-", "1.9948086729204784`"}]},
          {"0.`", "0.`", "1.`"}
         },
         AutoDelete->False,
         GridBoxDividers->{
          "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
           "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        #& ], ")"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2.9325651828397588`", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2.9325651828397574`", ",", "4.735110030664137`"}], "}"}]}], 
       "}"}], "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"4.1941200211450544`", ",", 
        RowBox[{"-", "2.3675550153320684`"}]}], "}"}]}], ",", 
     RowBox[{"TransformationFunction", "[", 
      RowBox[{"(", 
       TagBox[GridBox[{
          {"0.10367305541357785`", "0.9946114304497073`", 
           "3.043771027588183`"},
          {
           RowBox[{"-", "0.9946114304497071`"}], "0.103673055413578`", 
           "2.769342985959588`"},
          {"0.`", "0.`", "1.`"}
         },
         AutoDelete->False,
         GridBoxDividers->{
          "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
           "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        #& ], ")"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"2.6670439511403368`", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2.6670439511403354`", ",", 
          RowBox[{"-", "1.2545356728674442`"}]}], "}"}]}], "}"}], "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"4.318659619737246`", ",", 
        RowBox[{"-", "2.514324817156071`"}]}], "}"}]}], ",", 
     RowBox[{"TransformationFunction", "[", 
      RowBox[{"(", 
       TagBox[GridBox[{
          {"0.12797247445102222`", 
           RowBox[{"-", "0.9917777199468046`"}], 
           RowBox[{"-", "1.9615961673085969`"}]},
          {"0.9917777199468046`", "0.12797247445102225`", 
           "1.8943459190106045`"},
          {"0.`", "0.`", "1.`"}
         },
         AutoDelete->False,
         GridBoxDividers->{
          "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
           "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        #& ], ")"}], "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.819607592432734*^9},
 CellLabel->
  "Out[388]=",ExpressionUUID->"10750b00-6169-465e-82f5-1542ca9083cc"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataT", "=", 
   RowBox[{"Batch", "@", "100"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataV", "=", 
   RowBox[{"Batch", "@", "10"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.819607604081461*^9, 3.8196076040834603`*^9}},
 CellLabel->
  "In[389]:=",ExpressionUUID->"1bea75a2-35f3-423a-9c32-4c088830d99b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"que", "=", 
   RowBox[{"dataV", "[", 
    RowBox[{"[", 
     RowBox[{"n", ",", "1", ",", "1"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ans", "=", 
   RowBox[{"dataV", "[", 
    RowBox[{"[", 
     RowBox[{"n", ",", "1", ",", "2"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tf", "=", 
   RowBox[{"dataV", "[", 
    RowBox[{"[", 
     RowBox[{"n", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsTransform2Site", "[", 
  RowBox[{
   RowBox[{"Turtle2Graphics", "@", 
    RowBox[{"Append", "[", 
     RowBox[{"que", ",", "ans"}], "]"}]}], ",", 
   RowBox[{"InverseFunction", "@", "tf"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8196076114430637`*^9, 3.8196076114471025`*^9}},
 CellLabel->
  "In[391]:=",ExpressionUUID->"d671f85c-63ac-4961-b079-b6e7cdb3d56d"],

Cell[BoxData[
 GraphicsBox[{
   LineBox[{{-2.4317487747867155`, -1.7284099617566149`}, \
{-3.416208830154594, -4.035512310143093}}], 
   LineBox[{{-3.416208830154594, -4.035512310143093}, {-5.789890952314423, \
-3.224638688988639}}], 
   LineBox[{{-5.789890952314423, -3.224638688988639}, {-2.4317487747867155`, \
-1.7284099617566153`}}]},
  Frame->True,
  ImageSize->256,
  PlotRange->{{-15, 15}, {-15, 15}}]], "Output",
 CellChangeTimes->{3.819607612213418*^9},
 CellLabel->
  "Out[395]=",ExpressionUUID->"ef7ddbc6-7b5c-4ca7-9203-820d8fdc7f53"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["2\tsetup a network", "Subsubsection",
 CellChangeTimes->{{3.8196076494311533`*^9, 
  3.8196076547224813`*^9}},ExpressionUUID->"927cbfc9-7213-4a50-9dec-\
8be455ab2479"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"net", "=", 
  RowBox[{"NetInitialize", "@", 
   RowBox[{"NetChain", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"GatedRecurrentLayer", "[", "12", "]"}], ",", 
       RowBox[{"SequenceLastLayer", "[", "]"}], ",", 
       RowBox[{"LinearLayer", "[", "2", "]"}]}], "}"}], ",", 
     RowBox[{"\"\<Input\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Varying\>\"", ",", "2"}], "}"}]}], ",", 
     RowBox[{"\"\<Output\>\"", "\[Rule]", 
      RowBox[{"{", "2", "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8196076564133606`*^9, 3.819607656415362*^9}, {
  3.8196078691551547`*^9, 3.8196078713402224`*^9}},
 CellLabel->
  "In[420]:=",ExpressionUUID->"df3622ad-6dbf-4c5b-b5b0-2b93c84ced10"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"2\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["3", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "GatedRecurrent", "Arrays" -> 
                    Association[
                    "InputGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{12, 2}], 
                    "InputGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{12, 12}], 
                    "InputGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{12}], 
                    "ResetGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{12, 2}], 
                    "ResetGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{12, 12}], 
                    "ResetGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{12}], 
                    "MemoryGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{12, 2}], 
                    "MemoryGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{12, 12}], 
                    "MemoryGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{12}]], "Parameters" -> 
                    Association[
                    "OutputSize" -> 12, "Dropout" -> 
                    NeuralNetworks`ValidatedParameter[None], "$InputSize" -> 
                    2, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1858808580]], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1858808580], 2}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1858808580], 12}, 
                    NeuralNetworks`RealT]], "States" -> 
                    Association[
                    "State" -> 
                    NeuralNetworks`TensorT[{12}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "SequenceLast", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1858808580], 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{12}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{2, 12}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{2}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {2}, "$OutputSize" -> 2, 
                    "$InputSize" -> 12, "$InputDimensions" -> {12}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{12}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1858808580], 2}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]], 
                    "InteriorStates" -> 
                    Association[{1, "State"} -> 
                    NeuralNetworks`NetPath["Nodes", "1", "States", "State"]]],
                    NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"2\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["GatedRecurrentLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"12\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SequenceLastLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"12\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8196076580733995`*^9, 3.8196078719240456`*^9},
 CellLabel->
  "Out[420]=",ExpressionUUID->"c851464a-7429-45c0-9912-61eec343fd15"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"net", "@", 
  RowBox[{"dataV", "[", 
   RowBox[{"[", 
    RowBox[{"2", ",", "1", ",", "1"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.819607666574741*^9, 3.8196076665784416`*^9}},
 CellLabel->
  "In[397]:=",ExpressionUUID->"7f67f64a-75aa-49ec-9748-c8649c7af248"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.13432252407073975`", ",", "0.11663329601287842`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8196076672567377`*^9},
 CellLabel->
  "Out[397]=",ExpressionUUID->"3261e2a8-7b68-42a0-9112-b231a69b3818"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"que", "=", 
   RowBox[{"dataV", "[", 
    RowBox[{"[", 
     RowBox[{"n", ",", "1", ",", "1"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ans", "=", 
   RowBox[{"net", "@", 
    RowBox[{"dataV", "[", 
     RowBox[{"[", 
      RowBox[{"n", ",", "1", ",", "1"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tf", "=", 
   RowBox[{"dataV", "[", 
    RowBox[{"[", 
     RowBox[{"n", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsTransform2Site", "[", 
  RowBox[{
   RowBox[{"Turtle2Graphics", "@", 
    RowBox[{"Append", "[", 
     RowBox[{"que", ",", "ans"}], "]"}]}], ",", 
   RowBox[{"InverseFunction", "@", "tf"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8196076714490213`*^9, 3.819607671451023*^9}},
 CellLabel->
  "In[398]:=",ExpressionUUID->"5a03cfdf-6f2f-45a3-99da-9812dbae1a64"],

Cell[BoxData[
 GraphicsBox[{
   LineBox[{{2.7903839487525346`, -1.925649289851595}, {
    4.532581258843662, -0.050580691083496054`}}], 
   LineBox[{{4.532581258843662, -0.050580691083496054`}, {
    5.8168417699184065`, -2.264583549498308}}], 
   LineBox[{{5.8168417699184065`, -2.264583549498308}, {
    5.897302287321095, -2.3721411880556236`}}]},
  Frame->True,
  ImageSize->256,
  PlotRange->{{-15, 15}, {-15, 15}}]], "Output",
 CellChangeTimes->{3.819607672092269*^9},
 CellLabel->
  "Out[402]=",ExpressionUUID->"1dbb2625-6159-4b4f-a6ab-c0a4dbcfcc81"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["3\ttrain and validate", "Subsubsection",
 CellChangeTimes->{{3.8196076851078205`*^9, 
  3.819607689307242*^9}},ExpressionUUID->"2d4e947b-68df-4ab1-84d8-\
9e29a548ec6e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"netT", "=", 
   RowBox[{"NetTrain", "[", 
    RowBox[{"net", ",", 
     RowBox[{"dataT", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "All", ",", 
     RowBox[{"ValidationSet", "\[Rule]", 
      RowBox[{"dataT", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8196076910140743`*^9, 3.8196076910190897`*^9}},
 CellLabel->
  "In[421]:=",ExpressionUUID->"b4969a5b-9716-447c-bcf1-457b7af07b39"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"netT", "[", "\"\<LossPlot\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"netT", "[", "\"\<RoundMeasurements\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"netF", "=", 
  RowBox[{"netT", "[", "\"\<TrainedNet\>\"", "]"}]}]}], "Input",
 CellChangeTimes->{{3.8196077297009354`*^9, 3.819607729702935*^9}},
 CellLabel->
  "In[404]:=",ExpressionUUID->"2a600eca-2fd1-492f-92b8-20fdd61f66fa"],

Cell[BoxData[
 TemplateBox[{GridBox[{{"", 
      ItemBox["\"rounds\"", DefaultBaseStyle -> "LabeledLabel"]}, {
      RotationBox[
       ItemBox["\"loss\"", DefaultBaseStyle -> "LabeledLabel"], BoxRotation -> 
       1.5708], 
      GraphicsBox[{
        AbsoluteThickness[1.25], {{
          Hue[0.083, 1., 1.], 
          LineBox[CompressedData["
1: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
K56K0H9/Vv2VBTd+FY/5NonQ/wDTWunF
           "]]}, {}}, {{
          Hue[0.59, 0.7, 0.75], 
          LineBox[CompressedData["
1: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
fvzvn1WTTsL6Hd86r5j34/8BdETqfQ==
           "]]}, {}}}, Prolog -> {{
          InsetBox[
           FormBox["500", TraditionalForm], 
           Offset[{-2, -2}, {500., 1.1300000000000001`}], {1., 1.}], 
          InsetBox[
           FormBox["1000", TraditionalForm], 
           Offset[{-2, -2}, {1000., 1.1300000000000001`}], {1., 1.}], 
          InsetBox[
           FormBox["1500", TraditionalForm], 
           Offset[{-2, -2}, {1500., 1.1300000000000001`}], {1., 1.}], 
          InsetBox[
           FormBox["2000", TraditionalForm], 
           Offset[{-2, -2}, {2000., 1.1300000000000001`}], {1., 1.}], 
          InsetBox[
           FormBox["2500", TraditionalForm], 
           Offset[{-2, -2}, {2500., 1.1300000000000001`}], {1., 1.}], 
          InsetBox[
           FormBox["3000", TraditionalForm], 
           Offset[{-2, -2}, {3000., 1.1300000000000001`}], {1., 1.}]}, {
          InsetBox[
           FormBox[
            
            TemplateBox[{"10", "\"-1\""}, "Superscript", SyntaxForm -> 
             SuperscriptBox], TraditionalForm], 
           Offset[{3, 0}, {0, -1.}], {-1, -1.}], 
          InsetBox[
           FormBox["\"1\"", TraditionalForm], 
           Offset[{3, 0}, {0, 0.}], {-1, -1.}], 
          InsetBox[
           FormBox["\"10\"", TraditionalForm], 
           Offset[{3, 0}, {0, 1.}], {-1, -1.}]}}, 
       PlotRange -> {{0, 1604.125}, {-1.9300000000000002`, 
         1.1300000000000001`}}, ImageSize -> {302, 182.}, 
       GridLines -> {{500., 1000., 1500., 2000., 2500., 3000.}, {{-2., 
           GrayLevel[0.3001]}, {-1., 
           GrayLevel[0.3001]}, {0., 
           GrayLevel[0.3001]}, {1., 
           GrayLevel[0.3001]}, {-1.6989700043360185`, 
           GrayLevel[0.8501]}, {-1.3979400086720375`, 
           GrayLevel[0.8501]}, {-1.2218487496163564`, 
           GrayLevel[0.8501]}, {-1.0969100130080565`, 
           GrayLevel[0.8501]}, {-0.6989700043360187, 
           GrayLevel[0.8501]}, {-0.39794000867203755`, 
           GrayLevel[0.8501]}, {-0.22184874961635626`, 
           GrayLevel[0.8501]}, {-0.09691001300805638, 
           GrayLevel[0.8501]}, {0.30102999566398114`, 
           GrayLevel[0.8501]}, {0.6020599913279623, 
           GrayLevel[0.8501]}, {0.7781512503836435, 
           GrayLevel[0.8501]}, {0.9030899869919434, 
           GrayLevel[0.8501]}, {1.301029995663981, 
           GrayLevel[0.8501]}, {1.6020599913279623`, 
           GrayLevel[0.8501]}, {1.7781512503836434`, 
           GrayLevel[0.8501]}, {1.9030899869919433`, 
           GrayLevel[0.8501]}}}, Frame -> True, Axes -> None, AspectRatio -> 
       Full, BaseStyle -> {
        FontFamily -> "Verdana", FontSize -> 8, FontColor -> GrayLevel[0.5], 
         ScriptSizeMultipliers -> 0.2, ScriptMinSize -> 6}, PlotRangePadding -> 
       None, PlotRangeClipping -> True, Background -> GrayLevel[1], 
       FrameStyle -> GrayLevel[0.5], ImagePadding -> 1, FrameTicks -> None]}},
     GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    GridBoxSpacings -> {"Columns" -> {{0.5}}}, 
    BaseStyle -> {
     FontFamily -> "Verdana", FontSize -> 8, FontColor -> GrayLevel[0.4]}],
   FormBox[
    TemplateBox[{"\"validation\"", "\"training\""}, "LineLegend", 
     DisplayFunction -> (FormBox[
       StyleBox[
        StyleBox[
         PaneBox[
          TagBox[
           GridBox[{{
              TagBox[
               GridBox[{{
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.59, 0.7, 0.75]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.59, 0.7, 0.75]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                  GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.083, 1., 1.]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Hue[0.083, 1., 1.]], {}}}, AspectRatio -> Full, 
                   ImageSize -> {20, 10}, PlotRangePadding -> None, 
                   ImagePadding -> Automatic, 
                   BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                GridBoxAlignment -> {
                 "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                AutoDelete -> False, 
                GridBoxDividers -> {
                 "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
                GridBoxSpacings -> {"Columns" -> {{0.5}}, "Rows" -> {{0.8}}}],
                "Grid"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
           "Grid"], Alignment -> Left, AppearanceElements -> None, 
          ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> "ResizeToFit"],
          LineIndent -> 0, StripOnInput -> False], {FontFamily -> "Arial"}, 
        Background -> Automatic, StripOnInput -> False], TraditionalForm]& ), 
     InterpretationFunction :> (RowBox[{"LineLegend", "[", 
        RowBox[{
          RowBox[{"{", 
            RowBox[{
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.59, 0.7, 0.75], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> Hue[0.59, 0.7, 0.5], FrameTicks -> None, 
                  PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 StyleBox[
                  RowBox[{"Hue", "[", 
                    RowBox[{"0.59`", ",", "0.7`", ",", "0.75`"}], "]"}], 
                  NumberMarks -> False]], Appearance -> None, BaseStyle -> {},
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.59, 0.7, 0.75]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Hue[0.59, 0.7, 0.75], Editable -> False, Selectable -> False], 
              ",", 
              InterpretationBox[
               ButtonBox[
                TooltipBox[
                 GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[0.083, 1., 1.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                  "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                  FrameStyle -> Hue[0.083, 1., 0.6666666666666667], 
                  FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                  Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                 StyleBox[
                  RowBox[{"Hue", "[", 
                    RowBox[{"0.083`", ",", "1.`", ",", "1.`"}], "]"}], 
                  NumberMarks -> False]], Appearance -> None, BaseStyle -> {},
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                  If[
                   Not[
                    AbsoluteCurrentValue["Deployed"]], 
                   SelectionMove[Typeset`box$, All, Expression]; 
                   FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                   FrontEnd`Private`$ColorSelectorInitialColor = 
                    Hue[0.083, 1., 1.]; 
                   FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                   MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Hue[0.083, 1., 1.], Editable -> False, Selectable -> False]}], 
            "}"}], ",", 
          RowBox[{"{", 
            RowBox[{#, ",", #2}], "}"}]}], "]"}]& ), Editable -> True], 
    TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.819607730737827*^9},
 CellLabel->
  "Out[404]=",ExpressionUUID->"5bbd44b9-776d-4428-8d4a-d0a3a1d38b91"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"Loss\"\>", "\[Rule]", "0.018160003346935127`"}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.819607730759857*^9},
 CellLabel->
  "Out[405]=",ExpressionUUID->"d3170aa2-e19f-47c6-b416-e05ff5784f81"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open = True), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"2\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox[
                  TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                  "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["3", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, BaselinePosition -> {1, 3}],
           True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open = False), Appearance -> None, 
                Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "1" -> Association[
                    "Type" -> "LongShortTermMemory", "Arrays" -> 
                    Association[
                    "InputGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{12, 2}], 
                    "InputGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{12, 12}], 
                    "InputGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{12}], 
                    "OutputGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{12, 2}], 
                    "OutputGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{12, 12}], 
                    "OutputGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{12}], 
                    "ForgetGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{12, 2}], 
                    "ForgetGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{12, 12}], 
                    "ForgetGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{12}], 
                    "MemoryGateInputWeights" -> 
                    NeuralNetworks`Private`DummyArray[{12, 2}], 
                    "MemoryGateStateWeights" -> 
                    NeuralNetworks`Private`DummyArray[{12, 12}], 
                    "MemoryGateBiases" -> 
                    NeuralNetworks`Private`DummyArray[{12}]], "Parameters" -> 
                    Association[
                    "OutputSize" -> 12, "Dropout" -> 
                    NeuralNetworks`ValidatedParameter[None], "$InputSize" -> 
                    2, "$SequenceLength" -> 
                    NeuralNetworks`LengthVar[1867568860], 
                    "$CellStateConnectedQ" -> False], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1867568860], 2}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1867568860], 12}, 
                    NeuralNetworks`RealT]], "States" -> 
                    Association[
                    "State" -> 
                    NeuralNetworks`TensorT[{12}, NeuralNetworks`RealT], 
                    "CellState" -> 
                    NeuralNetworks`TensorT[{12}, NeuralNetworks`RealT]]], "2" -> 
                    Association[
                    "Type" -> "SequenceLast", "Arrays" -> Association[], 
                    "Parameters" -> Association[], "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1867568860], 12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{12}, NeuralNetworks`RealT]]], "3" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyArray[{2, 12}], 
                    "Biases" -> NeuralNetworks`Private`DummyArray[{2}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {2}, "$OutputSize" -> 2, 
                    "$InputSize" -> 12, "$InputDimensions" -> {12}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{12}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath["Nodes", "1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Nodes", "2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "1", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Nodes", "3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Nodes", "2", "Outputs", "Output"],
                     NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NeuralNetworks`TensorT[{
                    NeuralNetworks`LengthVar[1867568860], 2}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2}, NeuralNetworks`RealT]], 
                    "InteriorStates" -> 
                    Association[{1, "State"} -> 
                    NeuralNetworks`NetPath["Nodes", "1", "States", "State"], {
                    1, "CellState"} -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "1", "States", "CellState"]]], 
                   NeuralNetworks`Private`NetChain`opart, 
                   NeuralNetworks`Private`NetChain`part, 
                   NeuralNetworks`Private`NetChain`selected = Null}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"2\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"1\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LongShortTermMemoryLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"matrix\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    TemplateBox[{"\[Times]", "\"\[Times]\"", 
                    StyleBox["\"n\"", Italic, StripOnInput -> False], 
                    "\"12\""}, "RowWithSeparators"], "\"\[VeryThinSpace]\"", 
                    "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "1"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"2\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SequenceLastLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"12\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "2"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"3\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "3"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", "\":\"", 
                    "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"2\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridFrameMargins -> {{0, 0}, {0, 0}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], BaselinePosition -> 
        Baseline, 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8196077307838235`*^9},
 CellLabel->
  "Out[406]=",ExpressionUUID->"a878f741-b247-408d-8d13-561473e777c8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"dataV", "[", 
  RowBox[{"[", 
   RowBox[{"n", ",", "1"}], "]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"netF", "@", 
  RowBox[{"dataV", "[", 
   RowBox[{"[", 
    RowBox[{"n", ",", "1", ",", "1"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.819607741803215*^9, 3.8196077418072157`*^9}},
 CellLabel->
  "In[407]:=",ExpressionUUID->"5a5b4f77-ac49-44e4-8050-0747813a9ee8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"4.`", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1.0000000000000004`", ",", "1.5707963267948966`"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4.`", ",", "1.5707963267948966`"}], "}"}]}], "}"}], "\[Rule]", 
  RowBox[{"{", 
   RowBox[{"1.`", ",", "1.5707963267948966`"}], "}"}]}]], "Output",
 CellChangeTimes->{3.8196077425483027`*^9},
 CellLabel->
  "Out[408]=",ExpressionUUID->"89813e43-cfb7-4e40-b009-cda0a5ac06fd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.0421369075775146`", ",", "1.6311925649642944`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8196077425598154`*^9},
 CellLabel->
  "Out[409]=",ExpressionUUID->"04dbced5-b7d9-4440-8e17-89c0b7903d48"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "9"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"que", "=", 
   RowBox[{"dataV", "[", 
    RowBox[{"[", 
     RowBox[{"n", ",", "1", ",", "1"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ans", "=", 
   RowBox[{"netF", "@", 
    RowBox[{"dataV", "[", 
     RowBox[{"[", 
      RowBox[{"n", ",", "1", ",", "1"}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tf", "=", 
   RowBox[{"dataV", "[", 
    RowBox[{"[", 
     RowBox[{"n", ",", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsTransform2Site", "[", 
  RowBox[{
   RowBox[{"Turtle2Graphics", "@", 
    RowBox[{"Append", "[", 
     RowBox[{"que", ",", "ans"}], "]"}]}], ",", 
   RowBox[{"InverseFunction", "@", "tf"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8196077472929173`*^9, 3.819607755602592*^9}, {
  3.819607944430444*^9, 3.819607949119054*^9}},
 CellLabel->
  "In[432]:=",ExpressionUUID->"5531a5b2-116d-4015-877d-56435810d1db"],

Cell[BoxData[
 GraphicsBox[{
   LineBox[{{0.9279520187789263, 7.618719449536347}, {0.740865858019761, 
    12.615218100437037`}}], 
   LineBox[{{0.740865858019761, 12.615218100437037`}, {-1.2577336023405143`, 
    12.54038363613337}}], 
   LineBox[{{-1.2577336023405143`, 12.54038363613337}, {-1.0706474415813505`, 
    7.543884985232682}}], 
   LineBox[{{-1.0706474415813505`, 7.543884985232682}, {0.9516926100524665, 
    7.647923620930806}}]},
  Frame->True,
  ImageSize->256,
  PlotRange->{{-15, 15}, {-15, 15}}]], "Output",
 CellChangeTimes->{{3.8196077479197626`*^9, 3.819607756390033*^9}, {
  3.819607941559171*^9, 3.8196079498033004`*^9}},
 CellLabel->
  "Out[436]=",ExpressionUUID->"e5f4c8b8-ff4b-4fcf-8c3a-da3988eb38ff"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1077, 1033},
WindowMargins->{{Automatic, -6}, {-7, Automatic}},
Magnification:>1.5 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 164, 3, 99, "Section",ExpressionUUID->"8e6de6da-88d2-459e-9960-595b98043366"],
Cell[CellGroupData[{
Cell[769, 29, 181, 3, 80, "Subsection",ExpressionUUID->"b5fe443c-8ca0-43d1-a659-8e84c38c7eb2"],
Cell[CellGroupData[{
Cell[975, 36, 227, 4, 67, "Subsubsection",ExpressionUUID->"08c69ad4-661a-46fe-bedf-981af4b43898"],
Cell[1205, 42, 521, 14, 66, "Input",ExpressionUUID->"30b0656e-17be-4bcc-a96c-771b2bcd27b9"],
Cell[1729, 58, 381, 9, 73, "Input",ExpressionUUID->"128af95b-e631-4408-a260-cc1d3cae23f2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2147, 72, 223, 4, 67, "Subsubsection",ExpressionUUID->"5f324979-5acc-4470-b048-dca0b8a5f201"],
Cell[CellGroupData[{
Cell[2395, 80, 762, 17, 98, "Input",ExpressionUUID->"1e720467-1d3d-4823-8d87-85c66a359354"],
Cell[3160, 99, 23278, 478, 127, "Output",ExpressionUUID->"e38c4356-c48a-457e-849c-22607daa3f2c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26475, 582, 249, 5, 43, "Input",ExpressionUUID->"13978a19-bd48-44af-a89e-13eb1cd5137f"],
Cell[26727, 589, 212, 3, 49, "Output",ExpressionUUID->"cd31d837-0f1c-4104-9ddb-93b572459908"]
}, Closed]],
Cell[CellGroupData[{
Cell[26976, 597, 333, 8, 58, "Input",ExpressionUUID->"511f58df-3c3d-425f-95ef-1d159978260d"],
Cell[27312, 607, 436, 11, 49, "Output",ExpressionUUID->"2c2ce34f-2b8e-4791-8d49-8154f2cab859"]
}, Closed]],
Cell[27763, 621, 167, 3, 44, "Text",ExpressionUUID->"b47a5d68-87ec-4efa-b500-025731a9d906"],
Cell[CellGroupData[{
Cell[27955, 628, 369, 8, 66, "Input",ExpressionUUID->"a75b2513-dd4c-47a2-b5ca-a08b716468dd"],
Cell[28327, 638, 10332, 226, 262, "Output",ExpressionUUID->"02e54ef0-9c7e-4fd9-b4e4-8b9280b2c82a"]
}, Closed]],
Cell[CellGroupData[{
Cell[38696, 869, 268, 5, 35, "Input",ExpressionUUID->"70db38bc-9134-4bc0-b4aa-4310949f09ea"],
Cell[38967, 876, 356, 7, 49, "Output",ExpressionUUID->"41fa3be4-fc40-4cea-89a4-4e4b90012528"]
}, Closed]],
Cell[39338, 886, 261, 6, 44, "Text",ExpressionUUID->"660822b3-9112-4e40-b6d9-0b22b20200e8"],
Cell[CellGroupData[{
Cell[39624, 896, 234, 4, 66, "Input",ExpressionUUID->"69e9c136-b2b3-4b1f-bc1c-e026aa0d4bb6"],
Cell[39861, 902, 10312, 226, 262, "Output",ExpressionUUID->"223478b6-b44e-4d16-ac00-20a4fa98b709"]
}, Closed]],
Cell[CellGroupData[{
Cell[50210, 1133, 306, 7, 58, "Input",ExpressionUUID->"73d4f0ed-679a-4839-b2c5-a8d697da8973"],
Cell[50519, 1142, 231, 4, 49, "Output",ExpressionUUID->"b12601be-fd82-4147-8018-768118c10d2f"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[50799, 1152, 225, 4, 67, "Subsubsection",ExpressionUUID->"0b05e136-73cc-466b-a0e3-e6100ee7085d"],
Cell[CellGroupData[{
Cell[51049, 1160, 445, 8, 66, "Input",ExpressionUUID->"789b1914-b102-4928-8a2d-716927c1e8d5"],
Cell[51497, 1170, 24804, 507, 647, "Output",ExpressionUUID->"410e6941-3b7c-4e77-9824-7a90fe8934c6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76338, 1682, 407, 7, 102, "Input",ExpressionUUID->"a104bb69-40fd-4078-a3ab-a18231d3859b"],
Cell[76748, 1691, 23862, 467, 318, "Output",ExpressionUUID->"008c85e5-3f78-4595-9cfe-8e2c8be39413"],
Cell[100613, 2160, 363, 6, 49, "Output",ExpressionUUID->"5920730e-cc9f-40f5-ba69-c6ffeb2d1296"],
Cell[100979, 2168, 23174, 476, 127, "Output",ExpressionUUID->"167481c2-7e81-4391-a4e2-a72c1456b912"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124190, 2649, 631, 14, 131, "Input",ExpressionUUID->"ab025af3-1635-415a-a26f-9a975c18c25f"],
Cell[124824, 2665, 347, 5, 49, "Output",ExpressionUUID->"6491fd13-8fc2-4f67-97b1-1cca0fb39ab2"],
Cell[125174, 2672, 443, 9, 49, "Output",ExpressionUUID->"189a731b-7913-427b-9830-56fd8fb7cf2a"],
Cell[125620, 2683, 405, 7, 49, "Output",ExpressionUUID->"191a9530-22c9-4375-9614-5ad4c9f329e3"],
Cell[126028, 2692, 383, 6, 49, "Output",ExpressionUUID->"f1bcb19f-a4a0-4794-a174-688bf1f3fffb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[126448, 2703, 346, 8, 66, "Input",ExpressionUUID->"9ec15bfc-aa66-489e-9566-b3a21b33c8af"],
Cell[126797, 2713, 397, 9, 49, "Output",ExpressionUUID->"84ff3390-d4a8-45e7-86c8-c2c6c58f9fde"]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[127255, 2729, 177, 3, 80, "Subsection",ExpressionUUID->"0896ffe6-b445-42e6-b5a6-e792f0b453fe"],
Cell[CellGroupData[{
Cell[127457, 2736, 221, 4, 67, "Subsubsection",ExpressionUUID->"f7092fc2-e344-4b64-8718-9c5aa11d3362"],
Cell[127681, 2742, 1278, 37, 66, "Input",ExpressionUUID->"2a192029-780b-40b5-8389-484d90504caa"],
Cell[CellGroupData[{
Cell[128984, 2783, 200, 3, 43, "Input",ExpressionUUID->"173e6acc-6cd0-48ca-a822-5a80c0266e12"],
Cell[129187, 2788, 451, 13, 49, "Output",ExpressionUUID->"2e8ebdac-20ca-4884-ae79-b76408823d16"]
}, Closed]],
Cell[129653, 2804, 353, 8, 65, "Input",ExpressionUUID->"e8eebf0d-2db0-4a49-9445-96d2f52bb8f9"]
}, Closed]],
Cell[CellGroupData[{
Cell[130043, 2817, 224, 4, 53, "Subsubsection",ExpressionUUID->"8413b9e7-13b9-45fd-87ff-4e79006f2f41"],
Cell[CellGroupData[{
Cell[130292, 2825, 818, 20, 66, "Input",ExpressionUUID->"a3418a7e-7fca-4b1f-99db-9672b7d5559e"],
Cell[131113, 2847, 25342, 523, 363, "Output",ExpressionUUID->"87bb283d-bd22-42cc-86ae-696bf0518a39"]
}, Closed]],
Cell[CellGroupData[{
Cell[156492, 3375, 472, 12, 66, "Input",ExpressionUUID->"0dabb395-7c66-46b5-9e98-b7c7ccedbad5"],
Cell[156967, 3389, 322, 8, 49, "Output",ExpressionUUID->"c4fa456a-109f-493f-bc36-4330bbc20f3b"]
}, Closed]],
Cell[CellGroupData[{
Cell[157326, 3402, 286, 7, 66, "Input",ExpressionUUID->"9d3f96d4-9854-4da2-800c-dfbdfd104945"],
Cell[157615, 3411, 359, 9, 49, "Output",ExpressionUUID->"a8b69154-a76b-452e-9d2a-fbf22c3c88c9"]
}, Closed]],
Cell[CellGroupData[{
Cell[158011, 3425, 405, 10, 66, "Input",ExpressionUUID->"c97ba6e3-4bfa-462b-8413-264a4a4f3241"],
Cell[158419, 3437, 192, 3, 82, "Output",ExpressionUUID->"c3a80b28-fcbd-4260-b30c-b99c2178d41a"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[158660, 3446, 226, 4, 53, "Subsubsection",ExpressionUUID->"0f13b753-90ee-4a9f-a4fe-9dab8548afd3"],
Cell[158889, 3452, 358, 8, 66, "Input",ExpressionUUID->"1fd9fc4b-e99c-49ab-8148-e9d6200e89d4"],
Cell[CellGroupData[{
Cell[159272, 3464, 678, 14, 207, "Input",ExpressionUUID->"62b30272-4859-45ee-80e1-c8f07ab3a54a"],
Cell[159953, 3480, 22454, 434, 318, "Output",ExpressionUUID->"e1f819b1-691b-4832-be5e-f8ac9d99195b"],
Cell[182410, 3916, 347, 8, 53, "Output",ExpressionUUID->"789717a3-b537-4430-954b-ceecfb42337e"],
Cell[182760, 3926, 24266, 499, 127, "Output",ExpressionUUID->"dbaba3f5-31ec-45c3-89ce-6fdd7c38c327"],
Cell[207029, 4427, 157, 3, 49, "Output",ExpressionUUID->"1b9b148f-b039-4ad3-a774-e0cd1970c54b"],
Cell[207189, 4432, 3203, 78, 496, "Output",ExpressionUUID->"c701b744-c0a3-421f-946c-00bb78e5b1da"]
}, Closed]],
Cell[CellGroupData[{
Cell[210429, 4515, 231, 5, 43, "Input",ExpressionUUID->"507e47ec-e180-4a80-8932-89faca429b38"],
Cell[210663, 4522, 166, 3, 49, "Output",ExpressionUUID->"251867ea-c894-48b5-b570-626dbca806df"]
}, Closed]],
Cell[CellGroupData[{
Cell[210866, 4530, 277, 6, 43, "Input",ExpressionUUID->"e0a0e295-60de-4bac-99ae-8321493f1a97"],
Cell[211146, 4538, 433, 9, 53, "Output",ExpressionUUID->"c6036df4-7b6c-418f-b9e9-c651ebf69eef"]
}, Closed]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[211640, 4554, 181, 3, 80, "Subsection",ExpressionUUID->"6143deae-e7d0-48d2-a937-60e5d25f6eec"],
Cell[CellGroupData[{
Cell[211846, 4561, 225, 4, 67, "Subsubsection",ExpressionUUID->"3893914c-161c-4c7f-9e72-c6d2cba59074"],
Cell[212074, 4567, 1784, 51, 120, "Input",ExpressionUUID->"c25a45dc-9f0f-4164-b2d6-c0df2ec0ecf5"],
Cell[CellGroupData[{
Cell[213883, 4622, 202, 4, 43, "Input",ExpressionUUID->"6494ac85-dca4-4526-a941-3291a5c26abd"],
Cell[214088, 4628, 5515, 148, 49, "Output",ExpressionUUID->"dfbb5bd7-726e-41bf-bb81-76ec009fc9f4"]
}, Open  ]],
Cell[219618, 4779, 357, 9, 73, "Input",ExpressionUUID->"ef5a5b38-2c42-465c-884a-341ef0ee4362"],
Cell[CellGroupData[{
Cell[220000, 4792, 617, 16, 66, "Input",ExpressionUUID->"71282ac7-e7d0-470f-bebd-c17ef54e1a98"],
Cell[220620, 4810, 47680, 674, 565, "Output",ExpressionUUID->"07ae358f-55bd-460f-837a-f2fa8e3bb378"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[268349, 5490, 220, 4, 53, "Subsubsection",ExpressionUUID->"4d69d429-ff65-4c40-899f-b7d9f7a852c2"],
Cell[CellGroupData[{
Cell[268594, 5498, 840, 21, 66, "Input",ExpressionUUID->"4eedd17f-0fcc-4364-a49d-a49232d7de8d"],
Cell[269437, 5521, 24399, 502, 127, "Output",ExpressionUUID->"fb44c4db-2393-4ff9-8560-09bc524f82e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[293873, 6028, 636, 19, 66, "Input",ExpressionUUID->"c845bf58-407b-404f-b12d-f8870f881647"],
Cell[294512, 6049, 94517, 1318, 564, "Output",ExpressionUUID->"8016cc5b-0e90-45eb-a1f2-18a18c89a738"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[389078, 7373, 224, 4, 53, "Subsubsection",ExpressionUUID->"be8853a3-ce1c-48e4-b94a-40da0cfd248e"],
Cell[389305, 7379, 460, 10, 66, "Input",ExpressionUUID->"92498d61-0ff0-4ac4-ae1a-573d6fe148a2"],
Cell[CellGroupData[{
Cell[389790, 7393, 674, 14, 207, "Input",ExpressionUUID->"b396cb67-1d08-4b07-afe0-d102f915bf66"],
Cell[390467, 7409, 19941, 380, 318, "Output",ExpressionUUID->"b9fc06de-5139-4971-bfc4-f1fd331e3e59"],
Cell[410411, 7791, 350, 8, 49, "Output",ExpressionUUID->"86dcc67a-83cb-4fa0-8910-62e655bf496e"],
Cell[410764, 7801, 24323, 500, 127, "Output",ExpressionUUID->"64e1dbba-b286-4223-a3ba-218e1b7ae318"],
Cell[435090, 8303, 173, 3, 49, "Output",ExpressionUUID->"b1e4fd9a-e5a6-4e18-969f-212542061864"],
Cell[435266, 8308, 15521, 319, 494, "Output",ExpressionUUID->"a47e9689-934e-442e-8525-5d8e6abf3a53"]
}, Open  ]],
Cell[CellGroupData[{
Cell[450824, 8632, 612, 16, 66, "Input",ExpressionUUID->"3d2d0944-039c-4986-9af5-41be3a51a2da"],
Cell[451439, 8650, 47702, 674, 565, "Output",ExpressionUUID->"f7339d2c-2647-42e2-b7e9-7375042aa20b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[499178, 9329, 1326, 36, 149, "Input",ExpressionUUID->"12e88a87-f2af-4d15-bc4a-fd318122efce"],
Cell[500507, 9367, 233, 5, 49, "Output",ExpressionUUID->"8d4a5387-b7d5-4f17-b609-080902f3a99c"],
Cell[500743, 9374, 63395, 1006, 565, "Output",ExpressionUUID->"d69c3a7e-9d48-40fe-b207-9f6e5a79a5cd"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[564199, 10387, 177, 3, 80, "Subsection",ExpressionUUID->"45222b72-819b-4dd6-bbff-14e983e43792"],
Cell[CellGroupData[{
Cell[564401, 10394, 219, 4, 67, "Subsubsection",ExpressionUUID->"2d766b3d-40c8-488f-be5e-50cc3fc951bf"],
Cell[564623, 10400, 2621, 66, 605, "Input",ExpressionUUID->"1964a4f3-4ec1-4ba9-a4e7-62cf9ced6eb8",
 InitializationCell->True],
Cell[567247, 10468, 1442, 37, 286, "Input",ExpressionUUID->"207e8b19-bd82-434d-a8df-19e37ff9760f"],
Cell[CellGroupData[{
Cell[568714, 10509, 200, 3, 43, "Input",ExpressionUUID->"7f11731e-c331-4ca1-a445-28dc0a83c7b5"],
Cell[568917, 10514, 4600, 101, 76, "Output",ExpressionUUID->"b80f4447-b827-4e2a-ba15-9ce0488f68fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[573554, 10620, 517, 13, 156, "Input",ExpressionUUID->"deaf3864-48da-42cc-be77-bd0724bfd79f"],
Cell[574074, 10635, 172, 2, 49, "Output",ExpressionUUID->"8fd45498-e2ce-4cd4-826b-84bc22d2701b"],
Cell[574249, 10639, 260, 4, 49, "Output",ExpressionUUID->"3de6eade-267f-472f-9759-b66fc79cd343"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[574558, 10649, 226, 4, 67, "Subsubsection",ExpressionUUID->"685eb834-09da-4fa7-a1fd-a1f349217fac"],
Cell[CellGroupData[{
Cell[574809, 10657, 1209, 28, 390, "Input",ExpressionUUID->"83525914-4106-41d3-b0fd-fee3ddcea81a"],
Cell[576021, 10687, 24445, 497, 127, "Output",ExpressionUUID->"09cec849-e03d-4c36-bc80-e4687f890839"]
}, Open  ]],
Cell[CellGroupData[{
Cell[600503, 11189, 387, 10, 66, "Input",ExpressionUUID->"8f353d8a-d209-4e7e-80f2-a610875a8189"],
Cell[600893, 11201, 6705, 145, 103, "Output",ExpressionUUID->"feae0142-446f-4a2c-8ee0-182bf64c3c45"]
}, Closed]],
Cell[CellGroupData[{
Cell[607635, 11351, 98612, 1624, 114, "Input",ExpressionUUID->"bf53755a-ba64-421e-9e9f-673e07530fef"],
Cell[706250, 12977, 3354, 61, 565, "Output",ExpressionUUID->"a1786350-0fbc-4f27-8177-b9ab4d319208"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[709653, 13044, 220, 4, 67, "Subsubsection",ExpressionUUID->"2c96d2a0-e690-4f6b-a7e2-a72df2467ef0"],
Cell[709876, 13050, 496, 11, 66, "Input",ExpressionUUID->"58bd4f0c-b33e-47cd-803b-24b9299602b9"],
Cell[CellGroupData[{
Cell[710397, 13065, 411, 8, 102, "Input",ExpressionUUID->"5356716f-2a3b-4977-bab4-667c0a7be938"],
Cell[710811, 13075, 22572, 431, 318, "Output",ExpressionUUID->"698cdc83-dba1-49dc-9c7f-a82dec50bdf7"],
Cell[733386, 13508, 275, 6, 49, "Output",ExpressionUUID->"b94bc50f-e53b-4c74-a1d0-1de05fdb0a01"],
Cell[733664, 13516, 24424, 498, 127, "Output",ExpressionUUID->"7e919c6c-9a07-4985-9295-8f0d4c128b4d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[758125, 14019, 339, 8, 73, "Input",ExpressionUUID->"76ccfc9a-c256-464e-a483-6e8f327235ee"],
Cell[758467, 14029, 1718, 37, 76, "Output",ExpressionUUID->"25422a55-3d56-402e-a6c3-bb009bac341a"],
Cell[760188, 14068, 3935, 69, 68, "Output",ExpressionUUID->"d5e9a3d0-48e0-41b5-a17b-525021680509"]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[764184, 14144, 253, 4, 80, "Subsection",ExpressionUUID->"2d29e14a-4397-46da-9ad0-9f400d5171db"],
Cell[CellGroupData[{
Cell[764462, 14152, 225, 4, 67, "Subsubsection",ExpressionUUID->"a8a0bd7c-54c5-464a-b056-54e827ae2779"],
Cell[764690, 14158, 1228, 32, 257, "Input",ExpressionUUID->"cbb6c041-1469-47c1-99fe-977cf7a10249"],
Cell[CellGroupData[{
Cell[765943, 14194, 200, 3, 43, "Input",ExpressionUUID->"a728773d-ed52-4003-bfa0-16479f2a1356"],
Cell[766146, 14199, 2576, 60, 136, "Output",ExpressionUUID->"5cfd097d-ddc8-4bfb-8819-b295c98daf3a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[768759, 14264, 540, 12, 156, "Input",ExpressionUUID->"b5509d2d-d9a9-404b-95c3-cc5629eb280d"],
Cell[769302, 14278, 310, 5, 82, "Output",ExpressionUUID->"fcdc46f1-14cc-43c5-b35b-a82a521ed7b7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[769661, 14289, 218, 4, 67, "Subsubsection",ExpressionUUID->"2973127c-5259-4caa-9d98-d7a30f1ffc87"],
Cell[CellGroupData[{
Cell[769904, 14297, 1667, 36, 692, "Input",ExpressionUUID->"6e89c906-576b-4dbc-953b-67ac9dee3331"],
Cell[771574, 14335, 39589, 802, 127, "Output",ExpressionUUID->"d7723e02-8edb-4854-9637-d9495a58ed18"]
}, Open  ]],
Cell[CellGroupData[{
Cell[811200, 15142, 281, 6, 43, "Input",ExpressionUUID->"a84f4cee-b41b-4103-a084-efda7c12a127"],
Cell[811484, 15150, 302, 6, 49, "Output",ExpressionUUID->"f5181609-763f-4ee8-b9a4-da5ac623b382"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[811835, 15162, 225, 4, 67, "Subsubsection",ExpressionUUID->"64cec91b-cbcf-4fab-8c77-9d11d434ac82"],
Cell[812063, 15168, 581, 12, 120, "Input",ExpressionUUID->"0df9bf33-c19a-4240-bd28-32e077fd7472"],
Cell[CellGroupData[{
Cell[812669, 15184, 407, 7, 102, "Input",ExpressionUUID->"8d2556e1-20bb-4585-935b-1fc38d3b1829"],
Cell[813079, 15193, 21315, 409, 318, "Output",ExpressionUUID->"90b78aa8-29c3-4d1f-ac62-0d5987a84866"],
Cell[834397, 15604, 367, 6, 49, "Output",ExpressionUUID->"09470d64-7200-4dce-b276-a0a05cf37884"],
Cell[834767, 15612, 39637, 802, 127, "Output",ExpressionUUID->"5e5ee2c9-e26d-4511-b1a4-7f004bc59486"]
}, Open  ]],
Cell[CellGroupData[{
Cell[874441, 16419, 361, 8, 73, "Input",ExpressionUUID->"0aeb58d7-f1dd-4919-863c-c9fe02b14c66"],
Cell[874805, 16429, 913, 21, 76, "Output",ExpressionUUID->"c152a221-6ac7-4edd-83a3-eca7cb7ae36d"],
Cell[875721, 16452, 341, 7, 49, "Output",ExpressionUUID->"9772478b-d328-4a67-b837-e68e2dec411b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[876099, 16464, 243, 5, 66, "Input",ExpressionUUID->"ea9ecebd-124c-4589-a186-6ff5fae253ff"],
Cell[876345, 16471, 182, 3, 49, "Output",ExpressionUUID->"fae0699d-ddd0-4ec6-b465-16d9af3d1be7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[876564, 16479, 1131, 29, 207, "Input",ExpressionUUID->"0585883f-79f6-481d-961d-dd10725ead7d"],
Cell[877698, 16510, 287, 6, 49, "Output",ExpressionUUID->"04662da4-8274-4e60-a336-bd8af674162b"],
Cell[877988, 16518, 287, 6, 49, "Output",ExpressionUUID->"cdef8ad0-f320-4539-931f-ad146e71ae14"],
Cell[878278, 16526, 1328, 35, 195, "Output",ExpressionUUID->"fc5296ff-8d13-42b4-b829-cc377c1dc697"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[879667, 16568, 356, 7, 80, "Subsection",ExpressionUUID->"9f8a02cd-8a2b-4827-84c8-791cf8cc6fe1"],
Cell[CellGroupData[{
Cell[880048, 16579, 172, 3, 67, "Subsubsection",ExpressionUUID->"7f09ba8f-eb32-408c-8ce9-05bd8c495183"],
Cell[880223, 16584, 1137, 31, 228, "Input",ExpressionUUID->"c9bd15ef-4e2a-4729-aec1-b1e9303dff07"],
Cell[CellGroupData[{
Cell[881385, 16619, 200, 3, 43, "Input",ExpressionUUID->"9686216e-ec59-42b9-b57c-893721bc7cfc"],
Cell[881588, 16624, 3069, 65, 76, "Output",ExpressionUUID->"704a814c-d06f-4422-9e08-6fa48181832c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[884694, 16694, 489, 11, 156, "Input",ExpressionUUID->"0aeaced2-cb26-4161-8c89-c2a9967bd0a4"],
Cell[885186, 16707, 265, 4, 82, "Output",ExpressionUUID->"57332fab-7730-440e-98da-20805b9420e7"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[885500, 16717, 221, 4, 67, "Subsubsection",ExpressionUUID->"8f017fd1-afb0-4f62-8b0e-e325ef0d472a"],
Cell[CellGroupData[{
Cell[885746, 16725, 1888, 41, 768, "Input",ExpressionUUID->"7065a5ff-db7f-49d6-9a71-4f64eb1e4f9d"],
Cell[887637, 16768, 40719, 823, 127, "Output",ExpressionUUID->"0f072778-4505-4da8-82d7-e31197412b3b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[928393, 17596, 369, 9, 73, "Input",ExpressionUUID->"53ee433c-bd48-4ba9-9f86-31970925226a"],
Cell[928765, 17607, 1110, 23, 76, "Output",ExpressionUUID->"4c5eb095-a4bf-4460-ae9f-4d3a2133f159"],
Cell[929878, 17632, 166, 3, 49, "Output",ExpressionUUID->"a577d46e-78cd-4af0-87c0-34757e08f2d5"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[930093, 17641, 174, 3, 67, "Subsubsection",ExpressionUUID->"dc95f655-86c2-435e-bcfa-7aee0e385f5c"],
Cell[930270, 17646, 534, 11, 120, "Input",ExpressionUUID->"cf4e37c9-56e7-4fa6-b928-dcdd5c2a1679"],
Cell[CellGroupData[{
Cell[930829, 17661, 407, 7, 102, "Input",ExpressionUUID->"18ac8c2d-6300-4756-970e-47b8b01737f6"],
Cell[931239, 17670, 22532, 436, 318, "Output",ExpressionUUID->"2f09444c-0251-444f-842d-29a220e4dec3"],
Cell[953774, 18108, 390, 8, 49, "Output",ExpressionUUID->"86f83ba1-911a-4378-b9d9-493bc5a7861c"],
Cell[954167, 18118, 40743, 824, 127, "Output",ExpressionUUID->"97029bc6-819d-4176-a14c-24dc2b039194"]
}, Open  ]],
Cell[CellGroupData[{
Cell[994947, 18947, 337, 7, 73, "Input",ExpressionUUID->"26907890-46b6-45c3-bd02-c48309fa5169"],
Cell[995287, 18956, 762, 16, 76, "Output",ExpressionUUID->"46bcd23b-80ae-4d9c-bb42-0a98e4c89c34"],
Cell[996052, 18974, 184, 2, 49, "Output",ExpressionUUID->"b623ac44-33d3-4379-bd00-c3c313465bd2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[996273, 18981, 388, 9, 73, "Input",ExpressionUUID->"d3bddf20-6af2-4d08-b1af-3e2049383830"],
Cell[996664, 18992, 766, 16, 76, "Output",ExpressionUUID->"5d7799a2-d050-4435-b22d-df2506cc4879"],
Cell[997433, 19010, 365, 7, 53, "Output",ExpressionUUID->"28600470-b78b-4351-b575-2a6d0c968ffb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[997835, 19022, 325, 6, 66, "Input",ExpressionUUID->"01d93fb6-e070-41e1-99e0-0fff4a9b4308"],
Cell[998163, 19030, 8300, 180, 193, "Output",ExpressionUUID->"ade87099-e6a2-4fa6-a848-74b1d9fcbaf8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1006500, 19215, 348, 6, 66, "Input",ExpressionUUID->"d58654c5-ba36-4708-a99a-0793bea61419"],
Cell[1006851, 19223, 221, 4, 49, "Output",ExpressionUUID->"d8d3723a-2d74-4313-bc8f-5971822685c0"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1007133, 19234, 235, 4, 80, "Subsection",ExpressionUUID->"60d10217-fa4c-4694-826d-e9aca04b2461"],
Cell[CellGroupData[{
Cell[1007393, 19242, 172, 3, 67, "Subsubsection",ExpressionUUID->"0a580a50-d54b-4d0f-9ff4-45e90bda74c6"],
Cell[CellGroupData[{
Cell[1007590, 19249, 326, 8, 66, "Input",ExpressionUUID->"c9eeeb13-8bdd-423f-9303-567c36b64dd2"],
Cell[1007919, 19259, 186, 3, 49, "Output",ExpressionUUID->"4fc7de5f-5740-4f4c-b6ea-2b00b3374b83"]
}, Closed]],
Cell[CellGroupData[{
Cell[1008142, 19267, 553, 17, 66, "Input",ExpressionUUID->"e3655a18-acd7-44f3-9438-067e6019257a"],
Cell[1008698, 19286, 202, 5, 49, "Output",ExpressionUUID->"a1084f89-7a26-4485-8a33-96438abfb075"]
}, Closed]],
Cell[1008915, 19294, 1232, 36, 120, "Input",ExpressionUUID->"47311dae-aa96-4aed-884d-ec75531ae183"],
Cell[1010150, 19332, 357, 9, 73, "Input",ExpressionUUID->"cad23110-dace-424c-91fa-e0b38311a8f4"]
}, Closed]],
Cell[CellGroupData[{
Cell[1010544, 19346, 173, 3, 53, "Subsubsection",ExpressionUUID->"f87588f3-a0ec-4641-9953-1ef706fc7fcb"],
Cell[CellGroupData[{
Cell[1010742, 19353, 1353, 32, 444, "Input",ExpressionUUID->"780dd164-e705-4722-9596-73cb113ab76a"],
Cell[1012098, 19387, 29699, 582, 127, "Output",ExpressionUUID->"7da5a5e0-f92b-4cda-9187-3c7b8c696be9"]
}, Closed]],
Cell[CellGroupData[{
Cell[1041834, 19974, 263, 5, 43, "Input",ExpressionUUID->"d44eb5e0-83aa-4f58-b0e5-673813bef60a"],
Cell[1042100, 19981, 484, 10, 49, "Output",ExpressionUUID->"78795c3d-bc6f-4d06-85a0-becb887a2f14"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[1042633, 19997, 174, 3, 53, "Subsubsection",ExpressionUUID->"127551d9-c4fa-4cdb-8619-7eda5e095fbe"],
Cell[1042810, 20002, 356, 8, 66, "Input",ExpressionUUID->"78b43882-cec0-44c1-9fd1-deccadb620e7"],
Cell[CellGroupData[{
Cell[1043191, 20014, 413, 8, 102, "Input",ExpressionUUID->"34bcfb6e-1b89-424b-86f2-dc3be008cefd"],
Cell[1043607, 20024, 22115, 423, 318, "Output",ExpressionUUID->"385c2609-5f2d-4d60-a1c3-9d99d24e49ee"],
Cell[1065725, 20449, 348, 8, 49, "Output",ExpressionUUID->"128d566e-ecbe-41dc-8639-2f36fa92cd90"],
Cell[1066076, 20459, 29699, 582, 127, "Output",ExpressionUUID->"76950584-d6e9-4d7d-8753-3b31b36d24f4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1095812, 21046, 436, 11, 102, "Input",ExpressionUUID->"b4cdd6b6-26cc-496b-9651-af1340ba990a"],
Cell[1096251, 21059, 199, 4, 49, "Output",ExpressionUUID->"bcb05f7f-332d-43c5-97df-6db944a94529"],
Cell[1096453, 21065, 163, 3, 49, "Output",ExpressionUUID->"66602ab1-2ae1-4446-8a3d-0058c6ab14a1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1096653, 21073, 356, 9, 66, "Input",ExpressionUUID->"7386649f-7cca-4144-a323-f5e3ae2ee22a"],
Cell[1097012, 21084, 174, 3, 49, "Output",ExpressionUUID->"d26ce5b0-97a5-4fc5-9660-ea9a276bd187"]
}, Open  ]],
Cell[1097201, 21090, 152, 3, 43, "Input",ExpressionUUID->"09380cd1-4f11-4a02-bd07-d24ffbac106f"],
Cell[1097356, 21095, 154, 3, 43, "Input",ExpressionUUID->"151470d6-48df-436f-ad45-601b7f2b9818"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1097559, 21104, 242, 4, 80, "Subsection",ExpressionUUID->"57aaa08c-bdb8-4ef9-ad32-1ca6a14c081e"],
Cell[CellGroupData[{
Cell[1097826, 21112, 174, 3, 67, "Subsubsection",ExpressionUUID->"2eb5c181-cf1e-4588-aa0e-1a09d9a9e308"],
Cell[1098003, 21117, 1336, 40, 120, "Input",ExpressionUUID->"d4ebaa9d-0d97-4eb3-a9ef-8558ac380985"],
Cell[CellGroupData[{
Cell[1099364, 21161, 203, 4, 43, "Input",ExpressionUUID->"159c1d9e-ae89-4fae-81ff-7685b2b46fc1"],
Cell[1099570, 21167, 503, 16, 49, "Output",ExpressionUUID->"e07de4e7-a068-456e-8cac-11d7a3361d30"]
}, Open  ]],
Cell[1100088, 21186, 353, 9, 73, "Input",ExpressionUUID->"a90d8891-c7b2-4d13-a574-7cbf7da1b467"]
}, Closed]],
Cell[CellGroupData[{
Cell[1100478, 21200, 171, 3, 53, "Subsubsection",ExpressionUUID->"0a994a6e-732a-4360-a24e-fd6547a80f90"],
Cell[CellGroupData[{
Cell[1100674, 21207, 782, 19, 289, "Input",ExpressionUUID->"88080c40-7757-4a0d-a495-f9d57566b8fb"],
Cell[1101459, 21228, 25139, 507, 127, "Output",ExpressionUUID->"2ff5b9df-0e85-4eb1-9b38-29914d5c9afe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1126635, 21740, 304, 8, 43, "Input",ExpressionUUID->"27b6b450-aa13-455e-8aa5-054a7bdffdbe"],
Cell[1126942, 21750, 214, 5, 49, "Output",ExpressionUUID->"9a276444-6bc3-4666-8793-51dbfce4f4c8"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1127205, 21761, 172, 3, 53, "Subsubsection",ExpressionUUID->"c313c2a0-f174-487b-8270-92c6b310b73a"],
Cell[1127380, 21766, 356, 8, 66, "Input",ExpressionUUID->"c5634858-6e7c-457a-9c41-67cb9d8a1c1f"],
Cell[CellGroupData[{
Cell[1127761, 21778, 411, 8, 102, "Input",ExpressionUUID->"0afad72a-ba55-413f-a0f6-f43d61e2d01c"],
Cell[1128175, 21788, 22995, 461, 318, "Output",ExpressionUUID->"dc089ee7-95ba-4b04-a884-036d51c73423"],
Cell[1151173, 22251, 275, 6, 49, "Output",ExpressionUUID->"ada4682e-2cbf-46d3-bcb4-f82a6b96adce"],
Cell[1151451, 22259, 25137, 507, 127, "Output",ExpressionUUID->"ef0df458-0576-4cae-9f4f-845d53af2b60"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1176625, 22771, 434, 11, 102, "Input",ExpressionUUID->"c9cf216e-3b0e-4a7e-b145-5c059182d471"],
Cell[1177062, 22784, 338, 10, 49, "Output",ExpressionUUID->"d0b8ffb8-5b2a-4acb-bcd0-83b67acdc84a"],
Cell[1177403, 22796, 215, 5, 49, "Output",ExpressionUUID->"c1bf3773-2e96-44e0-aa06-5eeab2c77427"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1177655, 22806, 406, 11, 66, "Input",ExpressionUUID->"0269b778-3a72-4864-83f3-f96cef500cd0"],
Cell[1178064, 22819, 856, 19, 106, "Output",ExpressionUUID->"f6cac88b-8859-40c1-92d5-34df1f74acbc"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1178981, 22845, 189, 3, 80, "Subsection",ExpressionUUID->"e8d4573e-a66f-45b7-8e49-66d52ee1e40d"],
Cell[CellGroupData[{
Cell[1179195, 22852, 169, 3, 67, "Subsubsection",ExpressionUUID->"cacf1de2-fed8-4cb8-844b-97b878d80dfd"],
Cell[1179367, 22857, 522, 12, 252, "Input",ExpressionUUID->"6b522aad-cccf-43ed-b840-7f6543158c75",
 InitializationCell->True],
Cell[1179892, 22871, 2517, 71, 281, "Input",ExpressionUUID->"16844e13-4079-4237-9b66-34a8066e8b4a",
 InitializationCell->True],
Cell[1182412, 22944, 4025, 105, 527, "Input",ExpressionUUID->"09460944-cd7c-4564-adc7-49fcc2154a77",
 InitializationCell->True],
Cell[1186440, 23051, 1770, 47, 285, "Input",ExpressionUUID->"bb7c8775-3550-4272-a642-8c14d3f57820",
 InitializationCell->True],
Cell[1188213, 23100, 1126, 31, 145, "Input",ExpressionUUID->"ac8830b1-0049-46bc-95d6-22acda303e3f",
 InitializationCell->True],
Cell[1189342, 23133, 2330, 61, 362, "Input",ExpressionUUID->"9a7bde84-5ada-44ac-a3a8-02902daa25eb",
 InitializationCell->True],
Cell[1191675, 23196, 2264, 61, 414, "Input",ExpressionUUID->"5373ae8c-4f1a-4475-8b25-b20d9cc578ac",
 InitializationCell->True],
Cell[1193942, 23259, 2095, 55, 342, "Input",ExpressionUUID->"6313eb91-91c9-42f1-97fa-0e7b42fe323c",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[1196074, 23319, 172, 3, 53, "Subsubsection",ExpressionUUID->"d37f2b0d-6c17-49f9-848a-e16b7be160c2"],
Cell[CellGroupData[{
Cell[1196271, 23326, 236, 5, 43, "Input",ExpressionUUID->"59e7f742-fd48-444d-b85e-ec54befdcee5"],
Cell[1196510, 23333, 576, 13, 402, "Output",ExpressionUUID->"b102be7d-f2d5-41dd-ab14-26ba6793af92"]
}, Open  ]],
Cell[1197101, 23349, 1198, 33, 178, "Input",ExpressionUUID->"3f50d9ac-4dc9-493f-b723-e002e95c325f"],
Cell[CellGroupData[{
Cell[1198324, 23386, 202, 4, 43, "Input",ExpressionUUID->"416e789c-dfa9-497a-85e3-3d2330210caa"],
Cell[1198529, 23392, 3507, 94, 280, "Output",ExpressionUUID->"10750b00-6169-465e-82f5-1542ca9083cc"]
}, Open  ]],
Cell[1202051, 23489, 355, 9, 73, "Input",ExpressionUUID->"1bea75a2-35f3-423a-9c32-4c088830d99b"],
Cell[CellGroupData[{
Cell[1202431, 23502, 950, 28, 182, "Input",ExpressionUUID->"d671f85c-63ac-4961-b079-b6e7cdb3d56d"],
Cell[1203384, 23532, 546, 13, 402, "Output",ExpressionUUID->"ef7ddbc6-7b5c-4ca7-9203-820d8fdc7f53"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1203979, 23551, 173, 3, 53, "Subsubsection",ExpressionUUID->"927cbfc9-7213-4a50-9dec-8be455ab2479"],
Cell[CellGroupData[{
Cell[1204177, 23558, 748, 18, 66, "Input",ExpressionUUID->"df3622ad-6dbf-4c5b-b5b0-2b93c84ced10"],
Cell[1204928, 23578, 24537, 495, 127, "Output",ExpressionUUID->"c851464a-7429-45c0-9912-61eec343fd15"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1229502, 24078, 293, 7, 43, "Input",ExpressionUUID->"7f67f64a-75aa-49ec-9748-c8649c7af248"],
Cell[1229798, 24087, 241, 6, 49, "Output",ExpressionUUID->"3261e2a8-7b68-42a0-9112-b231a69b3818"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1230076, 24098, 977, 29, 182, "Input",ExpressionUUID->"5a03cfdf-6f2f-45a3-99da-9812dbae1a64"],
Cell[1231056, 24129, 557, 13, 402, "Output",ExpressionUUID->"1dbb2625-6159-4b4f-a6ab-c0a4dbcfcc81"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1231662, 24148, 174, 3, 53, "Subsubsection",ExpressionUUID->"2d4e947b-68df-4ab1-84d8-9e29a548ec6e"],
Cell[1231839, 24153, 539, 14, 66, "Input",ExpressionUUID->"b4969a5b-9716-447c-bcf1-457b7af07b39"],
Cell[CellGroupData[{
Cell[1232403, 24171, 411, 8, 102, "Input",ExpressionUUID->"2a600eca-2fd1-492f-92b8-20fdd61f66fa"],
Cell[1232817, 24181, 22419, 425, 318, "Output",ExpressionUUID->"5bbd44b9-776d-4428-8d4a-d0a3a1d38b91"],
Cell[1255239, 24608, 273, 6, 49, "Output",ExpressionUUID->"d3170aa2-e19f-47c6-b416-e05ff5784f81"],
Cell[1255515, 24616, 25104, 504, 127, "Output",ExpressionUUID->"a878f741-b247-408d-8d13-561473e777c8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1280656, 25125, 470, 12, 102, "Input",ExpressionUUID->"5a5b4f77-ac49-44e4-8050-0747813a9ee8"],
Cell[1281129, 25139, 518, 14, 49, "Output",ExpressionUUID->"89813e43-cfb7-4e40-b009-cda0a5ac06fd"],
Cell[1281650, 25155, 239, 6, 49, "Output",ExpressionUUID->"04dbced5-b7d9-4440-8e17-89c0b7903d48"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1281926, 25166, 1027, 30, 182, "Input",ExpressionUUID->"5531a5b2-116d-4015-877d-56435810d1db"],
Cell[1282956, 25198, 730, 16, 402, "Output",ExpressionUUID->"e5f4c8b8-ff4b-4fcf-8c3a-da3988eb38ff"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}, Open  ]]
}
]
*)

